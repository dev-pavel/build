{"version":3,"sources":["components/copyright.tsx","store/thunks/auth-thunk.ts","store/selectors/selectors.ts","components/alert.tsx","store/slices/auth-slice.tsx","pages/sign-in/sign-in.tsx","pages/sign-up/sign-up.tsx","store/slices/pick-up-slice.ts","pages/pick-up/steps/from.tsx","pages/pick-up/steps/type.tsx","pages/pick-up/steps/date.tsx","pages/pick-up/steps/from-info.tsx","pages/pick-up/steps/nature.tsx","pages/pick-up/steps/pass.tsx","pages/pick-up/steps/call.tsx","pages/pick-up/steps/to.tsx","components/header.tsx","pages/pick-up/pick-up.tsx","pages/pick-up/check/pick-up-check.tsx","pages/choose/choose.tsx","store/slices/delivery-slice.ts","pages/delivery/steps/to.tsx","pages/delivery/steps/type.tsx","pages/delivery/steps/date.tsx","pages/delivery/steps/from.tsx","pages/delivery/steps/nature.tsx","pages/delivery/steps/pass.tsx","pages/delivery/steps/address.tsx","pages/delivery/steps/call.tsx","pages/delivery/delivery.tsx","pages/delivery/check/delivery-check.tsx","app-router.tsx","store/store.ts","index.tsx"],"names":["Copyright","props","react","Typography","Object","assign","variant","color","align","Link","Date","getFullYear","API_URL","loginThunk","createAsyncThunk","_ref","asyncToGenerator","_regeneratorRuntime","mark","_callee","data","res","wrap","_context","prev","next","axios","post","validateStatus","sent","abrupt","status","stop","_x","apply","this","arguments","registrationThunk","_ref2","_callee2","_context2","_x2","refreshThunk","_ref3","_callee3","_context3","_x3","PickUpSelector","state","pickUp","DeliverySelector","delivery","AuthSelector","auth","CustomAlert","open","setOpen","message","isSuccess","react_default","a","createElement","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","Alert","severity","AuthSlice","createSlice","name","initialState","isAuth","error","isLoading","reducers","setAuth","action","payload","registration","localStorage","setItem","clearError","setLoading","extraReducers","builder","addCase","fulfilled","jwt","actions","SignIn","useSelector","_useState","useState","_useState2","slicedToArray","dispatch","useDispatch","navigate","useNavigate","useEffect","components_alert","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","LockOutlined_default","onSubmit","event","preventDefault","FormData","currentTarget","email","get","password","noValidate","mt","TextField","margin","required","fullWidth","id","label","autoComplete","autoFocus","type","FormControlLabel","control","Checkbox","value","Button","mb","Grid","container","justifyContent","item","onClick","copyright","SignUp","_useState3","_useState4","accept","setAccept","firstName","lastName","company","spacing","xs","sm","checked","onChange","PickUpSlice","step","from","pickUpDate","orderNumber","withContract","companyName","fromLastName","fromFirstName","fromPhone","fromExtraPhone","fromAddress","fromExtraAddress","fromCompanyName","fromPickUpTimeMin","fromPickUpTimeMax","fromDocuments","nature","natureDescription","needPass","call","to","toLastName","toFirstName","toPhone","toExtraPhone","toAddress","toExtraAddress","toCompanyName","toPickUpTimeMin","toPickUpTimeMax","toDocuments","incrementStep","decrementStep","setFromData","setTypeData","setDateData","setFromInfoData","setNatureData","setPassData","setCallData","setToInfoData","From","Fragment","gutterBottom","RadioGroup","aria-labelledby","defaultValue","Radio","Type","_useSelector","withContractStore","date","setDate","_useState5","_useState6","setWithContract","LocalizationProvider","dateAdapter","AdapterDayjs","adapterLocale","DatePicker","e","renderInput","params","disabled","FromInfo","fromPickUpTimeMinStore","fromPickUpTimeMaxStore","_React$useState","React","_React$useState2","setFromPickUpTimeMin","_React$useState3","_React$useState4","setFromPickUpTimeMax","phoneNumber","extraPhoneNumber","address","extraAddress","documents","TimePicker","newValue","Nature","description","multiline","maxRows","placeholder","Pass","pass","Call","To","toPickUpTimeMinStore","toPickUpTimeMaxStore","setToPickUpTimeMin","setToPickUpTimeMax","setTo","target","Header","AppBar","position","elevation","borderBottom","t","concat","palette","divider","Toolbar","noWrap","PickUp","getStepContent","useCallback","steps_from","steps_type","steps_date","from_info","steps_nature","steps_pass","steps_call","steps_to","header","Paper","my","md","p","Stepper","activeStep","alternativeLabel","pt","pb","Array","fill","map","el","i","Step","key","StepLabel","PickUpCheck","success","setSuccess","setError","dayjs","format","objectSpread","then","catch","Choose","size","ready","appNumber","setToData","setAddressData","dateStore","Address","navigation","Delivery","delivery_steps_to","delivery_steps_type","delivery_steps_date","delivery_steps_from","delivery_steps_nature","steps_address","delivery_steps_pass","delivery_steps_call","DeliveryCheck","AppRouter","getItem","style","height","width","CircularProgress","dist","react_router_dist","path","element","choose","pick_up","pick_up_check","delivery_check","replace","sign_in","sign_up","store","configureStore","reducer","DeliverySlice","theme","createTheme","ReactDOM","createRoot","document","getElementById","render","StrictMode","es","ThemeProvider","app_router"],"mappings":"qVAiBeA,EAZY,SAACC,GACxB,OACIC,EAAA,cAACC,EAAA,EAADC,OAAAC,OAAA,CAAYC,QAAQ,QAAQC,MAAM,iBAAiBC,MAAM,UAAaP,GACjE,kBACDC,EAAA,cAACO,EAAA,EAAD,CAAMF,MAAM,WAAZ,yFAEQ,KACP,IAAIG,MAAOC,i0MCRxB,IAAMC,EAAU,iHAEHC,EAAaC,YACtB,aADsC,eAAAC,EAAAX,OAAAY,EAAA,EAAAZ,CAAAa,IAAAC,KAEtC,SAAAC,EAAOC,GAAP,IAAAC,EAAA,OAAAJ,IAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACsBC,IAAMC,KAAKf,EAAU,cAAeQ,EAAM,CAACQ,eAAgB,OADjF,cACUP,EADVE,EAAAM,KAAAN,EAAAO,OAAA,SAGW,CACHC,OAAQV,EAAIU,OACZX,KAAMC,EAAID,OALlB,wBAAAG,EAAAS,SAAAb,MAFsC,gBAAAc,GAAA,OAAAlB,EAAAmB,MAAAC,KAAAC,YAAA,IAY7BC,EAAoBvB,YAC7B,oBAD6C,eAAAwB,EAAAlC,OAAAY,EAAA,EAAAZ,CAAAa,IAAAC,KAE7C,SAAAqB,EAAOnB,GAAP,IAAAC,EAAA,OAAAJ,IAAAK,KAAA,SAAAkB,GAAA,cAAAA,EAAAhB,KAAAgB,EAAAf,MAAA,cAAAe,EAAAf,KAAA,EACsBC,IAAMC,KAAKf,EAAU,qBAAsBQ,EAAM,CAACQ,eAAgB,OADxF,cACUP,EADVmB,EAAAX,KAAAW,EAAAV,OAAA,SAGW,CACHC,OAAQV,EAAIU,OACZX,KAAMC,EAAID,OALlB,wBAAAoB,EAAAR,SAAAO,MAF6C,gBAAAE,GAAA,OAAAH,EAAAJ,MAAAC,KAAAC,YAAA,IAYpCM,EAAe5B,YACxB,eADwC,eAAA6B,EAAAvC,OAAAY,EAAA,EAAAZ,CAAAa,IAAAC,KAExC,SAAA0B,EAAOxB,GAAP,IAAAC,EAAA,OAAAJ,IAAAK,KAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,cAAAoB,EAAApB,KAAA,EACsBC,IAAMC,KAAKf,EAAU,gBAAiBQ,EAAM,CAACQ,eAAgB,OADnF,cACUP,EADVwB,EAAAhB,KAAAgB,EAAAf,OAAA,SAGW,CACHC,OAAQV,EAAIU,OACZX,KAAMC,EAAID,OALlB,wBAAAyB,EAAAb,SAAAY,MAFwC,gBAAAE,GAAA,OAAAH,EAAAT,MAAAC,KAAAC,YAAA,IC5B/BW,EAAiB,SAACC,GAAD,OAAsBA,EAAMC,QAC7CC,EAAmB,SAACF,GAAD,OAAsBA,EAAMG,UAC/CC,EAAe,SAACJ,GAAD,OAAsBA,EAAMK,wBCwBzCC,EAlBgB,SAAAvC,GAAyC,IAAvCwC,EAAuCxC,EAAvCwC,KAAMC,EAAiCzC,EAAjCyC,QAASC,EAAwB1C,EAAxB0C,QAASC,EAAe3C,EAAf2C,UACrD,OACIC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACIC,aAAc,CAACC,SAAU,MAAOC,WAAY,SAC5CV,KAAMA,EACNW,iBAAkB,IAClBC,QAAS,kBAAMX,GAAQ,KAEvBG,EAAAC,EAAAC,cAACO,EAAA,EAAD,CACID,QAAS,kBAAMX,GAAQ,IACvBa,SAAUX,EAAY,UAAY,WAEjCD,GAAW,yGCPtBa,EAAYC,YAAY,CAC1BC,KAAM,OACNC,aAR+B,CAC/BC,QAAQ,EACRC,MAAO,KACPC,WAAW,GAMXC,SAAU,CACNC,QADM,SACE9B,EAAO+B,GACX/B,EAAM0B,OAASK,EAAOC,QACtBhC,EAAM2B,MAAQ,MAElBM,aALM,SAKOjC,GACTkC,aAAaC,QAAQ,OAAQ,QAC7BnC,EAAM0B,QAAS,GAEnBU,WATM,SASKpC,GACPA,EAAM2B,MAAQ,MAElBU,WAZM,SAYKrC,EAAO+B,GACd/B,EAAM4B,UAAYG,EAAOC,UAGjCM,cAAe,SAACC,GACZA,EAAQC,QAAQ3E,EAAW4E,UAAW,SAACzC,EAAO+B,GACb,MAA1BA,EAAOC,QAAQjD,QACdiB,EAAM0B,QAAS,EACf1B,EAAM2B,MAAQ,KAEdO,aAAaC,QAAQ,MAAOJ,EAAOC,QAAQ5D,KAAKsE,OAEhD1C,EAAM0B,QAAS,EACf1B,EAAM2B,MAAQI,EAAOC,QAAQ5D,KAAKqC,WAG1C8B,EAAQC,QAAQnD,EAAkBoD,UAAW,SAACzC,EAAO+B,GACpB,MAA1BA,EAAOC,QAAQjD,QACdiB,EAAM0B,QAAS,EACf1B,EAAM2B,MAAQ,KAEdO,aAAaC,QAAQ,MAAOJ,EAAOC,QAAQ5D,KAAKsE,OAEhD1C,EAAM0B,QAAS,EACf1B,EAAM2B,MAAQI,EAAOC,QAAQ5D,KAAKqC,WAG1C8B,EAAQC,QAAQ9C,EAAa+C,UAAW,SAACzC,EAAO+B,GACf,MAA1BA,EAAOC,QAAQjD,QACdiB,EAAM0B,QAAS,EACf1B,EAAM2B,MAAQ,KACd3B,EAAM4B,WAAY,EAElBM,aAAaC,QAAQ,MAAOJ,EAAOC,QAAQ5D,KAAKsE,OAEhD1C,EAAM0B,QAAS,EACf1B,EAAM2B,MAAQI,EAAOC,QAAQ5D,KAAKqC,gBAMVa,EAAUqB,QAApCP,eAAYC,eACXf,IAAf,QC6CesB,EA/FI,WAAM,IACdjB,EAASkB,YAAYzC,GAArBuB,MADcmB,EAEGC,oBAAS,GAFZC,EAAA5F,OAAA6F,EAAA,EAAA7F,CAAA0F,EAAA,GAEdvC,EAFcyC,EAAA,GAERxC,EAFQwC,EAAA,GAGfE,EAAWC,cACXC,EAAWC,cAwBjB,OAZAC,oBAAU,WACF3B,GACAnB,GAAQ,IAEb,CAACmB,IAEJ2B,oBAAU,WACD/C,GACD2C,EAASd,MAEd,CAAC7B,IAGArD,EAAA,cAAAA,EAAA,cACKqD,GAAQrD,EAAA,cAACqG,EAAD,CAAa9C,QAASkB,EAAOpB,KAAMA,EAAMC,QAASA,IAC3DtD,EAAA,cAACsG,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,MACjCxG,EAAA,cAACyG,EAAA,EAAD,MACAzG,EAAA,cAAC0G,EAAA,EAAD,CACIC,GAAI,CACAC,UAAW,EACXC,QAAS,OACTC,cAAe,SACfC,WAAY,WAGhB/G,EAAA,cAACgH,EAAA,EAAD,CAAQL,GAAI,CAACM,EAAG,EAAGC,QAAS,mBACxBlH,EAAA,cAACmH,EAAAzD,EAAD,OAEJ1D,EAAA,cAACC,EAAA,EAAD,CAAYsG,UAAU,KAAKnG,QAAQ,MAAnC,8EAGAJ,EAAA,cAAC0G,EAAA,EAAD,CAAKH,UAAU,OAAOa,SAzCjB,SAACC,GAClBA,EAAMC,iBACN,IAAMpG,EAAO,IAAIqG,SAASF,EAAMG,eAEhCxB,EAASrF,EAAW,CAChB8G,MAAOvG,EAAKwG,IAAI,SAChBC,SAAUzG,EAAKwG,IAAI,gBAmCmCE,YAAU,EAACjB,GAAI,CAACkB,GAAI,IAC9D7H,EAAA,cAAC8H,EAAA,EAAD,CACIC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTC,GAAG,QACHC,MAAM,QACN7D,KAAK,QACL8D,aAAa,QACbC,WAAS,IAEbrI,EAAA,cAAC8H,EAAA,EAAD,CACIC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACT3D,KAAK,WACL6D,MAAM,uCACNG,KAAK,WACLJ,GAAG,WACHE,aAAa,qBAEjBpI,EAAA,cAACuI,EAAA,EAAD,CACIC,QAASxI,EAAA,cAACyI,EAAA,EAAD,CAAUC,MAAM,WAAWrI,MAAM,YAC1C8H,MAAM,oFAEVnI,EAAA,cAAC2I,EAAA,EAAD,CACIL,KAAK,SACLL,WAAS,EACT7H,QAAQ,YACRuG,GAAI,CAACkB,GAAI,EAAGe,GAAI,IAJpB,oFAQA5I,EAAA,cAAC6I,EAAA,EAAD,CAAMC,WAAS,EAACC,eAAe,UAC3B/I,EAAA,cAAC6I,EAAA,EAAD,CAAMG,MAAI,GACNhJ,EAAA,cAACO,EAAA,EAAD,CAAM0I,QAAS,kBAAM/C,EAAS,aAAa9F,QAAQ,SAC9C,+IAMrBJ,EAAA,cAACkJ,EAAD,CAAWvC,GAAI,CAACkB,GAAI,EAAGe,GAAI,QC2D5BO,EApJI,WAAM,IACd1E,EAASkB,YAAYzC,GAArBuB,MACDyB,EAAWC,cACXH,EAAWC,cAHIL,EAIGC,oBAAS,GAJZC,EAAA5F,OAAA6F,EAAA,EAAA7F,CAAA0F,EAAA,GAIdvC,EAJcyC,EAAA,GAIRxC,EAJQwC,EAAA,GAAAsD,EAKOvD,oBAAS,GALhBwD,EAAAnJ,OAAA6F,EAAA,EAAA7F,CAAAkJ,EAAA,GAKdE,EALcD,EAAA,GAKNE,EALMF,EAAA,GA2CrB,OAZAjD,oBAAU,WACF3B,GACAnB,GAAQ,IAEb,CAACmB,IAEJ2B,oBAAU,WACD/C,GACD2C,EAASd,MAEd,CAAC7B,IAGArD,EAAA,cAAAA,EAAA,cACKqD,GAAQrD,EAAA,cAACqG,EAAD,CAAa9C,QAASkB,EAAOpB,KAAMA,EAAMC,QAASA,IAC3DtD,EAAA,cAACsG,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,MACjCxG,EAAA,cAACyG,EAAA,EAAD,MACAzG,EAAA,cAAC0G,EAAA,EAAD,CACIC,GAAI,CACAC,UAAW,EACXC,QAAS,OACTC,cAAe,SACfC,WAAY,WAGhB/G,EAAA,cAACgH,EAAA,EAAD,CAAQL,GAAI,CAACM,EAAG,EAAGC,QAAS,mBACxBlH,EAAA,cAACmH,EAAAzD,EAAD,OAEJ1D,EAAA,cAACC,EAAA,EAAD,CAAYsG,UAAU,KAAKnG,QAAQ,MAAnC,sEAGAJ,EAAA,cAAC0G,EAAA,EAAD,CAAKH,UAAU,OAAOqB,YAAU,EAACR,SAvD5B,SAACC,GAClBA,EAAMC,iBACN,IAAMpG,EAAO,IAAIqG,SAASF,EAAMG,eAE5BtG,EAAKwG,IAAI,UACTxG,EAAKwG,IAAI,aACTxG,EAAKwG,IAAI,cACTxG,EAAKwG,IAAI,aACTxG,EAAKwG,IAAI,YACT4B,EAGAtD,EAAS7D,EAAkB,CACvBsF,MAAOvG,EAAKwG,IAAI,SAChBC,SAAUzG,EAAKwG,IAAI,YACnB8B,UAAWtI,EAAKwG,IAAI,aACpB+B,SAAUvI,EAAKwG,IAAI,YACnBgC,QAASxI,EAAKwG,IAAI,cAGtBpE,GAAQ,IAmCyDqD,GAAI,CAACkB,GAAI,IAC9D7H,EAAA,cAAC6I,EAAA,EAAD,CAAMC,WAAS,EAACa,QAAS,GACrB3J,EAAA,cAAC6I,EAAA,EAAD,CAAMG,MAAI,EAACY,GAAI,GAAIC,GAAI,GACnB7J,EAAA,cAAC8H,EAAA,EAAD,CACIM,aAAa,aACb9D,KAAK,YACL0D,UAAQ,EACRC,WAAS,EACTC,GAAG,YACHC,MAAM,qBACNE,WAAS,KAGjBrI,EAAA,cAAC6I,EAAA,EAAD,CAAMG,MAAI,EAACY,GAAI,GAAIC,GAAI,GACnB7J,EAAA,cAAC8H,EAAA,EAAD,CACIE,UAAQ,EACRC,WAAS,EACTC,GAAG,WACHC,MAAM,6CACN7D,KAAK,WACL8D,aAAa,iBAGrBpI,EAAA,cAAC6I,EAAA,EAAD,CAAMG,MAAI,EAACY,GAAI,IACX5J,EAAA,cAAC8H,EAAA,EAAD,CACIE,UAAQ,EACRC,WAAS,EACTC,GAAG,UACHC,MAAM,oGACN7D,KAAK,UACL8D,aAAa,aAGrBpI,EAAA,cAAC6I,EAAA,EAAD,CAAMG,MAAI,EAACY,GAAI,IACX5J,EAAA,cAAC8H,EAAA,EAAD,CACIE,UAAQ,EACRC,WAAS,EACTC,GAAG,QACHC,MAAM,QACN7D,KAAK,QACL8D,aAAa,WAGrBpI,EAAA,cAAC6I,EAAA,EAAD,CAAMG,MAAI,EAACY,GAAI,IACX5J,EAAA,cAAC8H,EAAA,EAAD,CACIE,UAAQ,EACRC,WAAS,EACT3D,KAAK,WACL6D,MAAM,uCACNG,KAAK,WACLJ,GAAG,WACHE,aAAa,kBAGrBpI,EAAA,cAAC6I,EAAA,EAAD,CAAMG,MAAI,EAACY,GAAI,IACX5J,EAAA,cAACuI,EAAA,EAAD,CACIuB,QAASR,EACTS,SAAU,kBAAMR,EAAU,SAAAD,GAAM,OAAKA,KACrCd,QAASxI,EAAA,cAACyI,EAAA,EAAD,CAAUC,MAAM,mBAAmBrI,MAAM,YAClD8H,MAAM,6SAIlBnI,EAAA,cAAC2I,EAAA,EAAD,CACIL,KAAK,SACLL,WAAS,EACT7H,QAAQ,YACRuG,GAAI,CAACkB,GAAI,EAAGe,GAAI,IAJpB,gHAQA5I,EAAA,cAAC6I,EAAA,EAAD,CAAMC,WAAS,EAACC,eAAe,UAC3B/I,EAAA,cAAC6I,EAAA,EAAD,CAAMG,MAAI,GACNhJ,EAAA,cAACO,EAAA,EAAD,CAAM0I,QAAS,kBAAM/C,EAAS,aAAa9F,QAAQ,SAAnD,wHAOhBJ,EAAA,cAACkJ,EAAD,CAAWvC,GAAI,CAACkB,GAAI,8DC1F9BmC,EAAc3F,YAAY,CAC5BC,KAAM,UACNC,aAtCwB,CACxB0F,KAAM,EACNC,KAAM,GACN5B,KAAM,GACN6B,WAAY,KACZC,YAAa,GACbC,cAAc,EACdC,YAAa,GACbC,aAAc,GACdC,cAAe,GACfC,UAAW,GACXC,eAAgB,GAChBC,YAAa,GACbC,iBAAkB,GAClBC,gBAAiB,GACjBC,kBAAmB,KACnBC,kBAAmB,KACnBC,cAAe,GACfC,OAAQ,GACRC,kBAAmB,GACnBC,SAAU,GACVC,KAAM,GAENC,GAAI,GACJC,WAAY,GACZC,YAAa,GACbC,QAAS,GACTC,aAAc,GACdC,UAAW,GACXC,eAAgB,GAChBC,cAAe,GACfC,gBAAiB,KACjBC,gBAAiB,KACjBC,YAAa,IAMbpH,SAAU,CACNqH,cADM,SACQlJ,KACRA,EAAMmH,MAEZgC,cAJM,SAIQnJ,KACRA,EAAMmH,MAEZiC,YAPM,SAOMpJ,EAAO+B,KACb/B,EAAMmH,KACRnH,EAAMoH,KAAOrF,EAAOC,SAExBqH,YAXM,SAWMrJ,EAAO+B,KACb/B,EAAMmH,KACRnH,EAAMwF,KAAOzD,EAAOC,SAExBsH,YAfM,SAeMtJ,EAAO+B,KAMb/B,EAAMmH,KACRnH,EAAMqH,WAAatF,EAAOC,QAAQqF,WAClCrH,EAAMsH,YAAcvF,EAAOC,QAAQsF,YACnCtH,EAAMuH,aAAexF,EAAOC,QAAQuF,aACpCvH,EAAMwH,YAAczF,EAAOC,QAAQwF,aAEvC+B,gBA3BM,SA2BUvJ,EAAO+B,KAYjB/B,EAAMmH,KACRnH,EAAMyH,aAAe1F,EAAOC,QAAQyF,aACpCzH,EAAM0H,cAAgB3F,EAAOC,QAAQ0F,cACrC1H,EAAM2H,UAAY5F,EAAOC,QAAQ2F,UACjC3H,EAAM4H,eAAiB7F,EAAOC,QAAQ4F,eACtC5H,EAAM6H,YAAc9F,EAAOC,QAAQ6F,YACnC7H,EAAM8H,iBAAmB/F,EAAOC,QAAQ8F,iBACxC9H,EAAM+H,gBAAkBhG,EAAOC,QAAQ+F,gBACvC/H,EAAMgI,kBAAoBjG,EAAOC,QAAQgG,kBACzChI,EAAMiI,kBAAoBlG,EAAOC,QAAQiG,kBACzCjI,EAAMkI,cAAgBnG,EAAOC,QAAQkG,eAEzCsB,cAnDM,SAmDQxJ,EAAO+B,KAIf/B,EAAMmH,KACRnH,EAAMmI,OAASpG,EAAOC,QAAQmG,OAC9BnI,EAAMoI,kBAAoBrG,EAAOC,QAAQoG,mBAE7CqB,YA3DM,SA2DMzJ,EAAO+B,KACb/B,EAAMmH,KACRnH,EAAMqI,SAAWtG,EAAOC,QAAQqG,UAEpCqB,YA/DM,SA+DM1J,EAAO+B,KACb/B,EAAMmH,KACRnH,EAAMsI,KAAOvG,EAAOC,QAAQsG,MAEhCqB,cAnEM,SAmEQ3J,EAAO+B,GAajB/B,EAAMuI,GAAKxG,EAAOC,QAAQuG,GAC1BvI,EAAMwI,WAAazG,EAAOC,QAAQwG,WAClCxI,EAAMyI,YAAc1G,EAAOC,QAAQyG,YACnCzI,EAAM0I,QAAU3G,EAAOC,QAAQ0G,QAC/B1I,EAAM2I,aAAe5G,EAAOC,QAAQ2G,aACpC3I,EAAM4I,UAAY7G,EAAOC,QAAQ4G,UACjC5I,EAAM6I,eAAiB9G,EAAOC,QAAQ6G,eACtC7I,EAAM8I,cAAgB/G,EAAOC,QAAQ8G,cACrC9I,EAAM+I,gBAAkBhH,EAAOC,QAAQ+G,gBACvC/I,EAAMgJ,gBAAkBjH,EAAOC,QAAQgH,gBACvChJ,EAAMiJ,YAAclH,EAAOC,QAAQiH,kBAgB3C/B,EAAYvE,QATZwG,MADAD,gBACAC,eACAC,iBACAC,iBACAC,iBACAC,qBACAC,mBACAC,iBACAC,iBACAC,mBAEWzC,KAAf,QC9He0C,GAlDE,WAAM,IAAA9G,EACKC,oBAAS,GADdC,EAAA5F,OAAA6F,EAAA,EAAA7F,CAAA0F,EAAA,GACZvC,EADYyC,EAAA,GACNxC,EADMwC,EAAA,GAEZoE,EAAQvE,YAAY9C,GAApBqH,KACDlE,EAAWC,cACXC,EAAWC,cAkBjB,OACI1C,EAAAC,EAAAC,cAAAF,EAAAC,EAAAiJ,SAAA,KACIlJ,EAAAC,EAAAC,cAAC0C,EAAD,CAAahD,KAAMA,EAAMC,QAASA,IAClCG,EAAAC,EAAAC,cAAC1D,EAAA,EAAD,CAAYG,QAAQ,KAAKwM,cAAY,GAArC,kEAGAnJ,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CAAKH,UAAU,OAAOa,SAlBT,SAACC,GAClBA,EAAMC,iBACN,IACM4C,EADO,IAAI3C,SAASF,EAAMG,eACdE,IAAI,QAElBwC,EACAlE,EAASkG,GAAYhC,IAErB5G,GAAQ,KAWJG,EAAAC,EAAAC,cAACkJ,EAAA,EAAD,CACIC,kBAAgB,eAChBxI,KAAK,sBACLyI,aAAc7C,GAEdzG,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CAAkBjE,KAAK,OAAOoE,MAAM,yDAAYF,QAAS/E,EAAAC,EAAAC,cAACqJ,EAAA,EAAD,MAAU7E,MAAM,2DACzE1E,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CAAkBjE,KAAK,OAAOoE,MAAM,yDAAYF,QAAS/E,EAAAC,EAAAC,cAACqJ,EAAA,EAAD,MAAU7E,MAAM,4DAE7E1E,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CAAKC,GAAI,CAACE,QAAS,OAAQkC,eAAgB,gBAAiBlB,GAAI,IAC5DpE,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAQM,QAhCL,WACf/C,EAAS,aA+BG,kCAGAzC,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAQL,KAAK,SAASlI,QAAQ,aAA9B,sCCOL6M,GAjDE,WAAM,IAAArH,EACKC,oBAAS,GADdC,EAAA5F,OAAA6F,EAAA,EAAA7F,CAAA0F,EAAA,GACZvC,EADYyC,EAAA,GACNxC,EADMwC,EAAA,GAEZwC,EAAQ3C,YAAY9C,GAApByF,KACDtC,EAAWC,cAkBjB,OACIxC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAiJ,SAAA,KACIlJ,EAAAC,EAAAC,cAAC0C,EAAD,CAAahD,KAAMA,EAAMC,QAASA,IAClCG,EAAAC,EAAAC,cAAC1D,EAAA,EAAD,CAAYG,QAAQ,KAAKwM,cAAY,GAArC,6GAGAnJ,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CAAKH,UAAU,OAAOa,SAlBT,SAACC,GAClBA,EAAMC,iBACN,IACMgB,EADO,IAAIf,SAASF,EAAMG,eACdE,IAAI,QAElBY,EACAtC,EAASmG,GAAY7D,IAErBhF,GAAQ,KAWJG,EAAAC,EAAAC,cAACkJ,EAAA,EAAD,CACIC,kBAAgB,eAChBxI,KAAK,sBACLyI,aAAczE,GAEd7E,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CAAkBjE,KAAK,OAAOoE,MAAM,iCAAQF,QAAS/E,EAAAC,EAAAC,cAACqJ,EAAA,EAAD,MAAU7E,MAAM,mCACrE1E,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CAAkBjE,KAAK,OAAOoE,MAAM,2BAAOF,QAAS/E,EAAAC,EAAAC,cAACqJ,EAAA,EAAD,MAAU7E,MAAM,8BAExE1E,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CAAKC,GAAI,CAACE,QAAS,OAAQkC,eAAgB,gBAAiBlB,GAAI,IAC5DpE,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAQM,QAhCL,WACfjD,EAASiG,QA+BG,kCAGAxI,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAQvI,QAAQ,YAAYkI,KAAK,UAAjC,mECoEL2E,WAtGE,WAAM,IAAAC,EAMfvH,YAAY9C,GAJZsH,EAFe+C,EAEf/C,WACAC,EAHe8C,EAGf9C,YACc+C,EAJCD,EAIf7C,aACAC,EALe4C,EAKf5C,YAEEtE,EAAWC,cAPEL,EASKC,oBAAS,GATdC,EAAA5F,OAAA6F,EAAA,EAAA7F,CAAA0F,EAAA,GASZvC,EATYyC,EAAA,GASNxC,EATMwC,EAAA,GAAAsD,EAUKvD,mBAAuBsE,GAV5Bd,EAAAnJ,OAAA6F,EAAA,EAAA7F,CAAAkJ,EAAA,GAUZgE,EAVY/D,EAAA,GAUNgE,EAVMhE,EAAA,GAAAiE,EAWqBzH,mBAAkBsH,GAXvCI,EAAArN,OAAA6F,EAAA,EAAA7F,CAAAoN,EAAA,GAWZjD,EAXYkD,EAAA,GAWEC,EAXFD,EAAA,GAmCnB,OACI9J,EAAAC,EAAAC,cAAAF,EAAAC,EAAAiJ,SAAA,KACIlJ,EAAAC,EAAAC,cAAC0C,EAAD,CAAahD,KAAMA,EAAMC,QAASA,IAClCG,EAAAC,EAAAC,cAAC1D,EAAA,EAAD,CAAYG,QAAQ,KAAKwM,cAAY,GAArC,2IAGAnJ,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CAAKH,UAAU,OAAOa,SAxBT,SAACC,GAClBA,EAAMC,iBACN,IAAMpG,EAAO,IAAIqG,SAASF,EAAMG,eAC1B4C,EAAclJ,EAAKwG,IAAI,eACvB4C,EAAcpJ,EAAKwG,IAAI,eAEzB0F,GAAQhD,IAAgBC,GAAgBC,IAAgBD,IAAiBC,GACzEtE,EAASoG,GAAY,CACjBjC,WAAYiD,EACZhD,cACAC,eACAC,iBAGJhH,GAAQ,KAWJG,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAMC,WAAS,EAACa,QAAS,GACrBlG,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAMG,MAAI,EAACY,GAAI,GAAIC,GAAI,GACnBpG,EAAAC,EAAAC,cAAC8J,GAAA,EAAD,CACIC,YAAaC,KACbC,cAAc,MAEdnK,EAAAC,EAAAC,cAACkK,GAAA,EAAD,CACI1F,MAAM,gEACNO,MAAO0E,EACPrD,SAAU,SAAA+D,GAAC,OAAIT,EAAQS,IACvBC,YAAa,SAACC,GAAD,OAAYvK,EAAAC,EAAAC,cAACmE,EAAA,EAAD5H,OAAAC,OAAA,CAAW8H,WAAS,GAAK+F,SAI9DvK,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAMG,MAAI,EAACY,GAAI,GAAIC,GAAI,GACnBpG,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CACIE,UAAQ,EACRE,GAAG,cACH5D,KAAK,cACL6D,MAAM,wHACNF,WAAS,EACTG,aAAa,cACb2E,aAAc3C,KAGtB3G,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAMG,MAAI,EAACa,GAAI,IACXpG,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CACIuB,QAASO,EACTN,SAAU,kBAAMyD,EAAgB,SAAAnD,GAAY,OAAKA,KACjD7B,QAAS/E,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,MACTN,MAAM,gHACN7D,KAAK,kBAGbb,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAMG,MAAI,EAACY,GAAI,IACXnG,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CACImG,UAAW5D,EACXrC,UAAQ,EACRE,GAAG,cACH5D,KAAK,cACL6D,MAAM,2GACNF,WAAS,EACTG,aAAa,cACb2E,aAAczC,MAI1B7G,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CAAKC,GAAI,CAACE,QAAS,OAAQkC,eAAgB,gBAAiBlB,GAAI,IAC5DpE,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAQM,QA7EL,WACfjD,EAASiG,QA4EG,kCAGAxI,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAQvI,QAAQ,YAAYkI,KAAK,UAAjC,iDC8FL4F,GA7LM,WAAM,IAAAhB,EAYnBvH,YAAY9C,GAVZ0H,EAFmB2C,EAEnB3C,aACAC,EAHmB0C,EAGnB1C,cACAC,EAJmByC,EAInBzC,UACAC,EALmBwC,EAKnBxC,eACAC,EANmBuC,EAMnBvC,YACAC,EAPmBsC,EAOnBtC,iBACAC,EARmBqC,EAQnBrC,gBACmBsD,EATAjB,EASnBpC,kBACmBsD,EAVAlB,EAUnBnC,kBACAC,EAXmBkC,EAWnBlC,cAEEhF,EAAWC,cAbMoI,EAe2BC,IAAMzI,SAAuBsI,GAfxDI,EAAArO,OAAA6F,EAAA,EAAA7F,CAAAmO,EAAA,GAehBvD,EAfgByD,EAAA,GAeGC,EAfHD,EAAA,GAAAE,EAgB2BH,IAAMzI,SAAuBuI,GAhBxDM,EAAAxO,OAAA6F,EAAA,EAAA7F,CAAAuO,EAAA,GAgBhB1D,EAhBgB2D,EAAA,GAgBGC,EAhBHD,EAAA,GAAA9I,EAiBCC,oBAAS,GAjBVC,EAAA5F,OAAA6F,EAAA,EAAA7F,CAAA0F,EAAA,GAiBhBvC,EAjBgByC,EAAA,GAiBVxC,EAjBUwC,EAAA,GAqDvB,OACIrC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAiJ,SAAA,KACIlJ,EAAAC,EAAAC,cAAC0C,EAAD,CAAahD,KAAMA,EAAMC,QAASA,IAClCG,EAAAC,EAAAC,cAAC1D,EAAA,EAAD,CAAYG,QAAQ,KAAKwM,cAAY,GAArC,2KAGAnJ,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CAAKH,UAAU,OAAOa,SApCT,SAACC,GAClBA,EAAMC,iBACN,IAAMpG,EAAO,IAAIqG,SAASF,EAAMG,eAC1BiC,EAAWvI,EAAKwG,IAAI,YACpB8B,EAAYtI,EAAKwG,IAAI,aACrBkH,EAAc1N,EAAKwG,IAAI,eACvBmH,EAAmB3N,EAAKwG,IAAI,oBAC5BoH,EAAU5N,EAAKwG,IAAI,WACnBqH,EAAe7N,EAAKwG,IAAI,gBACxBsH,EAAY9N,EAAKwG,IAAI,aACrBgC,EAAUxI,EAAKwG,IAAI,WAErB+B,GAAYD,GAAaoF,GAAeE,GAAWE,GAAatF,EAChE1D,EAASqG,GAAgB,CACrB9B,aAAcd,EACde,cAAehB,EACfiB,UAAWmE,EACXlE,eAAgBmE,EAChBlE,YAAamE,EACblE,iBAAkBmE,EAClBlE,gBAAiBnB,EACjBoB,oBACAC,oBACAC,cAAegE,KAGnB1L,GAAQ,KAWJG,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAMC,WAAS,EAACa,QAAS,GACrBlG,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAMG,MAAI,EAACY,GAAI,GAAIC,GAAI,GACnBpG,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CACIE,UAAQ,EACRE,GAAG,WACH5D,KAAK,WACL6D,MAAM,6CACNF,WAAS,EACTG,aAAa,cACb2E,aAAcxC,KAGtB9G,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAMG,MAAI,EAACY,GAAI,GAAIC,GAAI,GACnBpG,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CACIE,UAAQ,EACRE,GAAG,YACH5D,KAAK,YACL6D,MAAM,qBACNF,WAAS,EACTG,aAAa,aACb2E,aAAcvC,KAGtB/G,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAMG,MAAI,EAACY,GAAI,IACXnG,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CACIE,UAAQ,EACRE,GAAG,cACH5D,KAAK,cACL6D,MAAM,kFACNF,WAAS,EACTG,aAAa,MACbE,KAAK,QACLyE,aAActC,KAGtBhH,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAMG,MAAI,EAACY,GAAI,IACXnG,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CACII,GAAG,mBACH5D,KAAK,mBACL6D,MAAM,sGACNF,WAAS,EACTG,aAAa,MACbE,KAAK,QACLyE,aAAcrC,KAGtBjH,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAMG,MAAI,EAACY,GAAI,IACXnG,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CACIE,UAAQ,EACRE,GAAG,UACH5D,KAAK,UACL6D,MAAM,iCACNF,WAAS,EACTG,aAAa,iBACb2E,aAAcpC,KAGtBlH,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAMG,MAAI,EAACY,GAAI,IACXnG,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CACII,GAAG,eACH5D,KAAK,eACL6D,MAAM,qDACNF,WAAS,EACTG,aAAa,iBACb2E,aAAcnC,KAGtBnH,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAMG,MAAI,EAACY,GAAI,GAAIC,GAAI,GACnBpG,EAAAC,EAAAC,cAAC8J,GAAA,EAAD,CACIC,YAAaC,KACbC,cAAc,MAEdnK,EAAAC,EAAAC,cAACsL,GAAA,EAAD,CACI9G,MAAM,6EACNO,MAAOoC,EACPf,SAAU,SAACmF,GAAD,OAAcV,EAAqBU,IAC7CnB,YAAa,SAACC,GAAD,OAAYvK,EAAAC,EAAAC,cAACmE,EAAA,EAAD5H,OAAAC,OAAA,CAAW8H,WAAS,GAAK+F,SAI9DvK,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAMG,MAAI,EAACY,GAAI,GAAIC,GAAI,GACnBpG,EAAAC,EAAAC,cAAC8J,GAAA,EAAD,CACIC,YAAaC,KACbC,cAAc,MAEdnK,EAAAC,EAAAC,cAACsL,GAAA,EAAD,CACI9G,MAAM,mFACNO,MAAOqC,EACPhB,SAAU,SAACmF,GAAD,OAAcP,EAAqBO,IAC7CnB,YAAa,SAACC,GAAD,OAAYvK,EAAAC,EAAAC,cAACmE,EAAA,EAAD5H,OAAAC,OAAA,CAAW8H,WAAS,GAAK+F,SAI9DvK,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAMG,MAAI,EAACY,GAAI,IACXnG,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CACIE,UAAQ,EACRE,GAAG,UACH5D,KAAK,UACL6D,MAAM,sHACNF,WAAS,EACTG,aAAa,eACb2E,aAAclC,KAGtBpH,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAMG,MAAI,EAACY,GAAI,IACXnG,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CACIE,UAAQ,EACRE,GAAG,YACH5D,KAAK,YACL6D,MAAM,yDACNF,WAAS,EACTG,aAAa,YACb2E,aAAc/B,MAI1BvH,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CAAKC,GAAI,CAACE,QAAS,OAAQkC,eAAgB,gBAAiBlB,GAAI,IAC5DpE,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAQM,QA9JL,WACfjD,EAASiG,QA6JG,kCAGAxI,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAQvI,QAAQ,YAAYkI,KAAK,UAAjC,sCCjHL6G,GA/DI,WAAM,IAAAjC,EACevH,YAAY9C,GAAzCoI,EADciC,EACdjC,OAAQC,EADMgC,EACNhC,kBACTlF,EAAWC,cAFIL,EAIGC,oBAAS,GAJZC,EAAA5F,OAAA6F,EAAA,EAAA7F,CAAA0F,EAAA,GAIdvC,EAJcyC,EAAA,GAIRxC,EAJQwC,EAAA,GAuBrB,OACIrC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAiJ,SAAA,KACIlJ,EAAAC,EAAAC,cAAC0C,EAAD,CAAahD,KAAMA,EAAMC,QAASA,IAClCG,EAAAC,EAAAC,cAAC1D,EAAA,EAAD,CAAYG,QAAQ,KAAKwM,cAAY,GAArC,iGAGAnJ,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CAAKH,UAAU,OAAOa,SAnBT,SAACC,GAClBA,EAAMC,iBACN,IAAMpG,EAAO,IAAIqG,SAASF,EAAMG,eAC1ByD,EAAS/J,EAAKwG,IAAI,UAClB0H,EAAclO,EAAKwG,IAAI,eAEzBuD,GAAUmE,EACVpJ,EAASsG,GAAc,CAACrB,SAAQC,kBAAmBkE,KAEnD9L,GAAQ,KAWJG,EAAAC,EAAAC,cAACkJ,EAAA,EAAD,CACIC,kBAAgB,iBAChBxI,KAAK,sBACLyI,aAAc9B,GAEdxH,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CAAkBjE,KAAK,SAASoE,MAAM,6CAAUF,QAAS/E,EAAAC,EAAAC,cAACqJ,EAAA,EAAD,MAAU7E,MAAM,+CACzE1E,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CAAkBjE,KAAK,SAASoE,MAAM,iCAAQF,QAAS/E,EAAAC,EAAAC,cAACqJ,EAAA,EAAD,MAAU7E,MAAM,mCACvE1E,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CAAkBjE,KAAK,SAASoE,MAAM,uCAASF,QAAS/E,EAAAC,EAAAC,cAACqJ,EAAA,EAAD,MAAU7E,MAAM,0CAE5E1E,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CACIiF,aAAc7B,EACd5G,KAAK,cACL0D,UAAQ,EACRE,GAAG,8BACHC,MAAM,mDACNkH,WAAS,EACTC,QAAS,EACTC,YAAY,izBACZtH,WAAS,IAEbxE,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CAAKC,GAAI,CAACE,QAAS,OAAQkC,eAAgB,gBAAiBlB,GAAI,IAC5DpE,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAQM,QA7CL,WACfjD,EAASiG,QA4CG,kCAGAxI,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAQvI,QAAQ,YAAYkI,KAAK,UAAjC,sCCZLkH,GAlDF,WAAM,IACRrE,EAAYxF,YAAY9C,GAAxBsI,SACDnF,EAAWC,cAFFL,EAISC,oBAAS,GAJlBC,EAAA5F,OAAA6F,EAAA,EAAA7F,CAAA0F,EAAA,GAIRvC,EAJQyC,EAAA,GAIFxC,EAJEwC,EAAA,GAsBf,OACIrC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAiJ,SAAA,KACIlJ,EAAAC,EAAAC,cAAC0C,EAAD,CAAahD,KAAMA,EAAMC,QAASA,IAClCG,EAAAC,EAAAC,cAAC1D,EAAA,EAAD,CAAYG,QAAQ,KAAKwM,cAAY,GAArC,2FAGAnJ,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CAAKH,UAAU,OAAOa,SAlBT,SAACC,GAClBA,EAAMC,iBACN,IACMmI,EADO,IAAIlI,SAASF,EAAMG,eACdE,IAAI,QAElB+H,EACAzJ,EAASuG,GAAY,CAACpB,SAAUsE,KAEhCnM,GAAQ,KAWJG,EAAAC,EAAAC,cAACkJ,EAAA,EAAD,CACIC,kBAAgB,eAChBxI,KAAK,sBACLyI,aAAc5B,GAEd1H,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CAAkBjE,KAAK,OAAOoE,MAAM,iCAAQF,QAAS/E,EAAAC,EAAAC,cAACqJ,EAAA,EAAD,MAAU7E,MAAM,8EACrE1E,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CAAkBjE,KAAK,OAAOoE,MAAM,8CAAWF,QAAS/E,EAAAC,EAAAC,cAACqJ,EAAA,EAAD,MAAU7E,MAAM,4FAE5E1E,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CAAKC,GAAI,CAACE,QAAS,OAAQkC,eAAgB,gBAAiBlB,GAAI,IAC5DpE,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAQM,QAhCL,WACfjD,EAASiG,QA+BG,kCAGAxI,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAQvI,QAAQ,YAAYkI,KAAK,UAAjC,sCCiBLoH,GArDE,WAAM,IACZtE,EAAQzF,YAAY9C,GAApBuI,KACDpF,EAAWC,cAFEL,EAIKC,oBAAS,GAJdC,EAAA5F,OAAA6F,EAAA,EAAA7F,CAAA0F,EAAA,GAIZvC,EAJYyC,EAAA,GAINxC,EAJMwC,EAAA,GAsBnB,OACIrC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAiJ,SAAA,KACIlJ,EAAAC,EAAAC,cAAC0C,EAAD,CAAahD,KAAMA,EAAMC,QAASA,IAClCG,EAAAC,EAAAC,cAAC1D,EAAA,EAAD,CAAYG,QAAQ,KAAKwM,cAAY,GAArC,8JAGAnJ,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CAAKH,UAAU,OAAOa,SAlBT,SAACC,GAClBA,EAAMC,iBACN,IACM8D,EADO,IAAI7D,SAASF,EAAMG,eACdE,IAAI,QAElB0D,EACApF,EAASwG,GAAY,CAACpB,UAEtB9H,GAAQ,KAWJG,EAAAC,EAAAC,cAACkJ,EAAA,EAAD,CACIC,kBAAgB,eAChBxI,KAAK,sBACLyI,aAAc3B,GAEd3H,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CAAkBjE,KAAK,OAAOoE,MAAM,oCAAWF,QAAS/E,EAAAC,EAAAC,cAACqJ,EAAA,EAAD,MAAU7E,MAAM,sHACxE1E,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CAAkBjE,KAAK,OAAOoE,MAAM,oCAAWF,QAAS/E,EAAAC,EAAAC,cAACqJ,EAAA,EAAD,MAAU7E,MAAM,sHACxE1E,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CAAkBjE,KAAK,OAAOoE,MAAM,uBAAQF,QAAS/E,EAAAC,EAAAC,cAACqJ,EAAA,EAAD,MAAU7E,MAAM,uGACrE1E,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CAAkBjE,KAAK,OAAOoE,MAAM,6BAASF,QAAS/E,EAAAC,EAAAC,cAACqJ,EAAA,EAAD,MAAU7E,MAAM,+GACtE1E,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CAAkBjE,KAAK,OAAOoE,MAAM,8CAAWF,QAAS/E,EAAAC,EAAAC,cAACqJ,EAAA,EAAD,MAAU7E,MAAM,gIAE5E1E,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CAAKC,GAAI,CAACE,QAAS,OAAQkC,eAAgB,gBAAiBlB,GAAI,IAC5DpE,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAQM,QAnCL,WACfjD,EAASiG,QAkCG,kCAGAxI,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAQvI,QAAQ,YAAYkI,KAAK,UAAjC,sCCiKLqH,GA9MA,WAAM,IAAAzC,EAYbvH,YAAY9C,GAVZyI,EAFa4B,EAEb5B,WACAC,EAHa2B,EAGb3B,YACAC,EAJa0B,EAIb1B,QACAC,EALayB,EAKbzB,aACAC,EANawB,EAMbxB,UACAC,EAPauB,EAObvB,eACAC,EARasB,EAQbtB,cACiBgE,EATJ1C,EASbrB,gBACiBgE,EAVJ3C,EAUbpB,gBACAC,EAXamB,EAWbnB,YAEE/F,EAAWC,cAbAoI,EAe6BC,IAAMzI,SAAuB+J,GAf1DrB,EAAArO,OAAA6F,EAAA,EAAA7F,CAAAmO,EAAA,GAeVxC,EAfU0C,EAAA,GAeOuB,EAfPvB,EAAA,GAAAE,EAgB6BH,IAAMzI,SAAuBgK,GAhB1DnB,EAAAxO,OAAA6F,EAAA,EAAA7F,CAAAuO,EAAA,GAgBV3C,EAhBU4C,EAAA,GAgBOqB,EAhBPrB,EAAA,GAAA9I,EAiBOC,oBAAS,GAjBhBC,EAAA5F,OAAA6F,EAAA,EAAA7F,CAAA0F,EAAA,GAiBVvC,EAjBUyC,EAAA,GAiBJxC,EAjBIwC,EAAA,GAAAsD,EAmBGvD,mBAAS,IAnBZwD,EAAAnJ,OAAA6F,EAAA,EAAA7F,CAAAkJ,EAAA,GAmBViC,EAnBUhC,EAAA,GAmBN2G,EAnBM3G,EAAA,GAqBXnD,EAAWC,cAsCjB,OACI1C,EAAAC,EAAAC,cAAAF,EAAAC,EAAAiJ,SAAA,KACIlJ,EAAAC,EAAAC,cAAC0C,EAAD,CAAahD,KAAMA,EAAMC,QAASA,IAClCG,EAAAC,EAAAC,cAAC1D,EAAA,EAAD,CAAYG,QAAQ,KAAKwM,cAAY,GAArC,+HAGAnJ,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CAAKH,UAAU,OAAOa,SAtCT,SAACC,GAClBA,EAAMC,iBACN,IAAMpG,EAAO,IAAIqG,SAASF,EAAMG,eAC1BiC,EAAWvI,EAAKwG,IAAI,YACpB8B,EAAYtI,EAAKwG,IAAI,aACrBkH,EAAc1N,EAAKwG,IAAI,eACvBmH,EAAmB3N,EAAKwG,IAAI,oBAC5BoH,EAAU5N,EAAKwG,IAAI,WACnBqH,EAAe7N,EAAKwG,IAAI,gBACxBsH,EAAY9N,EAAKwG,IAAI,aACrBgC,EAAUxI,EAAKwG,IAAI,WAEd,6BAAP2D,GAAiB5B,GAAYD,GAAaoF,GAAeE,GAAWE,GAAatF,GACjF1D,EAASyG,GAAc,CACnBpB,KACAC,WAAY7B,EACZ8B,YAAa/B,EACbgC,QAASoD,EACTnD,aAAcoD,EACdnD,UAAWoD,EACXnD,eAAgBoD,EAChBnD,cAAelC,EACfmC,kBACAC,kBACAC,YAAaiD,KAEjB9I,EAAS,mBAET5C,GAAQ,KAWJG,EAAAC,EAAAC,cAACkJ,EAAA,EAAD,CACIC,kBAAgB,aAChBxI,KAAK,sBACLoE,MAAO2C,EACPtB,SAAU,SAAA+D,GAAC,OAAIkC,EAAMlC,EAAEmC,OAAOvH,SAE9BjF,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CAAkBG,MAAM,2BAAOF,QAAS/E,EAAAC,EAAAC,cAACqJ,EAAA,EAAD,MAAU7E,MAAM,6BACxD1E,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CAAkBG,MAAM,uCAASF,QAAS/E,EAAAC,EAAAC,cAACqJ,EAAA,EAAD,MAAU7E,MAAM,0CAEtD,yCAAPkD,GACG5H,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAMC,WAAS,EAACa,QAAS,GACrBlG,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAMG,MAAI,EAACY,GAAI,GAAIC,GAAI,GACnBpG,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CACIE,UAAQ,EACRE,GAAG,WACH5D,KAAK,WACL6D,MAAM,6CACNF,WAAS,EACTG,aAAa,cACb2E,aAAczB,KAGtB7H,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAMG,MAAI,EAACY,GAAI,GAAIC,GAAI,GACnBpG,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CACIE,UAAQ,EACRE,GAAG,YACH5D,KAAK,YACL6D,MAAM,qBACNF,WAAS,EACTG,aAAa,aACb2E,aAAcxB,KAGtB9H,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAMG,MAAI,EAACY,GAAI,IACXnG,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CACIE,UAAQ,EACRE,GAAG,cACH5D,KAAK,cACL6D,MAAM,kFACNF,WAAS,EACTG,aAAa,MACbE,KAAK,QACLyE,aAAcvB,KAGtB/H,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAMG,MAAI,EAACY,GAAI,IACXnG,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CACII,GAAG,mBACH5D,KAAK,mBACL6D,MAAM,sGACNF,WAAS,EACTG,aAAa,MACbE,KAAK,QACLyE,aAActB,KAGtBhI,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAMG,MAAI,EAACY,GAAI,IACXnG,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CACIE,UAAQ,EACRE,GAAG,UACH5D,KAAK,UACL6D,MAAM,iCACNF,WAAS,EACTG,aAAa,iBACb2E,aAAcrB,KAGtBjI,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAMG,MAAI,EAACY,GAAI,IACXnG,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CACII,GAAG,eACH5D,KAAK,eACL6D,MAAM,qDACNF,WAAS,EACTG,aAAa,iBACb2E,aAAcpB,KAGtBlI,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAMG,MAAI,EAACY,GAAI,GAAIC,GAAI,GACnBpG,EAAAC,EAAAC,cAAC8J,GAAA,EAAD,CACIC,YAAaC,KACbC,cAAc,MAEdnK,EAAAC,EAAAC,cAACsL,GAAA,EAAD,CACI9G,MAAM,6EACNO,MAAOmD,EACP9B,SAAU,SAACmF,GAAD,OAAcY,EAAmBZ,IAC3CnB,YAAa,SAACC,GAAD,OAAYvK,EAAAC,EAAAC,cAACmE,EAAA,EAAD5H,OAAAC,OAAA,CAAW8H,WAAS,GAAK+F,SAI9DvK,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAMG,MAAI,EAACY,GAAI,GAAIC,GAAI,GACnBpG,EAAAC,EAAAC,cAAC8J,GAAA,EAAD,CACIC,YAAaC,KACbC,cAAc,MAEdnK,EAAAC,EAAAC,cAACsL,GAAA,EAAD,CACI9G,MAAM,mFACNO,MAAOoD,EACP/B,SAAU,SAACmF,GAAD,OAAca,EAAmBb,IAC3CnB,YAAa,SAACC,GAAD,OAAYvK,EAAAC,EAAAC,cAACmE,EAAA,EAAD5H,OAAAC,OAAA,CAAW8H,WAAS,GAAK+F,SAI9DvK,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAMG,MAAI,EAACY,GAAI,IACXnG,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CACIE,UAAQ,EACRE,GAAG,UACH5D,KAAK,UACL6D,MAAM,sHACNF,WAAS,EACTG,aAAa,eACb2E,aAAcnB,KAGtBnI,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAMG,MAAI,EAACY,GAAI,IACXnG,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CACIE,UAAQ,EACRE,GAAG,YACH5D,KAAK,YACL6D,MAAM,yDACNF,WAAS,EACTG,aAAa,YACb2E,aAAchB,MAK9BtI,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CAAKC,GAAI,CAACE,QAAS,OAAQkC,eAAgB,gBAAiBlB,GAAI,IAC5DpE,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAQM,QA3KL,WACfjD,EAASiG,QA0KG,kCAGAxI,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAQvI,QAAQ,YAAYkI,KAAK,UAAjC,kFCzLL4H,GArBI,WAEf,OACIzM,EAAAC,EAAAC,cAACwM,GAAA,EAAD,CACIC,SAAS,WACT/P,MAAM,UACNgQ,UAAW,EACX1J,GAAI,CACAyJ,SAAU,WACVE,aAAc,SAACC,GAAD,mBAAAC,OAAoBD,EAAEE,QAAQC,YAGhDjN,EAAAC,EAAAC,cAACgN,GAAA,EAAD,KACIlN,EAAAC,EAAAC,cAAC1D,EAAA,EAAD,CAAYG,QAAQ,KAAKC,MAAM,UAAUuQ,QAAM,GAA/C,yGCkDDC,GAnDI,WAAM,IACd5G,EAAQtE,YAAY9C,GAApBoH,KAED6G,EAAiBC,sBACnB,SAAC9G,GACG,OAAQA,GACJ,KAAK,EACD,OAAOxG,EAAAC,EAAAC,cAACqN,GAAD,MACX,KAAK,EACD,OAAOvN,EAAAC,EAAAC,cAACsN,GAAD,MACX,KAAK,EACD,OAAOxN,EAAAC,EAAAC,cAACuN,GAAD,MACX,KAAK,EACD,OAAOzN,EAAAC,EAAAC,cAACwN,GAAD,MACX,KAAK,EACD,OAAO1N,EAAAC,EAAAC,cAACyN,GAAD,MACX,KAAK,EACD,OAAO3N,EAAAC,EAAAC,cAAC0N,GAAD,MACX,KAAK,EACD,OAAO5N,EAAAC,EAAAC,cAAC2N,GAAD,MACX,KAAK,EACD,OAAO7N,EAAAC,EAAAC,cAAC4N,GAAD,QAEhB,IAEP,OACI9N,EAAAC,EAAAC,cAAAF,EAAAC,EAAAiJ,SAAA,KACIlJ,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,MACAhD,EAAAC,EAAAC,cAAC6N,GAAD,MACA/N,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,KAAKG,GAAI,CAACiC,GAAI,IAC/CnF,EAAAC,EAAAC,cAAC8N,EAAA,EAAD,CAAOrR,QAAQ,WAAWuG,GAAI,CAAC+K,GAAI,CAAC9H,GAAI,EAAG+H,GAAI,GAAIC,EAAG,CAAChI,GAAI,EAAG+H,GAAI,KAC9DlO,EAAAC,EAAAC,cAAC1D,EAAA,EAAD,CAAYsG,UAAU,KAAKnG,QAAQ,KAAKE,MAAM,UAA9C,iEAGAmD,EAAAC,EAAAC,cAACkO,EAAA,EAAD,CAASC,WAAY7H,EAAM8H,kBAAgB,EAACpL,GAAI,CAACqL,GAAI,EAAGC,GAAI,IACvDC,MAAM,GAAGC,KAAK,IAAIC,IAAI,SAACC,EAAIC,GAAL,OACnB7O,EAAAC,EAAAC,cAAC4O,EAAA,EAAD,CAAMC,IAAKF,GACP7O,EAAAC,EAAAC,cAAC8O,EAAA,EAAD,UAIZhP,EAAAC,EAAAC,cAAAF,EAAAC,EAAAiJ,SAAA,KACKmE,EAAe7G,KAGxBxG,EAAAC,EAAAC,cAACuF,EAAD,uCCqJDwJ,GAtMS,WACpB,IAAMxR,EAAOyE,YAAY9C,GADCqK,EAoCpBvH,YAAY9C,GAjCdoH,EAHsBiD,EAGtBjD,KACAC,EAJsBgD,EAItBhD,KACA5B,EALsB4E,EAKtB5E,KACA6B,EANsB+C,EAMtB/C,WACAC,EAPsB8C,EAOtB9C,YACAC,EARsB6C,EAQtB7C,aACAC,EATsB4C,EAStB5C,YACAC,EAVsB2C,EAUtB3C,aACAC,EAXsB0C,EAWtB1C,cACAC,EAZsByC,EAYtBzC,UACAC,EAbsBwC,EAatBxC,eACAC,EAdsBuC,EActBvC,YACAC,EAfsBsC,EAetBtC,iBACAC,EAhBsBqC,EAgBtBrC,gBACAC,EAjBsBoC,EAiBtBpC,kBACAC,EAlBsBmC,EAkBtBnC,kBACAC,EAnBsBkC,EAmBtBlC,cACAC,EApBsBiC,EAoBtBjC,OACAC,EArBsBgC,EAqBtBhC,kBACAC,EAtBsB+B,EAsBtB/B,SACAC,EAvBsB8B,EAuBtB9B,KACAC,EAxBsB6B,EAwBtB7B,GACAC,EAzBsB4B,EAyBtB5B,WACAC,EA1BsB2B,EA0BtB3B,YACAC,EA3BsB0B,EA2BtB1B,QACAC,EA5BsByB,EA4BtBzB,aACAC,EA7BsBwB,EA6BtBxB,UACAC,EA9BsBuB,EA8BtBvB,eACAC,EA/BsBsB,EA+BtBtB,cACAC,EAhCsBqB,EAgCtBrB,gBACAC,EAjCsBoB,EAiCtBpB,gBACAC,EAlCsBmB,EAkCtBnB,YAIE7F,EAAWC,cAtCSP,EAuCIC,oBAAS,GAvCbC,EAAA5F,OAAA6F,EAAA,EAAA7F,CAAA0F,EAAA,GAuCnB+M,EAvCmB7M,EAAA,GAuCV8M,GAvCU9M,EAAA,GAAAsD,GAwCAvD,oBAAS,GAxCTwD,GAAAnJ,OAAA6F,EAAA,EAAA7F,CAAAkJ,GAAA,GAwCnB3E,GAxCmB4E,GAAA,GAwCZwJ,GAxCYxJ,GAAA,GA6D1B,OANAjD,oBAAU,WACF6D,EAAO,GACP/D,EAAS,YAEd,IAGCzC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAiJ,SAAA,KACIlJ,EAAAC,EAAAC,cAAC0C,EAAD,CAAa7C,WAAS,EAACD,QAAS,oGAAqBF,KAAMsP,EAASrP,QAASsP,KAC7EnP,EAAAC,EAAAC,cAAC0C,EAAD,CAAa9C,QAAS,wFAAmBF,KAAMoB,GAAOnB,QAASuP,KAC/DpP,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,MACAhD,EAAAC,EAAAC,cAAC6N,GAAD,MACA/N,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,KAAKG,GAAI,CAACiC,GAAI,IAC/CnF,EAAAC,EAAAC,cAAC8N,EAAA,EAAD,CAAOrR,QAAQ,WAAWuG,GAAI,CAAC+K,GAAI,CAAC9H,GAAI,EAAG+H,GAAI,GAAIC,EAAG,CAAChI,GAAI,EAAG+H,GAAI,KAC9DlO,EAAAC,EAAAC,cAAC1D,EAAA,EAAD,CAAYsG,UAAU,KAAKnG,QAAQ,KAAKE,MAAM,UAA9C,yFAGAmD,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAMC,WAAS,EAACa,QAAS,GACrBlG,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAMG,MAAI,EAACY,GAAI,GAAIC,GAAI,GACnBpG,EAAAC,EAAAC,cAAC1D,EAAA,EAAD,CAAYG,QAAQ,KAAKE,MAAM,UAA/B,uEAGAmD,EAAAC,EAAAC,cAAC1D,EAAA,EAAD,CAAYG,QAAQ,aAApB,kEACkB8J,GAElBzG,EAAAC,EAAAC,cAAC1D,EAAA,EAAD,CAAYG,QAAQ,aAApB,6GAC0BkI,GAE1B7E,EAAAC,EAAAC,cAAC1D,EAAA,EAAD,CAAYG,QAAQ,aAApB,kEACkB0S,KAAM3I,GAAY4I,OAAO,eAE3CtP,EAAAC,EAAAC,cAAC1D,EAAA,EAAD,CAAYG,QAAQ,aAApB,0HAC6BgK,GAE7B3G,EAAAC,EAAAC,cAAC1D,EAAA,EAAD,CAAYG,QAAQ,aAApB,kHAC0BiK,EAAe,eAAO,sBAE/CA,GACG5G,EAAAC,EAAAC,cAAC1D,EAAA,EAAD,CAAYG,QAAQ,aAApB,6GAC0BkK,GAG9B7G,EAAAC,EAAAC,cAAC1D,EAAA,EAAD,CAAYG,QAAQ,aAApB,+CACcmK,GAEd9G,EAAAC,EAAAC,cAAC1D,EAAA,EAAD,CAAYG,QAAQ,aAApB,uBACUoK,GAEV/G,EAAAC,EAAAC,cAAC1D,EAAA,EAAD,CAAYG,QAAQ,aAApB,oFACqBqK,GAErBhH,EAAAC,EAAAC,cAAC1D,EAAA,EAAD,CAAYG,QAAQ,aAApB,wGAC0BsK,GAE1BjH,EAAAC,EAAAC,cAAC1D,EAAA,EAAD,CAAYG,QAAQ,aAApB,mCACYuK,GAEZlH,EAAAC,EAAAC,cAAC1D,EAAA,EAAD,CAAYG,QAAQ,aAApB,uDACiBwK,GAEjBnH,EAAAC,EAAAC,cAAC1D,EAAA,EAAD,CAAYG,QAAQ,aAApB,+EACqB0S,KAAMhI,GAAmBiI,OAAO,YAErDtP,EAAAC,EAAAC,cAAC1D,EAAA,EAAD,CAAYG,QAAQ,aAApB,qFACsB0S,KAAM/H,GAAmBgI,OAAO,YAEtDtP,EAAAC,EAAAC,cAAC1D,EAAA,EAAD,CAAYG,QAAQ,aAApB,wHAC2ByK,GAE3BpH,EAAAC,EAAAC,cAAC1D,EAAA,EAAD,CAAYG,QAAQ,aAApB,2DACgB4K,GAEhBvH,EAAAC,EAAAC,cAAC1D,EAAA,EAAD,CAAYG,QAAQ,aAApB,iGACwB6K,GAExBxH,EAAAC,EAAAC,cAAC1D,EAAA,EAAD,CAAYG,QAAQ,aAApB,oFACqB8K,GAErBzH,EAAAC,EAAAC,cAAC1D,EAAA,EAAD,CAAYG,QAAQ,aAApB,2FACuB+K,GAEvB1H,EAAAC,EAAAC,cAAC1D,EAAA,EAAD,CAAYG,QAAQ,aAApB,8JACmCgL,IAGvC3H,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAMG,MAAI,EAACY,GAAI,GAAIC,GAAI,GACnBpG,EAAAC,EAAAC,cAAC1D,EAAA,EAAD,CAAYG,QAAQ,KAAKE,MAAM,UAA/B,2DAGAmD,EAAAC,EAAAC,cAAC1D,EAAA,EAAD,CAAYG,QAAQ,aAApB,oFACqBiL,GAEb,yCAAPA,GACG5H,EAAAC,EAAAC,cAAAF,EAAAC,EAAAiJ,SAAA,KACIlJ,EAAAC,EAAAC,cAAC1D,EAAA,EAAD,CAAYG,QAAQ,aAApB,+CACckL,GAEd7H,EAAAC,EAAAC,cAAC1D,EAAA,EAAD,CAAYG,QAAQ,aAApB,uBACUmL,GAEV9H,EAAAC,EAAAC,cAAC1D,EAAA,EAAD,CAAYG,QAAQ,aAApB,oFACqBoL,GAErB/H,EAAAC,EAAAC,cAAC1D,EAAA,EAAD,CAAYG,QAAQ,aAApB,wGAC0BqL,GAE1BhI,EAAAC,EAAAC,cAAC1D,EAAA,EAAD,CAAYG,QAAQ,aAApB,mCACYsL,GAEZjI,EAAAC,EAAAC,cAAC1D,EAAA,EAAD,CAAYG,QAAQ,aAApB,uDACiBuL,GAEjBlI,EAAAC,EAAAC,cAAC1D,EAAA,EAAD,CAAYG,QAAQ,aAApB,+EACqB0S,KAAMjH,GAAiBkH,OAAO,YAEnDtP,EAAAC,EAAAC,cAAC1D,EAAA,EAAD,CAAYG,QAAQ,aAApB,qFACsB0S,KAAMhH,GAAiBiH,OAAO,YAEpDtP,EAAAC,EAAAC,cAAC1D,EAAA,EAAD,CAAYG,QAAQ,aAApB,wHAC2BwL,GAE3BnI,EAAAC,EAAAC,cAAC1D,EAAA,EAAD,CAAYG,QAAQ,aAApB,2DACgB2L,MAMhCtI,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CAAKC,GAAI,CAACE,QAAS,OAAQkC,eAAgB,gBAAiBlB,GAAI,IAC5DpE,EAAAC,EAAAC,cAACgF,EAAA,EAAD,uCAGAlF,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAQvI,QAAQ,YAAY6I,QAjJ/B,WACbzH,IAAMC,KAAK,gIAAXvB,OAAA8S,GAAA,EAAA9S,CAAA,GAAgEgB,EAAhE,CACIiJ,WAAY2I,KAAM3I,GAAY4I,OAAO,cACrCjI,kBAAmBgI,KAAMhI,GAAmBiI,OAAO,WACnDhI,kBAAmB+H,KAAM/H,GAAmBgI,OAAO,WACnDlH,gBAAiBiH,KAAMjH,GAAiBkH,OAAO,WAC/CjH,gBAAiBgH,KAAMhH,GAAiBiH,OAAO,WAC/C1I,aAAcA,EAAe,eAAO,wBAEnC4I,KAAK,kBAAML,IAAW,KACtBM,MAAM,kBAAML,IAAS,OAuIV,wEAKRpP,EAAAC,EAAAC,cAACuF,EAAD,SClKDiK,GAnCI,WACf,IAAMjN,EAAWC,cAEjB,OACI1C,EAAAC,EAAAC,cAAAF,EAAAC,EAAAiJ,SAAA,KACIlJ,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,MACAhD,EAAAC,EAAAC,cAAC6N,GAAD,MACA/N,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,KAAKG,GAAI,CAACiC,GAAI,IAC/CnF,EAAAC,EAAAC,cAAC8N,EAAA,EAAD,CAAOrR,QAAQ,WAAWuG,GAAI,CAAC+K,GAAI,CAAC9H,GAAI,EAAG+H,GAAI,GAAIC,EAAG,CAAChI,GAAI,EAAG+H,GAAI,KAC9DlO,EAAAC,EAAAC,cAAC1D,EAAA,EAAD,CAAYsG,UAAU,KAAKnG,QAAQ,KAAKE,MAAM,UAA9C,6GAGAmD,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CAAKC,GAAI,CAACE,QAAS,OAAQkC,eAAgB,eAAgBlB,GAAI,IAC3DpE,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CACIvI,QAAQ,YACRgT,KAAK,QACLnK,QAAS,kBAAM/C,EAAS,eAH5B,oDAOAzC,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CACIvI,QAAQ,YACRgT,KAAK,QACLnK,QAAS,kBAAM/C,EAAS,cAH5B,oCASRzC,EAAAC,EAAAC,cAACuF,EAAD,SCkCVc,GAAc3F,YAAY,CAC5BC,KAAM,WACNC,aAnCwB,CACxB0F,KAAM,EACNoB,GAAI,GACJ/C,KAAM,GACN+K,MAAO,GACPjG,KAAM,KACNkG,UAAW,GACX/I,aAAc,GACdC,cAAe,GACfC,UAAW,GACXC,eAAgB,GAChBC,YAAa,GACbC,iBAAkB,GAClBC,gBAAiB,GACjBC,kBAAmB,KACnBC,kBAAmB,KACnBC,cAAe,GACfC,OAAQ,GACRC,kBAAmB,GACnBI,WAAY,GACZC,YAAa,GACbC,QAAS,GACTC,aAAc,GACdC,UAAW,GACXC,eAAgB,GAChBC,cAAe,GACfC,gBAAiB,KACjBC,gBAAiB,KACjBC,YAAa,GACbZ,SAAU,GACVC,KAAM,IAMNzG,SAAU,CACNsH,cADM,SACQnJ,KACRA,EAAMmH,MAEZsJ,UAJM,SAIIzQ,EAAO+B,KACX/B,EAAMmH,KACRnH,EAAMuI,GAAKxG,EAAOC,SAEtBqH,YARM,SAQMrJ,EAAO+B,KACb/B,EAAMmH,KACRnH,EAAMwF,KAAOzD,EAAOC,SAExBsH,YAZM,SAYMtJ,EAAO+B,KAKb/B,EAAMmH,KACRnH,EAAMuQ,MAAQxO,EAAOC,QAAQuO,MAC7BvQ,EAAMsK,KAAOvI,EAAOC,QAAQsI,KAC5BtK,EAAMwQ,UAAYzO,EAAOC,QAAQwO,WAErCpH,YAtBM,SAsBMpJ,EAAO+B,KAYb/B,EAAMmH,KACRnH,EAAMyH,aAAe1F,EAAOC,QAAQyF,aACpCzH,EAAM0H,cAAgB3F,EAAOC,QAAQ0F,cACrC1H,EAAM2H,UAAY5F,EAAOC,QAAQ2F,UACjC3H,EAAM4H,eAAiB7F,EAAOC,QAAQ4F,eACtC5H,EAAM6H,YAAc9F,EAAOC,QAAQ6F,YACnC7H,EAAM8H,iBAAmB/F,EAAOC,QAAQ8F,iBACxC9H,EAAM+H,gBAAkBhG,EAAOC,QAAQ+F,gBACvC/H,EAAMgI,kBAAoBjG,EAAOC,QAAQgG,kBACzChI,EAAMiI,kBAAoBlG,EAAOC,QAAQiG,kBACzCjI,EAAMkI,cAAgBnG,EAAOC,QAAQkG,eAEzCsB,cA9CM,SA8CQxJ,EAAO+B,KAIf/B,EAAMmH,KACRnH,EAAMmI,OAASpG,EAAOC,QAAQmG,OAC9BnI,EAAMoI,kBAAoBrG,EAAOC,QAAQoG,mBAE7CsI,eAtDM,SAsDS1Q,EAAO+B,KAYhB/B,EAAMmH,KACRnH,EAAMwI,WAAazG,EAAOC,QAAQwG,WAClCxI,EAAMyI,YAAc1G,EAAOC,QAAQyG,YACnCzI,EAAM0I,QAAU3G,EAAOC,QAAQ0G,QAC/B1I,EAAM2I,aAAe5G,EAAOC,QAAQ2G,aACpC3I,EAAM4I,UAAY7G,EAAOC,QAAQ4G,UACjC5I,EAAM6I,eAAiB9G,EAAOC,QAAQ6G,eACtC7I,EAAM8I,cAAgB/G,EAAOC,QAAQ8G,cACrC9I,EAAM+I,gBAAkBhH,EAAOC,QAAQ+G,gBACvC/I,EAAMgJ,gBAAkBjH,EAAOC,QAAQgH,gBACvChJ,EAAMiJ,YAAclH,EAAOC,QAAQiH,aAEvCQ,YA9EM,SA8EMzJ,EAAO+B,KACb/B,EAAMmH,KACRnH,EAAMqI,SAAWtG,EAAOC,QAAQqG,UAEpCqB,YAlFM,SAkFM1J,EAAO+B,KACb/B,EAAMmH,KACRnH,EAAMsI,KAAOvG,EAAOC,QAAQsG,YAepCpB,GAAYvE,QATZwG,oBACAsH,gBACApH,kBACAC,kBACAF,kBACAI,oBACAkH,qBACAjH,kBACAC,kBAEWxC,MAAf,QCjHe0C,GAlDE,WAAM,IAAA9G,EACKC,oBAAS,GADdC,EAAA5F,OAAA6F,EAAA,EAAA7F,CAAA0F,EAAA,GACZvC,EADYyC,EAAA,GACNxC,EADMwC,EAAA,GAEZuF,EAAM1F,YAAY3C,GAAlBqI,GACDrF,EAAWC,cACXC,EAAWC,cAkBjB,OACI1C,EAAAC,EAAAC,cAAAF,EAAAC,EAAAiJ,SAAA,KACIlJ,EAAAC,EAAAC,cAAC0C,EAAD,CAAahD,KAAMA,EAAMC,QAASA,IAClCG,EAAAC,EAAAC,cAAC1D,EAAA,EAAD,CAAYG,QAAQ,KAAKwM,cAAY,GAArC,4DAGAnJ,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CAAKH,UAAU,OAAOa,SAlBT,SAACC,GAClBA,EAAMC,iBACN,IACM+D,EADO,IAAI9D,SAASF,EAAMG,eAChBE,IAAI,MAEhB2D,EACArF,EAASuN,GAAUlI,IAEnB/H,GAAQ,KAWJG,EAAAC,EAAAC,cAACkJ,EAAA,EAAD,CACIC,kBAAgB,eAChBxI,KAAK,sBACLyI,aAAc1B,GAEd5H,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CAAkBjE,KAAK,KAAKoE,MAAM,uCAASF,QAAS/E,EAAAC,EAAAC,cAACqJ,EAAA,EAAD,MAAU7E,MAAM,yCACpE1E,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CAAkBjE,KAAK,KAAKoE,MAAM,yDAAYF,QAAS/E,EAAAC,EAAAC,cAACqJ,EAAA,EAAD,MAAU7E,MAAM,4DAE3E1E,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CAAKC,GAAI,CAACE,QAAS,OAAQkC,eAAgB,gBAAiBlB,GAAI,IAC5DpE,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAQM,QAhCL,WACf/C,EAAS,aA+BG,kCAGAzC,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAQL,KAAK,SAASlI,QAAQ,aAA9B,sCCOL6M,GAjDE,WAAM,IAAArH,EACKC,oBAAS,GADdC,EAAA5F,OAAA6F,EAAA,EAAA7F,CAAA0F,EAAA,GACZvC,EADYyC,EAAA,GACNxC,EADMwC,EAAA,GAEZwC,EAAQ3C,YAAY3C,GAApBsF,KACDtC,EAAWC,cAkBjB,OACIxC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAiJ,SAAA,KACIlJ,EAAAC,EAAAC,cAAC0C,EAAD,CAAahD,KAAMA,EAAMC,QAASA,IAClCG,EAAAC,EAAAC,cAAC1D,EAAA,EAAD,CAAYG,QAAQ,KAAKwM,cAAY,GAArC,uGAGAnJ,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CAAKH,UAAU,OAAOa,SAlBT,SAACC,GAClBA,EAAMC,iBACN,IACMgB,EADO,IAAIf,SAASF,EAAMG,eACdE,IAAI,QAElBY,EACAtC,EAASmG,GAAY7D,IAErBhF,GAAQ,KAWJG,EAAAC,EAAAC,cAACkJ,EAAA,EAAD,CACIC,kBAAgB,eAChBxI,KAAK,sBACLyI,aAAczE,GAEd7E,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CAAkBjE,KAAK,OAAOoE,MAAM,2BAAOF,QAAS/E,EAAAC,EAAAC,cAACqJ,EAAA,EAAD,MAAU7E,MAAM,6BACpE1E,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CAAkBjE,KAAK,OAAOoE,MAAM,iCAAQF,QAAS/E,EAAAC,EAAAC,cAACqJ,EAAA,EAAD,MAAU7E,MAAM,oCAEzE1E,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CAAKC,GAAI,CAACE,QAAS,OAAQkC,eAAgB,gBAAiBlB,GAAI,IAC5DpE,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAQM,QAhCL,WACfjD,EAASiG,QA+BG,kCAGAxI,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAQL,KAAK,SAASlI,QAAQ,aAA9B,sCCyCLI,GA7EE,WAAM,IAAAoF,EACKC,oBAAS,GADdC,EAAA5F,OAAA6F,EAAA,EAAA7F,CAAA0F,EAAA,GACZvC,EADYyC,EAAA,GACNxC,EADMwC,EAAA,GAAAoH,EAEyBvH,YAAY3C,GAAjDqQ,EAFYnG,EAEZmG,MAAaI,EAFDvG,EAELE,KAAiBkG,EAFZpG,EAEYoG,UACzBtN,EAAWC,cAHEmD,EAKKvD,mBAAuB4N,GAL5BpK,EAAAnJ,OAAA6F,EAAA,EAAA7F,CAAAkJ,EAAA,GAKZgE,EALY/D,EAAA,GAKNgE,EALMhE,EAAA,GAwBnB,OACI5F,EAAAC,EAAAC,cAAAF,EAAAC,EAAAiJ,SAAA,KACIlJ,EAAAC,EAAAC,cAAC0C,EAAD,CAAahD,KAAMA,EAAMC,QAASA,IAClCG,EAAAC,EAAAC,cAAC1D,EAAA,EAAD,CAAYG,QAAQ,KAAKwM,cAAY,GAArC,2IAGAnJ,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CAAKH,UAAU,OAAOa,SAnBT,SAACC,GAClBA,EAAMC,iBACN,IAAMpG,EAAO,IAAIqG,SAASF,EAAMG,eAC1B6L,EAAQnS,EAAKwG,IAAI,SACjB4L,EAAYpS,EAAKwG,IAAI,aAEvB2L,GAASC,GAAalG,EACtBpH,EAASoG,GAAY,CAACiH,QAAOC,YAAWlG,UAExC9J,GAAQ,KAWJG,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAMC,WAAS,EAACa,QAAS,GACrBlG,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAMG,MAAI,EAACY,GAAI,GAAIC,GAAI,GACnBpG,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CACIE,UAAQ,EACR1D,KAAK,YACL6D,MAAM,sEACNF,WAAS,EACTG,aAAa,eACb2E,aAAcuG,KAGtB7P,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAMG,MAAI,EAACY,GAAI,GAAIC,GAAI,GACnBpG,EAAAC,EAAAC,cAAC8J,GAAA,EAAD,CACIC,YAAaC,KACbC,cAAc,MAEdnK,EAAAC,EAAAC,cAACkK,GAAA,EAAD,CACI1F,MAAM,gEACNO,MAAO0E,EACPrD,SAAU,SAAA+D,GAAC,OAAIT,EAAQS,IACvBC,YAAa,SAACC,GAAD,OAAYvK,EAAAC,EAAAC,cAACmE,EAAA,EAAD5H,OAAAC,OAAA,CAAW8H,WAAS,GAAK+F,UAKlEvK,EAAAC,EAAAC,cAACkJ,EAAA,EAAD,CACIC,kBAAgB,eAChBxI,KAAK,sBACLyI,aAAcsG,GAEd5P,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CAAkBjE,KAAK,QAAQoE,MAAM,6EAAiBF,QAAS/E,EAAAC,EAAAC,cAACqJ,EAAA,EAAD,MAAU7E,MAAM,+EAC/E1E,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CAAkBjE,KAAK,QAAQoE,MAAM,gEAAcF,QAAS/E,EAAAC,EAAAC,cAACqJ,EAAA,EAAD,MAAU7E,MAAM,mEAEhF1E,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CAAKC,GAAI,CAACE,QAAS,OAAQkC,eAAgB,gBAAiBlB,GAAI,IAC5DpE,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAQM,QA1DL,WACfjD,EAASiG,QAyDG,kCAGAxI,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAQL,KAAK,SAASlI,QAAQ,aAA9B,sCCyHLsM,GA7LE,WAAM,IAAAQ,EAYfvH,YAAY3C,GAVZuH,EAFe2C,EAEf3C,aACAC,EAHe0C,EAGf1C,cACAC,EAJeyC,EAIfzC,UACAC,EALewC,EAKfxC,eACAC,EANeuC,EAMfvC,YACAC,EAPesC,EAOftC,iBACAC,EAReqC,EAQfrC,gBACmBsD,EATJjB,EASfpC,kBACmBsD,EAVJlB,EAUfnC,kBACAC,EAXekC,EAWflC,cAEEhF,EAAWC,cAbEoI,EAe+BC,IAAMzI,SAAuBsI,GAf5DI,EAAArO,OAAA6F,EAAA,EAAA7F,CAAAmO,EAAA,GAeZvD,EAfYyD,EAAA,GAeOC,EAfPD,EAAA,GAAAE,EAgB+BH,IAAMzI,SAAuBuI,GAhB5DM,EAAAxO,OAAA6F,EAAA,EAAA7F,CAAAuO,EAAA,GAgBZ1D,EAhBY2D,EAAA,GAgBOC,EAhBPD,EAAA,GAAA9I,EAiBKC,oBAAS,GAjBdC,EAAA5F,OAAA6F,EAAA,EAAA7F,CAAA0F,EAAA,GAiBZvC,EAjBYyC,EAAA,GAiBNxC,EAjBMwC,EAAA,GAqDnB,OACIrC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAiJ,SAAA,KACIlJ,EAAAC,EAAAC,cAAC0C,EAAD,CAAahD,KAAMA,EAAMC,QAASA,IAClCG,EAAAC,EAAAC,cAAC1D,EAAA,EAAD,CAAYG,QAAQ,KAAKwM,cAAY,GAArC,2KAGAnJ,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CAAKH,UAAU,OAAOa,SApCT,SAACC,GAClBA,EAAMC,iBACN,IAAMpG,EAAO,IAAIqG,SAASF,EAAMG,eAC1BiC,EAAWvI,EAAKwG,IAAI,YACpB8B,EAAYtI,EAAKwG,IAAI,aACrBkH,EAAc1N,EAAKwG,IAAI,eACvBmH,EAAmB3N,EAAKwG,IAAI,oBAC5BoH,EAAU5N,EAAKwG,IAAI,WACnBqH,EAAe7N,EAAKwG,IAAI,gBACxBsH,EAAY9N,EAAKwG,IAAI,aACrBgC,EAAUxI,EAAKwG,IAAI,WAErB+B,GAAYD,GAAaoF,GAAeE,GAAWE,GAAatF,EAChE1D,EAASkG,GAAY,CACjB3B,aAAcd,EACde,cAAehB,EACfiB,UAAWmE,EACXlE,eAAgBmE,EAChBlE,YAAamE,EACblE,iBAAkBmE,EAClBlE,gBAAiBnB,EACjBoB,oBACAC,oBACAC,cAAegE,KAGnB1L,GAAQ,KAWJG,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAMC,WAAS,EAACa,QAAS,GACrBlG,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAMG,MAAI,EAACY,GAAI,GAAIC,GAAI,GACnBpG,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CACIE,UAAQ,EACRE,GAAG,WACH5D,KAAK,WACL6D,MAAM,6CACNF,WAAS,EACTG,aAAa,cACb2E,aAAcxC,KAGtB9G,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAMG,MAAI,EAACY,GAAI,GAAIC,GAAI,GACnBpG,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CACIE,UAAQ,EACRE,GAAG,YACH5D,KAAK,YACL6D,MAAM,qBACNF,WAAS,EACTG,aAAa,aACb2E,aAAcvC,KAGtB/G,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAMG,MAAI,EAACY,GAAI,IACXnG,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CACIE,UAAQ,EACRE,GAAG,cACH5D,KAAK,cACL6D,MAAM,kFACNF,WAAS,EACTG,aAAa,MACbE,KAAK,QACLyE,aAActC,KAGtBhH,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAMG,MAAI,EAACY,GAAI,IACXnG,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CACII,GAAG,mBACH5D,KAAK,mBACL6D,MAAM,sGACNF,WAAS,EACTG,aAAa,MACbE,KAAK,QACLyE,aAAcrC,KAGtBjH,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAMG,MAAI,EAACY,GAAI,IACXnG,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CACIE,UAAQ,EACRE,GAAG,UACH5D,KAAK,UACL6D,MAAM,iCACNF,WAAS,EACTG,aAAa,iBACb2E,aAAcpC,KAGtBlH,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAMG,MAAI,EAACY,GAAI,IACXnG,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CACII,GAAG,eACH5D,KAAK,eACL6D,MAAM,qDACNF,WAAS,EACTG,aAAa,iBACb2E,aAAcnC,KAGtBnH,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAMG,MAAI,EAACY,GAAI,GAAIC,GAAI,GACnBpG,EAAAC,EAAAC,cAAC8J,GAAA,EAAD,CACIC,YAAaC,KACbC,cAAc,MAEdnK,EAAAC,EAAAC,cAACsL,GAAA,EAAD,CACI9G,MAAM,6EACNO,MAAOoC,EACPf,SAAU,SAACmF,GAAD,OAAcV,EAAqBU,IAC7CnB,YAAa,SAACC,GAAD,OAAYvK,EAAAC,EAAAC,cAACmE,EAAA,EAAD5H,OAAAC,OAAA,CAAW8H,WAAS,GAAK+F,SAI9DvK,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAMG,MAAI,EAACY,GAAI,GAAIC,GAAI,GACnBpG,EAAAC,EAAAC,cAAC8J,GAAA,EAAD,CACIC,YAAaC,KACbC,cAAc,MAEdnK,EAAAC,EAAAC,cAACsL,GAAA,EAAD,CACI9G,MAAM,mFACNO,MAAOqC,EACPhB,SAAU,SAACmF,GAAD,OAAcP,EAAqBO,IAC7CnB,YAAa,SAACC,GAAD,OAAYvK,EAAAC,EAAAC,cAACmE,EAAA,EAAD5H,OAAAC,OAAA,CAAW8H,WAAS,GAAK+F,SAI9DvK,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAMG,MAAI,EAACY,GAAI,IACXnG,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CACIE,UAAQ,EACRE,GAAG,UACH5D,KAAK,UACL6D,MAAM,sHACNF,WAAS,EACTG,aAAa,eACb2E,aAAclC,KAGtBpH,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAMG,MAAI,EAACY,GAAI,IACXnG,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CACIE,UAAQ,EACRE,GAAG,YACH5D,KAAK,YACL6D,MAAM,yDACNF,WAAS,EACTG,aAAa,YACb2E,aAAc/B,MAI1BvH,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CAAKC,GAAI,CAACE,QAAS,OAAQkC,eAAgB,gBAAiBlB,GAAI,IAC5DpE,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAQM,QA9JL,WACfjD,EAASiG,QA6JG,kCAGAxI,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAQvI,QAAQ,YAAYkI,KAAK,UAAjC,sCCjHL6G,GA/DI,WAAM,IAAAjC,EACevH,YAAY3C,GAAzCiI,EADciC,EACdjC,OAAQC,EADMgC,EACNhC,kBACTlF,EAAWC,cAFIL,EAIGC,oBAAS,GAJZC,EAAA5F,OAAA6F,EAAA,EAAA7F,CAAA0F,EAAA,GAIdvC,EAJcyC,EAAA,GAIRxC,EAJQwC,EAAA,GAuBrB,OACIrC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAiJ,SAAA,KACIlJ,EAAAC,EAAAC,cAAC0C,EAAD,CAAahD,KAAMA,EAAMC,QAASA,IAClCG,EAAAC,EAAAC,cAAC1D,EAAA,EAAD,CAAYG,QAAQ,KAAKwM,cAAY,GAArC,iGAGAnJ,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CAAKH,UAAU,OAAOa,SAnBT,SAACC,GAClBA,EAAMC,iBACN,IAAMpG,EAAO,IAAIqG,SAASF,EAAMG,eAC1ByD,EAAS/J,EAAKwG,IAAI,UAClB0H,EAAclO,EAAKwG,IAAI,eAEzBuD,GAAUmE,EACVpJ,EAASsG,GAAc,CAACrB,SAAQC,kBAAmBkE,KAEnD9L,GAAQ,KAWJG,EAAAC,EAAAC,cAACkJ,EAAA,EAAD,CACIC,kBAAgB,iBAChBxI,KAAK,sBACLyI,aAAc9B,GAEdxH,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CAAkBjE,KAAK,SAASoE,MAAM,6CAAUF,QAAS/E,EAAAC,EAAAC,cAACqJ,EAAA,EAAD,MAAU7E,MAAM,+CACzE1E,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CAAkBjE,KAAK,SAASoE,MAAM,iCAAQF,QAAS/E,EAAAC,EAAAC,cAACqJ,EAAA,EAAD,MAAU7E,MAAM,mCACvE1E,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CAAkBjE,KAAK,SAASoE,MAAM,uCAASF,QAAS/E,EAAAC,EAAAC,cAACqJ,EAAA,EAAD,MAAU7E,MAAM,0CAE5E1E,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CACIiF,aAAc7B,EACd5G,KAAK,cACL0D,UAAQ,EACRE,GAAG,8BACHC,MAAM,mDACNkH,WAAS,EACTC,QAAS,EACTC,YAAY,izBACZtH,WAAS,IAEbxE,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CAAKC,GAAI,CAACE,QAAS,OAAQkC,eAAgB,gBAAiBlB,GAAI,IAC5DpE,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAQM,QA7CL,WACfjD,EAASiG,QA4CG,kCAGAxI,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAQvI,QAAQ,YAAYkI,KAAK,UAAjC,sCCZLkH,GAlDF,WAAM,IACRrE,EAAYxF,YAAY3C,GAAxBmI,SACDnF,EAAWC,cAFFL,EAISC,oBAAS,GAJlBC,EAAA5F,OAAA6F,EAAA,EAAA7F,CAAA0F,EAAA,GAIRvC,EAJQyC,EAAA,GAIFxC,EAJEwC,EAAA,GAsBf,OACIrC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAiJ,SAAA,KACIlJ,EAAAC,EAAAC,cAAC0C,EAAD,CAAahD,KAAMA,EAAMC,QAASA,IAClCG,EAAAC,EAAAC,cAAC1D,EAAA,EAAD,CAAYG,QAAQ,KAAKwM,cAAY,GAArC,2FAGAnJ,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CAAKH,UAAU,OAAOa,SAlBT,SAACC,GAClBA,EAAMC,iBACN,IACMmI,EADO,IAAIlI,SAASF,EAAMG,eACdE,IAAI,QAElB+H,EACAzJ,EAASuG,GAAY,CAACpB,SAAUsE,KAEhCnM,GAAQ,KAWJG,EAAAC,EAAAC,cAACkJ,EAAA,EAAD,CACIC,kBAAgB,eAChBxI,KAAK,sBACLyI,aAAc5B,GAEd1H,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CAAkBjE,KAAK,OAAOoE,MAAM,iCAAQF,QAAS/E,EAAAC,EAAAC,cAACqJ,EAAA,EAAD,MAAU7E,MAAM,8EACrE1E,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CAAkBjE,KAAK,OAAOoE,MAAM,8CAAWF,QAAS/E,EAAAC,EAAAC,cAACqJ,EAAA,EAAD,MAAU7E,MAAM,4FAE5E1E,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CAAKC,GAAI,CAACE,QAAS,OAAQkC,eAAgB,gBAAiBlB,GAAI,IAC5DpE,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAQM,QAhCL,WACfjD,EAASiG,QA+BG,kCAGAxI,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAQvI,QAAQ,YAAYkI,KAAK,UAAjC,sCCuJLoL,GA7LK,WAAM,IAAAxG,EAYlBvH,YAAY3C,GAVZsI,EAFkB4B,EAElB5B,WACAC,EAHkB2B,EAGlB3B,YACAC,EAJkB0B,EAIlB1B,QACAC,EALkByB,EAKlBzB,aACAC,EANkBwB,EAMlBxB,UACAC,EAPkBuB,EAOlBvB,eACAC,EARkBsB,EAQlBtB,cACiBgE,EATC1C,EASlBrB,gBACiBgE,EAVC3C,EAUlBpB,gBACAC,EAXkBmB,EAWlBnB,YAEE/F,EAAWC,cAbKoI,EAe0BC,IAAMzI,SAAuB+J,GAfvDrB,EAAArO,OAAA6F,EAAA,EAAA7F,CAAAmO,EAAA,GAefxC,EAfe0C,EAAA,GAeEC,EAfFD,EAAA,GAAAE,EAgB0BH,IAAMzI,SAAuBgK,GAhBvDnB,EAAAxO,OAAA6F,EAAA,EAAA7F,CAAAuO,EAAA,GAgBf3C,EAhBe4C,EAAA,GAgBEC,EAhBFD,EAAA,GAAA9I,EAiBEC,oBAAS,GAjBXC,EAAA5F,OAAA6F,EAAA,EAAA7F,CAAA0F,EAAA,GAiBfvC,EAjBeyC,EAAA,GAiBTxC,EAjBSwC,EAAA,GAqDtB,OACIrC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAiJ,SAAA,KACIlJ,EAAAC,EAAAC,cAAC0C,EAAD,CAAahD,KAAMA,EAAMC,QAASA,IAClCG,EAAAC,EAAAC,cAAC1D,EAAA,EAAD,CAAYG,QAAQ,KAAKwM,cAAY,GAArC,2KAGAnJ,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CAAKH,UAAU,OAAOa,SApCT,SAACC,GAClBA,EAAMC,iBACN,IAAMpG,EAAO,IAAIqG,SAASF,EAAMG,eAC1BiC,EAAWvI,EAAKwG,IAAI,YACpB8B,EAAYtI,EAAKwG,IAAI,aACrBkH,EAAc1N,EAAKwG,IAAI,eACvBmH,EAAmB3N,EAAKwG,IAAI,oBAC5BoH,EAAU5N,EAAKwG,IAAI,WACnBqH,EAAe7N,EAAKwG,IAAI,gBACxBsH,EAAY9N,EAAKwG,IAAI,aACrBgC,EAAUxI,EAAKwG,IAAI,WAErB+B,GAAYD,GAAaoF,GAAeE,GAAWE,GAAatF,EAChE1D,EAASwN,GAAe,CACpBlI,WAAY7B,EACZ8B,YAAa/B,EACbgC,QAASoD,EACTnD,aAAcoD,EACdnD,UAAWoD,EACXnD,eAAgBoD,EAChBnD,cAAelC,EACfmC,kBACAC,kBACAC,YAAaiD,KAGjB1L,GAAQ,KAWJG,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAMC,WAAS,EAACa,QAAS,GACrBlG,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAMG,MAAI,EAACY,GAAI,GAAIC,GAAI,GACnBpG,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CACIE,UAAQ,EACRE,GAAG,WACH5D,KAAK,WACL6D,MAAM,6CACNF,WAAS,EACTG,aAAa,cACb2E,aAAczB,KAGtB7H,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAMG,MAAI,EAACY,GAAI,GAAIC,GAAI,GACnBpG,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CACIE,UAAQ,EACRE,GAAG,YACH5D,KAAK,YACL6D,MAAM,qBACNF,WAAS,EACTG,aAAa,aACb2E,aAAcxB,KAGtB9H,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAMG,MAAI,EAACY,GAAI,IACXnG,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CACIE,UAAQ,EACRE,GAAG,cACH5D,KAAK,cACL6D,MAAM,kFACNF,WAAS,EACTG,aAAa,MACbE,KAAK,QACLyE,aAAcvB,KAGtB/H,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAMG,MAAI,EAACY,GAAI,IACXnG,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CACII,GAAG,mBACH5D,KAAK,mBACL6D,MAAM,sGACNF,WAAS,EACTG,aAAa,MACbE,KAAK,QACLyE,aAActB,KAGtBhI,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAMG,MAAI,EAACY,GAAI,IACXnG,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CACIE,UAAQ,EACRE,GAAG,UACH5D,KAAK,UACL6D,MAAM,iCACNF,WAAS,EACTG,aAAa,iBACb2E,aAAcrB,KAGtBjI,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAMG,MAAI,EAACY,GAAI,IACXnG,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CACII,GAAG,eACH5D,KAAK,eACL6D,MAAM,qDACNF,WAAS,EACTG,aAAa,iBACb2E,aAAcpB,KAGtBlI,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAMG,MAAI,EAACY,GAAI,GAAIC,GAAI,GACnBpG,EAAAC,EAAAC,cAAC8J,GAAA,EAAD,CACIC,YAAaC,KACbC,cAAc,MAEdnK,EAAAC,EAAAC,cAACsL,GAAA,EAAD,CACI9G,MAAM,6EACNO,MAAOmD,EACP9B,SAAU,SAACmF,GAAD,OAAcV,EAAqBU,IAC7CnB,YAAa,SAACC,GAAD,OAAYvK,EAAAC,EAAAC,cAACmE,EAAA,EAAD5H,OAAAC,OAAA,CAAW8H,WAAS,GAAK+F,SAI9DvK,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAMG,MAAI,EAACY,GAAI,GAAIC,GAAI,GACnBpG,EAAAC,EAAAC,cAAC8J,GAAA,EAAD,CACIC,YAAaC,KACbC,cAAc,MAEdnK,EAAAC,EAAAC,cAACsL,GAAA,EAAD,CACI9G,MAAM,mFACNO,MAAOoD,EACP/B,SAAU,SAACmF,GAAD,OAAcP,EAAqBO,IAC7CnB,YAAa,SAACC,GAAD,OAAYvK,EAAAC,EAAAC,cAACmE,EAAA,EAAD5H,OAAAC,OAAA,CAAW8H,WAAS,GAAK+F,SAI9DvK,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAMG,MAAI,EAACY,GAAI,IACXnG,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CACIE,UAAQ,EACRE,GAAG,UACH5D,KAAK,UACL6D,MAAM,sHACNF,WAAS,EACTG,aAAa,eACb2E,aAAcnB,KAGtBnI,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAMG,MAAI,EAACY,GAAI,IACXnG,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CACIE,UAAQ,EACRE,GAAG,YACH5D,KAAK,YACL6D,MAAM,yDACNF,WAAS,EACTG,aAAa,YACb2E,aAAchB,MAI1BtI,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CAAKC,GAAI,CAACE,QAAS,OAAQkC,eAAgB,gBAAiBlB,GAAI,IAC5DpE,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAQM,QA9JL,WACfjD,EAASiG,QA6JG,kCAGAxI,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAQvI,QAAQ,YAAYkI,KAAK,UAAjC,sCC/HLoH,GAvDE,WAAM,IACZtE,EAAQzF,YAAY3C,GAApBoI,KACDpF,EAAWC,cACX0N,EAAaxN,cAHAP,EAKKC,oBAAS,GALdC,EAAA5F,OAAA6F,EAAA,EAAA7F,CAAA0F,EAAA,GAKZvC,EALYyC,EAAA,GAKNxC,EALMwC,EAAA,GAwBnB,OACIrC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAiJ,SAAA,KACIlJ,EAAAC,EAAAC,cAAC0C,EAAD,CAAahD,KAAMA,EAAMC,QAASA,IAClCG,EAAAC,EAAAC,cAAC1D,EAAA,EAAD,CAAYG,QAAQ,KAAKwM,cAAY,GAArC,8JAGAnJ,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CAAKH,UAAU,OAAOa,SAnBT,SAACC,GAClBA,EAAMC,iBACN,IACM8D,EADO,IAAI7D,SAASF,EAAMG,eACdE,IAAI,QAElB0D,GACApF,EAASwG,GAAY,CAACpB,UACtBuI,EAAW,oBAEXrQ,GAAQ,KAWJG,EAAAC,EAAAC,cAACkJ,EAAA,EAAD,CACIC,kBAAgB,eAChBxI,KAAK,sBACLyI,aAAc3B,GAEd3H,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CAAkBjE,KAAK,OAAOoE,MAAM,oCAAWF,QAAS/E,EAAAC,EAAAC,cAACqJ,EAAA,EAAD,MAAU7E,MAAM,sHACxE1E,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CAAkBjE,KAAK,OAAOoE,MAAM,oCAAWF,QAAS/E,EAAAC,EAAAC,cAACqJ,EAAA,EAAD,MAAU7E,MAAM,sHACxE1E,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CAAkBjE,KAAK,OAAOoE,MAAM,uBAAQF,QAAS/E,EAAAC,EAAAC,cAACqJ,EAAA,EAAD,MAAU7E,MAAM,uGACrE1E,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CAAkBjE,KAAK,OAAOoE,MAAM,6BAASF,QAAS/E,EAAAC,EAAAC,cAACqJ,EAAA,EAAD,MAAU7E,MAAM,+GACtE1E,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CAAkBjE,KAAK,OAAOoE,MAAM,8CAAWF,QAAS/E,EAAAC,EAAAC,cAACqJ,EAAA,EAAD,MAAU7E,MAAM,gIAE5E1E,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CAAKC,GAAI,CAACE,QAAS,OAAQkC,eAAgB,gBAAiBlB,GAAI,IAC5DpE,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAQM,QApCL,WACfjD,EAASiG,QAmCG,kCAGAxI,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAQvI,QAAQ,YAAYkI,KAAK,UAAjC,sCCWLsL,GAnDM,WAAM,IAChB3J,EAAQtE,YAAY3C,GAApBiH,KAED6G,EAAiBC,sBACnB,SAAC9G,GACG,OAAQA,GACJ,KAAK,EACD,OAAOxG,EAAAC,EAAAC,cAACkQ,GAAD,MACX,KAAK,EACD,OAAOpQ,EAAAC,EAAAC,cAACmQ,GAAD,MACX,KAAK,EACD,OAAOrQ,EAAAC,EAAAC,cAACoQ,GAAD,MACX,KAAK,EACD,OAAOtQ,EAAAC,EAAAC,cAACqQ,GAAD,MACX,KAAK,EACD,OAAOvQ,EAAAC,EAAAC,cAACsQ,GAAD,MACX,KAAK,EACD,OAAOxQ,EAAAC,EAAAC,cAACuQ,GAAD,MACX,KAAK,EACD,OAAOzQ,EAAAC,EAAAC,cAACwQ,GAAD,MACX,KAAK,EACD,OAAO1Q,EAAAC,EAAAC,cAACyQ,GAAD,QAEhB,IAEP,OACI3Q,EAAAC,EAAAC,cAAAF,EAAAC,EAAAiJ,SAAA,KACIlJ,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,MACAhD,EAAAC,EAAAC,cAAC6N,GAAD,MACA/N,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,KAAKG,GAAI,CAACiC,GAAI,IAC/CnF,EAAAC,EAAAC,cAAC8N,EAAA,EAAD,CAAOrR,QAAQ,WAAWuG,GAAI,CAAC+K,GAAI,CAAC9H,GAAI,EAAG+H,GAAI,GAAIC,EAAG,CAAChI,GAAI,EAAG+H,GAAI,KAC9DlO,EAAAC,EAAAC,cAAC1D,EAAA,EAAD,CAAYsG,UAAU,KAAKnG,QAAQ,KAAKE,MAAM,UAA9C,mFAGAmD,EAAAC,EAAAC,cAACkO,EAAA,EAAD,CAASC,WAAY7H,EAAM8H,kBAAgB,EAACpL,GAAI,CAACqL,GAAI,EAAGC,GAAI,IACvDC,MAAM,GAAGC,KAAK,IAAIC,IAAI,SAACC,EAAIC,GAAL,OACnB7O,EAAAC,EAAAC,cAAC4O,EAAA,EAAD,CAAMC,IAAKF,GACP7O,EAAAC,EAAAC,cAAC8O,EAAA,EAAD,UAIZhP,EAAAC,EAAAC,cAAAF,EAAAC,EAAAiJ,SAAA,KACKmE,EAAe7G,KAGxBxG,EAAAC,EAAAC,cAACuF,EAAD,SCsIDmL,GAvLW,WACtB,IAAMnT,EAAOyE,YAAY9C,GADGqK,EAkCtBvH,YAAY3C,GA/BdiH,EAHwBiD,EAGxBjD,KACAoB,EAJwB6B,EAIxB7B,GACA/C,EALwB4E,EAKxB5E,KACA+K,EANwBnG,EAMxBmG,MACAjG,EAPwBF,EAOxBE,KACAkG,EARwBpG,EAQxBoG,UACA/I,EATwB2C,EASxB3C,aACAC,EAVwB0C,EAUxB1C,cACAC,EAXwByC,EAWxBzC,UACAC,EAZwBwC,EAYxBxC,eACAC,EAbwBuC,EAaxBvC,YACAC,EAdwBsC,EAcxBtC,iBACAC,EAfwBqC,EAexBrC,gBACAC,EAhBwBoC,EAgBxBpC,kBACAC,EAjBwBmC,EAiBxBnC,kBACAC,EAlBwBkC,EAkBxBlC,cACAC,EAnBwBiC,EAmBxBjC,OACAC,EApBwBgC,EAoBxBhC,kBACAI,EArBwB4B,EAqBxB5B,WACAC,EAtBwB2B,EAsBxB3B,YACAC,EAvBwB0B,EAuBxB1B,QACAC,EAxBwByB,EAwBxBzB,aACAC,EAzBwBwB,EAyBxBxB,UACAC,EA1BwBuB,EA0BxBvB,eACAC,EA3BwBsB,EA2BxBtB,cACAC,EA5BwBqB,EA4BxBrB,gBACAC,EA7BwBoB,EA6BxBpB,gBACAC,EA9BwBmB,EA8BxBnB,YACAZ,EA/BwB+B,EA+BxB/B,SACAC,EAhCwB8B,EAgCxB9B,KAhCwBxF,EAmCEC,oBAAS,GAnCXC,EAAA5F,OAAA6F,EAAA,EAAA7F,CAAA0F,EAAA,GAmCrB+M,EAnCqB7M,EAAA,GAmCZ8M,EAnCY9M,EAAA,GAAAsD,EAoCFvD,oBAAS,GApCPwD,GAAAnJ,OAAA6F,EAAA,EAAA7F,CAAAkJ,EAAA,GAoCrB3E,GApCqB4E,GAAA,GAoCdwJ,GApCcxJ,GAAA,GAkDtBnD,GAAWC,cAQjB,OANAC,oBAAU,WACF6D,EAAO,GACP/D,GAAS,aAEd,IAGCzC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAiJ,SAAA,KACIlJ,EAAAC,EAAAC,cAAC0C,EAAD,CAAa7C,WAAS,EAACD,QAAS,oGAAqBF,KAAMsP,EAASrP,QAASsP,IAC7EnP,EAAAC,EAAAC,cAAC0C,EAAD,CAAa9C,QAAS,wFAAmBF,KAAMoB,GAAOnB,QAASuP,KAC/DpP,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,MACAhD,EAAAC,EAAAC,cAAC6N,GAAD,MACA/N,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,KAAKG,GAAI,CAACiC,GAAI,IAC/CnF,EAAAC,EAAAC,cAAC8N,EAAA,EAAD,CAAOrR,QAAQ,WAAWuG,GAAI,CAAC+K,GAAI,CAAC9H,GAAI,EAAG+H,GAAI,GAAIC,EAAG,CAAChI,GAAI,EAAG+H,GAAI,KAC9DlO,EAAAC,EAAAC,cAAC1D,EAAA,EAAD,CAAYsG,UAAU,KAAKnG,QAAQ,KAAKE,MAAM,UAA9C,yFAGAmD,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAMC,WAAS,EAACa,QAAS,GACrBlG,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAMG,MAAI,EAACY,GAAI,GAAIC,GAAI,GACnBpG,EAAAC,EAAAC,cAAC1D,EAAA,EAAD,CAAYG,QAAQ,KAAKE,MAAM,UAA/B,2DAGAmD,EAAAC,EAAAC,cAAC1D,EAAA,EAAD,CAAYG,QAAQ,aAApB,4DACiBiL,GAEjB5H,EAAAC,EAAAC,cAAC1D,EAAA,EAAD,CAAYG,QAAQ,aAApB,4DACiBkI,GAEjB7E,EAAAC,EAAAC,cAAC1D,EAAA,EAAD,CAAYG,QAAQ,aAApB,wEACmBkT,GAEnB7P,EAAAC,EAAAC,cAAC1D,EAAA,EAAD,CAAYG,QAAQ,aAApB,kEACkB0S,KAAM1F,GAAM2F,OAAO,eAErCtP,EAAAC,EAAAC,cAAC1D,EAAA,EAAD,CAAYG,QAAQ,aAApB,sGACwBiT,GAExB5P,EAAAC,EAAAC,cAAC1D,EAAA,EAAD,CAAYG,QAAQ,aAApB,+CACcmK,GAEd9G,EAAAC,EAAAC,cAAC1D,EAAA,EAAD,CAAYG,QAAQ,aAApB,uBACUoK,GAEV/G,EAAAC,EAAAC,cAAC1D,EAAA,EAAD,CAAYG,QAAQ,aAApB,oFACqBqK,GAErBhH,EAAAC,EAAAC,cAAC1D,EAAA,EAAD,CAAYG,QAAQ,aAApB,wGAC0BsK,GAE1BjH,EAAAC,EAAAC,cAAC1D,EAAA,EAAD,CAAYG,QAAQ,aAApB,mCACYuK,GAEZlH,EAAAC,EAAAC,cAAC1D,EAAA,EAAD,CAAYG,QAAQ,aAApB,uDACiBwK,GAEjBnH,EAAAC,EAAAC,cAAC1D,EAAA,EAAD,CAAYG,QAAQ,aAApB,+EACqB0S,KAAMhI,GAAmBiI,OAAO,YAErDtP,EAAAC,EAAAC,cAAC1D,EAAA,EAAD,CAAYG,QAAQ,aAApB,qFACsB0S,KAAM/H,GAAmBgI,OAAO,YAEtDtP,EAAAC,EAAAC,cAAC1D,EAAA,EAAD,CAAYG,QAAQ,aAApB,wHAC2ByK,GAE3BpH,EAAAC,EAAAC,cAAC1D,EAAA,EAAD,CAAYG,QAAQ,aAApB,2DACgB4K,GAEhBvH,EAAAC,EAAAC,cAAC1D,EAAA,EAAD,CAAYG,QAAQ,aAApB,iGACwB6K,GAExBxH,EAAAC,EAAAC,cAAC1D,EAAA,EAAD,CAAYG,QAAQ,aAApB,oFACqB8K,GAErBzH,EAAAC,EAAAC,cAAC1D,EAAA,EAAD,CAAYG,QAAQ,aAApB,2FACuB+K,GAEvB1H,EAAAC,EAAAC,cAAC1D,EAAA,EAAD,CAAYG,QAAQ,aAApB,8JACmCgL,IAGvC3H,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAMG,MAAI,EAACY,GAAI,GAAIC,GAAI,GACnBpG,EAAAC,EAAAC,cAAC1D,EAAA,EAAD,CAAYG,QAAQ,KAAKE,MAAM,UAA/B,wEAGAmD,EAAAC,EAAAC,cAAC1D,EAAA,EAAD,CAAYG,QAAQ,aAApB,+CACckL,GAEd7H,EAAAC,EAAAC,cAAC1D,EAAA,EAAD,CAAYG,QAAQ,aAApB,uBACUmL,GAEV9H,EAAAC,EAAAC,cAAC1D,EAAA,EAAD,CAAYG,QAAQ,aAApB,oFACqBoL,GAErB/H,EAAAC,EAAAC,cAAC1D,EAAA,EAAD,CAAYG,QAAQ,aAApB,wGAC0BqL,GAE1BhI,EAAAC,EAAAC,cAAC1D,EAAA,EAAD,CAAYG,QAAQ,aAApB,mCACYsL,GAEZjI,EAAAC,EAAAC,cAAC1D,EAAA,EAAD,CAAYG,QAAQ,aAApB,uDACiBuL,GAEjBlI,EAAAC,EAAAC,cAAC1D,EAAA,EAAD,CAAYG,QAAQ,aAApB,+EACqB0S,KAAMjH,GAAiBkH,OAAO,YAEnDtP,EAAAC,EAAAC,cAAC1D,EAAA,EAAD,CAAYG,QAAQ,aAApB,qFACsB0S,KAAMhH,GAAiBiH,OAAO,YAEpDtP,EAAAC,EAAAC,cAAC1D,EAAA,EAAD,CAAYG,QAAQ,aAApB,wHAC2BwL,GAE3BnI,EAAAC,EAAAC,cAAC1D,EAAA,EAAD,CAAYG,QAAQ,aAApB,2DACgB2L,KAIxBtI,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CAAKC,GAAI,CAACE,QAAS,OAAQkC,eAAgB,gBAAiBlB,GAAI,IAC5DpE,EAAAC,EAAAC,cAACgF,EAAA,EAAD,uCAGAlF,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAQvI,QAAQ,YAAY6I,QAtI/B,WACbzH,IAAMC,KAAK,iIAAXvB,OAAA8S,GAAA,EAAA9S,CAAA,GAAiEgB,EAAjE,CACIkM,KAAM0F,KAAM1F,GAAM2F,OAAO,cACzBjI,kBAAmBgI,KAAMhI,GAAmBiI,OAAO,WACnDhI,kBAAmB+H,KAAM/H,GAAmBgI,OAAO,WACnDlH,gBAAiBiH,KAAMjH,GAAiBkH,OAAO,WAC/CjH,gBAAiBgH,KAAMhH,GAAiBiH,OAAO,cAE9CE,KAAK,kBAAML,GAAW,KACtBM,MAAM,kBAAML,IAAS,OA6HV,wEAKRpP,EAAAC,EAAAC,cAACuF,EAAD,mBC7HDoL,GAhDO,WAClB,IAAMtO,EAAWC,cADOiH,EAEIvH,YAAYzC,GAAjCsB,EAFiB0I,EAEjB1I,OAAQE,EAFSwI,EAETxI,UAaf,OAXA0B,oBAAU,WACN,IAAMZ,EAAMR,aAAauP,QAAQ,OAI7BvO,EAFDR,EAEUhD,EAAa,CAACgD,QAEdL,GAAW,KAEzB,IAEAT,EAEKjB,EAAAC,EAAAC,cAAA,OAAK6Q,MAAO,CAACC,OAAQ,QAASC,MAAO,QAAS7N,QAAS,OAAQE,WAAY,SAAUgC,eAAgB,WACjGtF,EAAAC,EAAAC,cAACgR,GAAA,EAAD,OAMRlR,EAAAC,EAAAC,cAACiR,EAAA,EAAD,KACInR,EAAAC,EAAAC,cAACkR,EAAA,EAAD,KAESrQ,EAOGf,EAAAC,EAAAC,cAACkR,EAAA,EAAD,CAAOC,KAAK,KACRrR,EAAAC,EAAAC,cAACkR,EAAA,EAAD,CAAOC,KAAK,SAASC,QAAStR,EAAAC,EAAAC,cAACqR,GAAD,QAC9BvR,EAAAC,EAAAC,cAACkR,EAAA,EAAD,CAAOC,KAAK,UAAUC,QAAStR,EAAAC,EAAAC,cAACsR,GAAD,QAC/BxR,EAAAC,EAAAC,cAACkR,EAAA,EAAD,CAAOC,KAAK,gBAAgBC,QAAStR,EAAAC,EAAAC,cAACuR,GAAD,QACrCzR,EAAAC,EAAAC,cAACkR,EAAA,EAAD,CAAOC,KAAK,WAAWC,QAAStR,EAAAC,EAAAC,cAACV,GAAD,QAChCQ,EAAAC,EAAAC,cAACkR,EAAA,EAAD,CAAOC,KAAK,iBAAiBC,QAAStR,EAAAC,EAAAC,cAACwR,GAAD,QACtC1R,EAAAC,EAAAC,cAACkR,EAAA,EAAD,CAAOC,KAAK,IAAIC,QAAStR,EAAAC,EAAAC,cAACkR,EAAA,EAAD,CAAUxJ,GAAG,UAAU+J,SAAO,OAZ3D3R,EAAAC,EAAAC,cAAAF,EAAAC,EAAAiJ,SAAA,KACIlJ,EAAAC,EAAAC,cAACkR,EAAA,EAAD,CAAOC,KAAK,WAAWC,QAAStR,EAAAC,EAAAC,cAAC0R,EAAD,QAChC5R,EAAAC,EAAAC,cAACkR,EAAA,EAAD,CAAOC,KAAK,WAAWC,QAAStR,EAAAC,EAAAC,cAAC2R,EAAD,QAChC7R,EAAAC,EAAAC,cAACkR,EAAA,EAAD,CAAOC,KAAK,IAAIC,QAAStR,EAAAC,EAAAC,cAACkR,EAAA,EAAD,CAAUxJ,GAAG,WAAW+J,SAAO,8BCzCvEG,GAAQC,YAAe,CAChCC,QAAS,CACL1S,OAAQiH,GACR/G,SAAUyS,GACVvS,KAAMiB,KCGRuR,GAAQC,eAEDC,IAASC,WAClBC,SAASC,eAAe,SAEvBC,OACDxS,EAAAC,EAAAC,cAACF,EAAAC,EAAMwS,WAAP,KACIzS,EAAAC,EAAAC,cAACwS,EAAA,EAAD,CAAUZ,MAAOA,IACb9R,EAAAC,EAAAC,cAACyS,GAAA,EAAD,CAAeT,MAAOA,IAClBlS,EAAAC,EAAAC,cAAC0S,GAAD","file":"static/js/main.e3c77298.chunk.js","sourcesContent":["import Typography from \"@mui/material/Typography\";\r\nimport Link from \"@mui/material/Link\";\r\nimport * as React from \"react\";\r\nimport {FC} from \"react\";\r\n\r\nconst Copyright: FC<any> = (props) => {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\">\r\n                Закажи Доставку\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nexport default Copyright\r\n","import {createAsyncThunk} from \"@reduxjs/toolkit\";\r\nimport axios from 'axios'\r\nimport {User} from \"../../interfaces/interfaces\";\r\n\r\nconst API_URL = 'https://закажи-доставку.рф/api'\r\n\r\nexport const loginThunk = createAsyncThunk(\r\n    'auth/login',\r\n    async (data: { email: string, password: string }) => {\r\n        const res = await axios.post(API_URL + '/auth/login', data, {validateStatus: null})\r\n\r\n        return {\r\n            status: res.status,\r\n            data: res.data\r\n        }\r\n    }\r\n)\r\n\r\nexport const registrationThunk = createAsyncThunk(\r\n    'auth/registration',\r\n    async (data: User) => {\r\n        const res = await axios.post(API_URL + '/auth/registration', data, {validateStatus: null})\r\n\r\n        return {\r\n            status: res.status,\r\n            data: res.data\r\n        }\r\n    }\r\n)\r\n\r\nexport const refreshThunk = createAsyncThunk(\r\n    'auth/refresh',\r\n    async (data: { jwt: string }) => {\r\n        const res = await axios.post(API_URL + '/auth/refresh', data, {validateStatus: null})\r\n\r\n        return {\r\n            status: res.status,\r\n            data: res.data\r\n        }\r\n    }\r\n)\r\n","import {RootState} from \"../store\";\r\n\r\nexport const PickUpSelector = (state: RootState) => state.pickUp\r\nexport const DeliverySelector = (state: RootState) => state.delivery\r\nexport const AuthSelector = (state: RootState) => state.auth\r\n","import React, {FC} from 'react'\r\nimport {Alert, Snackbar} from \"@mui/material\";\r\n\r\ninterface Props {\r\n    open: boolean,\r\n    setOpen: React.Dispatch<React.SetStateAction<boolean>>\r\n    message?: string | null\r\n    isSuccess?: boolean\r\n}\r\n\r\nconst CustomAlert: FC<Props> = ({open, setOpen, message, isSuccess}) => {\r\n    return (\r\n        <Snackbar\r\n            anchorOrigin={{vertical: 'top', horizontal: 'right'}}\r\n            open={open}\r\n            autoHideDuration={3000}\r\n            onClose={() => setOpen(false)}\r\n        >\r\n            <Alert\r\n                onClose={() => setOpen(false)}\r\n                severity={isSuccess ? \"success\" : \"warning\"}\r\n            >\r\n                {message || 'Заполните все поля!'}\r\n            </Alert>\r\n        </Snackbar>\r\n    )\r\n}\r\n\r\nexport default CustomAlert\r\n","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\r\nimport {loginThunk, refreshThunk, registrationThunk} from \"../thunks/auth-thunk\";\r\n\r\ninterface InitialState {\r\n    isAuth: boolean\r\n    error: string | null\r\n    isLoading: boolean\r\n}\r\n\r\nconst initialState: InitialState = {\r\n    isAuth: false,\r\n    error: null,\r\n    isLoading: true\r\n}\r\n\r\nconst AuthSlice = createSlice({\r\n    name: 'auth',\r\n    initialState,\r\n    reducers: {\r\n        setAuth(state, action: PayloadAction<boolean>) {\r\n            state.isAuth = action.payload\r\n            state.error = null\r\n        },\r\n        registration(state) {\r\n            localStorage.setItem('auth', 'true')\r\n            state.isAuth = true\r\n        },\r\n        clearError(state) {\r\n            state.error = null\r\n        },\r\n        setLoading(state, action: PayloadAction<boolean>) {\r\n            state.isLoading = action.payload\r\n        }\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder.addCase(loginThunk.fulfilled, (state, action) => {\r\n            if(action.payload.status === 200) {\r\n                state.isAuth = true\r\n                state.error = null\r\n\r\n                localStorage.setItem('jwt', action.payload.data.jwt)\r\n            } else {\r\n                state.isAuth = false\r\n                state.error = action.payload.data.message\r\n            }\r\n        })\r\n        builder.addCase(registrationThunk.fulfilled, (state, action) => {\r\n            if(action.payload.status === 200) {\r\n                state.isAuth = true\r\n                state.error = null\r\n\r\n                localStorage.setItem('jwt', action.payload.data.jwt)\r\n            } else {\r\n                state.isAuth = false\r\n                state.error = action.payload.data.message\r\n            }\r\n        })\r\n        builder.addCase(refreshThunk.fulfilled, (state, action) => {\r\n            if(action.payload.status === 200) {\r\n                state.isAuth = true\r\n                state.error = null\r\n                state.isLoading = false\r\n\r\n                localStorage.setItem('jwt', action.payload.data.jwt)\r\n            } else {\r\n                state.isAuth = false\r\n                state.error = action.payload.data.message\r\n            }\r\n        })\r\n    }\r\n})\r\n\r\nexport const {clearError, setLoading} = AuthSlice.actions\r\nexport default AuthSlice.reducer\r\n","import * as React from 'react';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Link from '@mui/material/Link';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport {FC, useEffect, useState} from \"react\";\r\nimport Copyright from \"../../components/copyright\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {loginThunk} from \"../../store/thunks/auth-thunk\";\r\nimport {AuthSelector} from \"../../store/selectors/selectors\";\r\nimport CustomAlert from \"../../components/alert\";\r\nimport {clearError} from \"../../store/slices/auth-slice\";\r\n\r\n\r\nconst SignIn: FC = () => {\r\n    const {error} = useSelector(AuthSelector)\r\n    const [open, setOpen] = useState(false)\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n\r\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        const data = new FormData(event.currentTarget);\r\n        // @ts-ignore\r\n        dispatch(loginThunk({\r\n            email: data.get('email') as string,\r\n            password: data.get('password') as string,\r\n        }))\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (error) {\r\n            setOpen(true)\r\n        }\r\n    }, [error])\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            dispatch(clearError())\r\n        }\r\n    }, [open])\r\n\r\n    return (\r\n        <>\r\n            {open && <CustomAlert message={error} open={open} setOpen={setOpen}/>}\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                <CssBaseline/>\r\n                <Box\r\n                    sx={{\r\n                        marginTop: 8,\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        alignItems: 'center',\r\n                    }}\r\n                >\r\n                    <Avatar sx={{m: 1, bgcolor: 'secondary.main'}}>\r\n                        <LockOutlinedIcon/>\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Вход в аккаунт\r\n                    </Typography>\r\n                    <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{mt: 1}}>\r\n                        <TextField\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"email\"\r\n                            label=\"Email\"\r\n                            name=\"email\"\r\n                            autoComplete=\"email\"\r\n                            autoFocus\r\n                        />\r\n                        <TextField\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            name=\"password\"\r\n                            label=\"Пароль\"\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            autoComplete=\"current-password\"\r\n                        />\r\n                        <FormControlLabel\r\n                            control={<Checkbox value=\"remember\" color=\"primary\"/>}\r\n                            label=\"Запомнить меня\"\r\n                        />\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            sx={{mt: 3, mb: 2}}\r\n                        >\r\n                            Войти в аккаунт\r\n                        </Button>\r\n                        <Grid container justifyContent=\"center\">\r\n                            <Grid item>\r\n                                <Link onClick={() => navigate('/sign-up')} variant=\"body2\">\r\n                                    {\"Нет аккаунта? Регистрация\"}\r\n                                </Link>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Box>\r\n                </Box>\r\n                <Copyright sx={{mt: 8, mb: 4}}/>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SignIn\r\n","import * as React from 'react';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport Copyright from \"../../components/copyright\";\r\nimport {FC, useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport CustomAlert from \"../../components/alert\";\r\nimport {Link} from '@mui/material';\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {registrationThunk} from \"../../store/thunks/auth-thunk\";\r\nimport {AuthSelector} from \"../../store/selectors/selectors\";\r\nimport {clearError} from \"../../store/slices/auth-slice\";\r\n\r\n\r\nconst SignUp: FC = () => {\r\n    const {error} = useSelector(AuthSelector)\r\n    const navigate = useNavigate()\r\n    const dispatch = useDispatch()\r\n    const [open, setOpen] = useState(false)\r\n    const [accept, setAccept] = useState(false)\r\n\r\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        const data = new FormData(event.currentTarget);\r\n        if (\r\n            data.get('email') &&\r\n            data.get('password') &&\r\n            data.get('firstName') &&\r\n            data.get('lastName') &&\r\n            data.get('company') &&\r\n            accept\r\n        ) {\r\n            // @ts-ignore\r\n            dispatch(registrationThunk({\r\n                email: data.get('email') as string,\r\n                password: data.get('password') as string,\r\n                firstName: data.get('firstName') as string,\r\n                lastName: data.get('lastName') as string,\r\n                company: data.get('company') as string,\r\n            }))\r\n        } else {\r\n            setOpen(true)\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (error) {\r\n            setOpen(true)\r\n        }\r\n    }, [error])\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            dispatch(clearError())\r\n        }\r\n    }, [open])\r\n\r\n    return (\r\n        <>\r\n            {open && <CustomAlert message={error} open={open} setOpen={setOpen}/>}\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                <CssBaseline/>\r\n                <Box\r\n                    sx={{\r\n                        marginTop: 8,\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        alignItems: 'center',\r\n                    }}\r\n                >\r\n                    <Avatar sx={{m: 1, bgcolor: 'secondary.main'}}>\r\n                        <LockOutlinedIcon/>\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Регистрация\r\n                    </Typography>\r\n                    <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{mt: 3}}>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    autoComplete=\"given-name\"\r\n                                    name=\"firstName\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"firstName\"\r\n                                    label=\"Имя\"\r\n                                    autoFocus\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"lastName\"\r\n                                    label=\"Фамилия\"\r\n                                    name=\"lastName\"\r\n                                    autoComplete=\"family-name\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"company\"\r\n                                    label=\"Название компании\"\r\n                                    name=\"company\"\r\n                                    autoComplete=\"company\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"email\"\r\n                                    label=\"Email\"\r\n                                    name=\"email\"\r\n                                    autoComplete=\"email\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    required\r\n                                    fullWidth\r\n                                    name=\"password\"\r\n                                    label=\"Пароль\"\r\n                                    type=\"password\"\r\n                                    id=\"password\"\r\n                                    autoComplete=\"new-password\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <FormControlLabel\r\n                                    checked={accept}\r\n                                    onChange={() => setAccept(accept => !accept)}\r\n                                    control={<Checkbox value=\"allowExtraEmails\" color=\"primary\"/>}\r\n                                    label=\"Я соглашаюсь с условиями обработки персональных данных\"\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            sx={{mt: 3, mb: 2}}\r\n                        >\r\n                            Зарегистрироваться\r\n                        </Button>\r\n                        <Grid container justifyContent=\"center\">\r\n                            <Grid item>\r\n                                <Link onClick={() => navigate('/sign-in')} variant=\"body2\">\r\n                                    Уже есть аккаунт? Вход\r\n                                </Link>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Box>\r\n                </Box>\r\n                <Copyright sx={{mt: 5}}/>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SignUp\r\n","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\r\nimport {Dayjs} from \"dayjs\";\r\n\r\ninterface State {\r\n    step: number\r\n    from: string,\r\n    type: string\r\n    pickUpDate: null | Dayjs\r\n    orderNumber: string\r\n    withContract: boolean\r\n    companyName: string\r\n    fromLastName: string\r\n    fromFirstName: string\r\n    fromPhone: string\r\n    fromExtraPhone: string\r\n    fromAddress: string\r\n    fromExtraAddress: string\r\n    fromCompanyName: string\r\n    fromPickUpTimeMin: null | Dayjs\r\n    fromPickUpTimeMax: null | Dayjs\r\n    fromDocuments: string\r\n    nature: string\r\n    natureDescription: string\r\n    needPass: string\r\n    call: string\r\n\r\n    to: string\r\n    toLastName: string\r\n    toFirstName: string\r\n    toPhone: string\r\n    toExtraPhone: string\r\n    toAddress: string\r\n    toExtraAddress: string\r\n    toCompanyName: string\r\n    toPickUpTimeMin: null | Dayjs\r\n    toPickUpTimeMax: null | Dayjs\r\n    toDocuments: string\r\n}\r\n\r\nconst initialState: State = {\r\n    step: 0,\r\n    from: '',\r\n    type: '',\r\n    pickUpDate: null,\r\n    orderNumber: '',\r\n    withContract: false,\r\n    companyName: '',\r\n    fromLastName: '',\r\n    fromFirstName: '',\r\n    fromPhone: '',\r\n    fromExtraPhone: '',\r\n    fromAddress: '',\r\n    fromExtraAddress: '',\r\n    fromCompanyName: '',\r\n    fromPickUpTimeMin: null,\r\n    fromPickUpTimeMax: null,\r\n    fromDocuments: '',\r\n    nature: '',\r\n    natureDescription: '',\r\n    needPass: '',\r\n    call: '',\r\n\r\n    to: '',\r\n    toLastName: '',\r\n    toFirstName: '',\r\n    toPhone: '',\r\n    toExtraPhone: '',\r\n    toAddress: '',\r\n    toExtraAddress: '',\r\n    toCompanyName: '',\r\n    toPickUpTimeMin: null,\r\n    toPickUpTimeMax: null,\r\n    toDocuments: '',\r\n}\r\n\r\nconst PickUpSlice = createSlice({\r\n    name: 'receipt',\r\n    initialState,\r\n    reducers: {\r\n        incrementStep(state) {\r\n            ++state.step\r\n        },\r\n        decrementStep(state) {\r\n            --state.step\r\n        },\r\n        setFromData(state, action: PayloadAction<string>) {\r\n            ++state.step\r\n            state.from = action.payload\r\n        },\r\n        setTypeData(state, action: PayloadAction<string>) {\r\n            ++state.step\r\n            state.type = action.payload\r\n        },\r\n        setDateData(state, action: PayloadAction<{\r\n            pickUpDate: Dayjs | null,\r\n            orderNumber: string,\r\n            withContract: boolean,\r\n            companyName: string\r\n        }>) {\r\n            ++state.step\r\n            state.pickUpDate = action.payload.pickUpDate\r\n            state.orderNumber = action.payload.orderNumber\r\n            state.withContract = action.payload.withContract\r\n            state.companyName = action.payload.companyName\r\n        },\r\n        setFromInfoData(state, action: PayloadAction<{\r\n            fromLastName: string\r\n            fromFirstName: string\r\n            fromPhone: string\r\n            fromExtraPhone: string\r\n            fromAddress: string\r\n            fromExtraAddress: string\r\n            fromCompanyName: string\r\n            fromPickUpTimeMin: null | Dayjs\r\n            fromPickUpTimeMax: null | Dayjs\r\n            fromDocuments: string\r\n        }>) {\r\n            ++state.step\r\n            state.fromLastName = action.payload.fromLastName\r\n            state.fromFirstName = action.payload.fromFirstName\r\n            state.fromPhone = action.payload.fromPhone\r\n            state.fromExtraPhone = action.payload.fromExtraPhone\r\n            state.fromAddress = action.payload.fromAddress\r\n            state.fromExtraAddress = action.payload.fromExtraAddress\r\n            state.fromCompanyName = action.payload.fromCompanyName\r\n            state.fromPickUpTimeMin = action.payload.fromPickUpTimeMin\r\n            state.fromPickUpTimeMax = action.payload.fromPickUpTimeMax\r\n            state.fromDocuments = action.payload.fromDocuments\r\n        },\r\n        setNatureData(state, action: PayloadAction<{\r\n            nature: string\r\n            natureDescription: string\r\n        }>) {\r\n            ++state.step\r\n            state.nature = action.payload.nature\r\n            state.natureDescription = action.payload.natureDescription\r\n        },\r\n        setPassData(state, action: PayloadAction<{ needPass: string }>) {\r\n            ++state.step\r\n            state.needPass = action.payload.needPass\r\n        },\r\n        setCallData(state, action: PayloadAction<{ call: string }>) {\r\n            ++state.step\r\n            state.call = action.payload.call\r\n        },\r\n        setToInfoData(state, action: PayloadAction<{\r\n            to: string\r\n            toLastName: string\r\n            toFirstName: string\r\n            toPhone: string\r\n            toExtraPhone: string\r\n            toAddress: string\r\n            toExtraAddress: string\r\n            toCompanyName: string\r\n            toPickUpTimeMin: null | Dayjs\r\n            toPickUpTimeMax: null | Dayjs\r\n            toDocuments: string\r\n        }>) {\r\n            state.to = action.payload.to\r\n            state.toLastName = action.payload.toLastName\r\n            state.toFirstName = action.payload.toFirstName\r\n            state.toPhone = action.payload.toPhone\r\n            state.toExtraPhone = action.payload.toExtraPhone\r\n            state.toAddress = action.payload.toAddress\r\n            state.toExtraAddress = action.payload.toExtraAddress\r\n            state.toCompanyName = action.payload.toCompanyName\r\n            state.toPickUpTimeMin = action.payload.toPickUpTimeMin\r\n            state.toPickUpTimeMax = action.payload.toPickUpTimeMax\r\n            state.toDocuments = action.payload.toDocuments\r\n        }\r\n    }\r\n})\r\n\r\nexport const {\r\n    incrementStep,\r\n    decrementStep,\r\n    setFromData,\r\n    setTypeData,\r\n    setDateData,\r\n    setFromInfoData,\r\n    setNatureData,\r\n    setPassData,\r\n    setCallData,\r\n    setToInfoData\r\n} = PickUpSlice.actions\r\nexport default PickUpSlice.reducer\r\n","import {Box, Button, RadioGroup, Typography, Radio, FormControlLabel} from '@mui/material'\r\nimport React, {FC, useState} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {PickUpSelector} from \"../../../store/selectors/selectors\";\r\nimport {AppDispatch} from \"../../../store/store\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {setFromData} from \"../../../store/slices/pick-up-slice\";\r\nimport CustomAlert from \"../../../components/alert\";\r\n\r\nconst From: FC = () => {\r\n    const [open, setOpen] = useState(false)\r\n    const {from} = useSelector(PickUpSelector)\r\n    const dispatch = useDispatch<AppDispatch>()\r\n    const navigate = useNavigate()\r\n\r\n    const handleBack = () => {\r\n        navigate('/choose')\r\n    }\r\n\r\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        const data = new FormData(event.currentTarget);\r\n        const from = data.get('from') as string\r\n\r\n        if (from) {\r\n            dispatch(setFromData(from))\r\n        } else {\r\n            setOpen(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CustomAlert open={open} setOpen={setOpen}/>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Забираем от:\r\n            </Typography>\r\n            <Box component=\"form\" onSubmit={handleSubmit}>\r\n                <RadioGroup\r\n                    aria-labelledby=\"pick-up-from\"\r\n                    name=\"radio-buttons-group\"\r\n                    defaultValue={from}\r\n                >\r\n                    <FormControlLabel name='from' value=\"подрядчик\" control={<Radio/>} label=\"Подрядчик\"/>\r\n                    <FormControlLabel name='from' value=\"поставщик\" control={<Radio/>} label=\"Поставщик\"/>\r\n                </RadioGroup>\r\n                <Box sx={{display: 'flex', justifyContent: 'space-between', mt: 3}}>\r\n                    <Button onClick={handleBack}>\r\n                        Назад\r\n                    </Button>\r\n                    <Button type=\"submit\" variant=\"contained\">\r\n                        Далее\r\n                    </Button>\r\n                </Box>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default From\r\n","import {Box, Button, RadioGroup, Typography, Radio, FormControlLabel} from '@mui/material'\r\nimport React, {FC, useState} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {PickUpSelector} from \"../../../store/selectors/selectors\";\r\nimport {AppDispatch} from \"../../../store/store\";\r\nimport {decrementStep, setTypeData} from \"../../../store/slices/pick-up-slice\";\r\nimport CustomAlert from \"../../../components/alert\";\r\n\r\nconst Type: FC = () => {\r\n    const [open, setOpen] = useState(false)\r\n    const {type} = useSelector(PickUpSelector)\r\n    const dispatch = useDispatch<AppDispatch>()\r\n\r\n    const handleBack = () => {\r\n        dispatch(decrementStep())\r\n    }\r\n\r\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        const data = new FormData(event.currentTarget);\r\n        const type = data.get('type') as string\r\n\r\n        if (type) {\r\n            dispatch(setTypeData(type))\r\n        } else {\r\n            setOpen(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CustomAlert open={open} setOpen={setOpen}/>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Выберите вид услуги:\r\n            </Typography>\r\n            <Box component=\"form\" onSubmit={handleSubmit}>\r\n                <RadioGroup\r\n                    aria-labelledby=\"pick-up-type\"\r\n                    name=\"radio-buttons-group\"\r\n                    defaultValue={type}\r\n                >\r\n                    <FormControlLabel name=\"type\" value=\"пеший\" control={<Radio/>} label=\"Пеший\"/>\r\n                    <FormControlLabel name=\"type\" value=\"авто\" control={<Radio/>} label=\"Авто\"/>\r\n                </RadioGroup>\r\n                <Box sx={{display: 'flex', justifyContent: 'space-between', mt: 3}}>\r\n                    <Button onClick={handleBack}>\r\n                        Назад\r\n                    </Button>\r\n                    <Button variant=\"contained\" type=\"submit\">\r\n                        Далее\r\n                    </Button>\r\n                </Box>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Type\r\n","import {Box, Button, Typography, Grid, TextField, FormControlLabel, Snackbar, Alert} from '@mui/material'\r\nimport React, {FC, useState} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {PickUpSelector} from \"../../../store/selectors/selectors\";\r\nimport {AppDispatch} from \"../../../store/store\";\r\nimport {decrementStep, setDateData,} from \"../../../store/slices/pick-up-slice\";\r\nimport {AdapterDayjs} from '@mui/x-date-pickers/AdapterDayjs';\r\nimport {LocalizationProvider} from '@mui/x-date-pickers/LocalizationProvider';\r\nimport {DatePicker} from '@mui/x-date-pickers/DatePicker';\r\nimport 'dayjs/locale/ru';\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport CustomAlert from \"../../../components/alert\";\r\nimport {Dayjs} from \"dayjs\";\r\n\r\nconst Type: FC = () => {\r\n    const {\r\n        pickUpDate,\r\n        orderNumber,\r\n        withContract: withContractStore,\r\n        companyName\r\n    } = useSelector(PickUpSelector)\r\n    const dispatch = useDispatch<AppDispatch>()\r\n\r\n    const [open, setOpen] = useState(false)\r\n    const [date, setDate] = useState<Dayjs | null>(pickUpDate)\r\n    const [withContract, setWithContract] = useState<boolean>(withContractStore)\r\n\r\n    const handleBack = () => {\r\n        dispatch(decrementStep())\r\n    }\r\n\r\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        const data = new FormData(event.currentTarget);\r\n        const orderNumber = data.get('orderNumber') as string\r\n        const companyName = data.get('companyName') as string\r\n\r\n        if (date && orderNumber && (withContract && companyName || !withContract && !companyName)) {\r\n            dispatch(setDateData({\r\n                pickUpDate: date,\r\n                orderNumber,\r\n                withContract,\r\n                companyName\r\n            }))\r\n        } else {\r\n            setOpen(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CustomAlert open={open} setOpen={setOpen}/>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Укажите следующие данные:\r\n            </Typography>\r\n            <Box component=\"form\" onSubmit={handleSubmit}>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <LocalizationProvider\r\n                            dateAdapter={AdapterDayjs}\r\n                            adapterLocale='ru'\r\n                        >\r\n                            <DatePicker\r\n                                label=\"Дата забора\"\r\n                                value={date}\r\n                                onChange={e => setDate(e)}\r\n                                renderInput={(params) => <TextField fullWidth {...params} />}\r\n                            />\r\n                        </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            required\r\n                            id=\"orderNumber\"\r\n                            name=\"orderNumber\"\r\n                            label=\"Номер заказа или счета\"\r\n                            fullWidth\r\n                            autoComplete=\"orderNumber\"\r\n                            defaultValue={orderNumber}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item sm={12}>\r\n                        <FormControlLabel\r\n                            checked={withContract}\r\n                            onChange={() => setWithContract(withContract => !withContract)}\r\n                            control={<Checkbox/>}\r\n                            label=\"Есть договоренность\"\r\n                            name=\"withContract\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            disabled={!withContract}\r\n                            required\r\n                            id=\"companyName\"\r\n                            name=\"companyName\"\r\n                            label=\"Наименование ИП/ООО\"\r\n                            fullWidth\r\n                            autoComplete=\"companyName\"\r\n                            defaultValue={companyName}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                <Box sx={{display: 'flex', justifyContent: 'space-between', mt: 3}}>\r\n                    <Button onClick={handleBack}>\r\n                        Назад\r\n                    </Button>\r\n                    <Button variant=\"contained\" type=\"submit\">\r\n                        Далее\r\n                    </Button>\r\n                </Box>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Type\r\n","import {Box, Button, Typography, Grid, TextField, FormControlLabel} from '@mui/material'\r\nimport React, {FC, useState} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {PickUpSelector} from \"../../../store/selectors/selectors\";\r\nimport {AppDispatch} from \"../../../store/store\";\r\nimport {LocalizationProvider, TimePicker} from '@mui/x-date-pickers';\r\nimport {AdapterDayjs} from '@mui/x-date-pickers/AdapterDayjs';\r\nimport 'dayjs/locale/ru';\r\nimport {Dayjs} from 'dayjs';\r\nimport {decrementStep, setFromInfoData} from \"../../../store/slices/pick-up-slice\";\r\nimport CustomAlert from \"../../../components/alert\";\r\n\r\nconst FromInfo: FC = () => {\r\n    const {\r\n        fromLastName,\r\n        fromFirstName,\r\n        fromPhone,\r\n        fromExtraPhone,\r\n        fromAddress,\r\n        fromExtraAddress,\r\n        fromCompanyName,\r\n        fromPickUpTimeMin: fromPickUpTimeMinStore,\r\n        fromPickUpTimeMax: fromPickUpTimeMaxStore,\r\n        fromDocuments,\r\n    } = useSelector(PickUpSelector)\r\n    const dispatch = useDispatch<AppDispatch>()\r\n\r\n    const [fromPickUpTimeMin, setFromPickUpTimeMin] = React.useState<Dayjs | null>(fromPickUpTimeMinStore);\r\n    const [fromPickUpTimeMax, setFromPickUpTimeMax] = React.useState<Dayjs | null>(fromPickUpTimeMaxStore);\r\n    const [open, setOpen] = useState(false)\r\n\r\n    const handleBack = () => {\r\n        dispatch(decrementStep())\r\n    }\r\n\r\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        const data = new FormData(event.currentTarget);\r\n        const lastName = data.get('lastName') as string\r\n        const firstName = data.get('firstName') as string\r\n        const phoneNumber = data.get('phoneNumber') as string\r\n        const extraPhoneNumber = data.get('extraPhoneNumber') as string\r\n        const address = data.get('address') as string\r\n        const extraAddress = data.get('extraAddress') as string\r\n        const documents = data.get('documents') as string\r\n        const company = data.get('company') as string\r\n\r\n        if (lastName && firstName && phoneNumber && address && documents && company) {\r\n            dispatch(setFromInfoData({\r\n                fromLastName: lastName,\r\n                fromFirstName: firstName,\r\n                fromPhone: phoneNumber,\r\n                fromExtraPhone: extraPhoneNumber,\r\n                fromAddress: address,\r\n                fromExtraAddress: extraAddress,\r\n                fromCompanyName: company,\r\n                fromPickUpTimeMin,\r\n                fromPickUpTimeMax,\r\n                fromDocuments: documents\r\n            }))\r\n        } else {\r\n            setOpen(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CustomAlert open={open} setOpen={setOpen}/>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Укажите данные от кого забирать:\r\n            </Typography>\r\n            <Box component=\"form\" onSubmit={handleSubmit}>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            required\r\n                            id=\"lastName\"\r\n                            name=\"lastName\"\r\n                            label=\"Фамилия\"\r\n                            fullWidth\r\n                            autoComplete=\"family-name\"\r\n                            defaultValue={fromLastName}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            required\r\n                            id=\"firstName\"\r\n                            name=\"firstName\"\r\n                            label=\"Имя\"\r\n                            fullWidth\r\n                            autoComplete=\"given-name\"\r\n                            defaultValue={fromFirstName}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            required\r\n                            id=\"phoneNumber\"\r\n                            name=\"phoneNumber\"\r\n                            label=\"Номер телефона\"\r\n                            fullWidth\r\n                            autoComplete=\"tel\"\r\n                            type=\"phone\"\r\n                            defaultValue={fromPhone}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            id=\"extraPhoneNumber\"\r\n                            name=\"extraPhoneNumber\"\r\n                            label=\"Доп. номер телефона\"\r\n                            fullWidth\r\n                            autoComplete=\"tel\"\r\n                            type=\"phone\"\r\n                            defaultValue={fromExtraPhone}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            required\r\n                            id=\"address\"\r\n                            name=\"address\"\r\n                            label=\"Адрес\"\r\n                            fullWidth\r\n                            autoComplete=\"street-address\"\r\n                            defaultValue={fromAddress}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            id=\"extraAddress\"\r\n                            name=\"extraAddress\"\r\n                            label=\"Доп. адрес\"\r\n                            fullWidth\r\n                            autoComplete=\"street-address\"\r\n                            defaultValue={fromExtraAddress}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <LocalizationProvider\r\n                            dateAdapter={AdapterDayjs}\r\n                            adapterLocale='ru'\r\n                        >\r\n                            <TimePicker\r\n                                label=\"Время забора с\"\r\n                                value={fromPickUpTimeMin}\r\n                                onChange={(newValue) => setFromPickUpTimeMin(newValue)}\r\n                                renderInput={(params) => <TextField fullWidth {...params} />}\r\n                            />\r\n                        </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <LocalizationProvider\r\n                            dateAdapter={AdapterDayjs}\r\n                            adapterLocale='ru'\r\n                        >\r\n                            <TimePicker\r\n                                label=\"Время забора до\"\r\n                                value={fromPickUpTimeMax}\r\n                                onChange={(newValue) => setFromPickUpTimeMax(newValue)}\r\n                                renderInput={(params) => <TextField fullWidth {...params} />}\r\n                            />\r\n                        </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            required\r\n                            id=\"company\"\r\n                            name=\"company\"\r\n                            label=\"Название организации\"\r\n                            fullWidth\r\n                            autoComplete=\"organization\"\r\n                            defaultValue={fromCompanyName}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            required\r\n                            id=\"documents\"\r\n                            name=\"documents\"\r\n                            label=\"Документы\"\r\n                            fullWidth\r\n                            autoComplete=\"documents\"\r\n                            defaultValue={fromDocuments}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                <Box sx={{display: 'flex', justifyContent: 'space-between', mt: 3}}>\r\n                    <Button onClick={handleBack}>\r\n                        Назад\r\n                    </Button>\r\n                    <Button variant=\"contained\" type=\"submit\">\r\n                        Далее\r\n                    </Button>\r\n                </Box>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FromInfo\r\n","import React, {FC, useState} from 'react'\r\nimport {\r\n    Box,\r\n    Button,\r\n    FormControlLabel,\r\n    Radio,\r\n    RadioGroup,\r\n    TextField,\r\n    Typography\r\n} from \"@mui/material\";\r\nimport {decrementStep, setNatureData} from \"../../../store/slices/pick-up-slice\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppDispatch} from \"../../../store/store\";\r\nimport {PickUpSelector} from \"../../../store/selectors/selectors\";\r\nimport CustomAlert from \"../../../components/alert\";\r\n\r\nconst Nature: FC = () => {\r\n    const {nature, natureDescription} = useSelector(PickUpSelector)\r\n    const dispatch = useDispatch<AppDispatch>()\r\n\r\n    const [open, setOpen] = useState(false)\r\n\r\n    const handleBack = () => {\r\n        dispatch(decrementStep())\r\n    }\r\n\r\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        const data = new FormData(event.currentTarget);\r\n        const nature = data.get('nature') as string\r\n        const description = data.get('description') as string\r\n\r\n        if (nature && description) {\r\n            dispatch(setNatureData({nature, natureDescription: description}))\r\n        } else {\r\n            setOpen(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CustomAlert open={open} setOpen={setOpen}/>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Укажите тип груза:\r\n            </Typography>\r\n            <Box component=\"form\" onSubmit={handleSubmit}>\r\n                <RadioGroup\r\n                    aria-labelledby=\"pick-up-nature\"\r\n                    name=\"radio-buttons-group\"\r\n                    defaultValue={nature}\r\n                >\r\n                    <FormControlLabel name=\"nature\" value=\"коробка\" control={<Radio/>} label=\"Коробка\"/>\r\n                    <FormControlLabel name=\"nature\" value=\"пачка\" control={<Radio/>} label=\"Пачка\"/>\r\n                    <FormControlLabel name=\"nature\" value=\"другое\" control={<Radio/>} label=\"Другое\"/>\r\n                </RadioGroup>\r\n                <TextField\r\n                    defaultValue={natureDescription}\r\n                    name=\"description\"\r\n                    required\r\n                    id=\"outlined-multiline-flexible\"\r\n                    label=\"Описание\"\r\n                    multiline\r\n                    maxRows={4}\r\n                    placeholder=\"ВАЖНО: После выбора Коробка и Пачка, необходимо написать количество и вес. При выборе ДРУГОЕ опишите характер груза (например: Баннер длинной 2,30м; Паллет 400кг и т.д.)\"\r\n                    fullWidth\r\n                />\r\n                <Box sx={{display: 'flex', justifyContent: 'space-between', mt: 3}}>\r\n                    <Button onClick={handleBack}>\r\n                        Назад\r\n                    </Button>\r\n                    <Button variant=\"contained\" type=\"submit\">\r\n                        Далее\r\n                    </Button>\r\n                </Box>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Nature\r\n","import React, {useState} from 'react'\r\nimport {Box, Button, FormControlLabel, Radio, RadioGroup, Typography} from \"@mui/material\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppDispatch} from \"../../../store/store\";\r\nimport {decrementStep, setPassData} from \"../../../store/slices/pick-up-slice\";\r\nimport {PickUpSelector} from \"../../../store/selectors/selectors\";\r\nimport CustomAlert from \"../../../components/alert\";\r\n\r\nconst Pass = () => {\r\n    const {needPass} = useSelector(PickUpSelector)\r\n    const dispatch = useDispatch<AppDispatch>()\r\n\r\n    const [open, setOpen] = useState(false)\r\n\r\n    const handleBack = () => {\r\n        dispatch(decrementStep())\r\n    }\r\n\r\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        const data = new FormData(event.currentTarget);\r\n        const pass = data.get('pass') as string\r\n\r\n        if (pass) {\r\n            dispatch(setPassData({needPass: pass}))\r\n        } else {\r\n            setOpen(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CustomAlert open={open} setOpen={setOpen}/>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Нужен ли пропуск:\r\n            </Typography>\r\n            <Box component=\"form\" onSubmit={handleSubmit}>\r\n                <RadioGroup\r\n                    aria-labelledby=\"pick-up-pass\"\r\n                    name=\"radio-buttons-group\"\r\n                    defaultValue={needPass}\r\n                >\r\n                    <FormControlLabel name=\"pass\" value=\"нужен\" control={<Radio/>} label=\"Пропуск нужен\"/>\r\n                    <FormControlLabel name=\"pass\" value=\"не нужен\" control={<Radio/>} label=\"Пропуск не нужен\"/>\r\n                </RadioGroup>\r\n                <Box sx={{display: 'flex', justifyContent: 'space-between', mt: 3}}>\r\n                    <Button onClick={handleBack}>\r\n                        Назад\r\n                    </Button>\r\n                    <Button variant=\"contained\" type=\"submit\">\r\n                        Далее\r\n                    </Button>\r\n                </Box>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Pass\r\n","import React, {FC, useState} from 'react'\r\nimport {Box, Button, FormControlLabel, Radio, RadioGroup, Typography} from \"@mui/material\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppDispatch} from \"../../../store/store\";\r\nimport {\r\n    decrementStep,\r\n    incrementStep,\r\n    setCallData,\r\n    setPassData\r\n} from \"../../../store/slices/pick-up-slice\";\r\nimport {PickUpSelector} from \"../../../store/selectors/selectors\";\r\nimport CustomAlert from \"../../../components/alert\";\r\n\r\nconst Call: FC = () => {\r\n    const {call} = useSelector(PickUpSelector)\r\n    const dispatch = useDispatch<AppDispatch>()\r\n\r\n    const [open, setOpen] = useState(false)\r\n\r\n    const handleBack = () => {\r\n        dispatch(decrementStep())\r\n    }\r\n\r\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        const data = new FormData(event.currentTarget);\r\n        const call = data.get('call') as string\r\n\r\n        if (call) {\r\n            dispatch(setCallData({call}))\r\n        } else {\r\n            setOpen(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CustomAlert open={open} setOpen={setOpen}/>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Нужно ли созвониться заранее:\r\n            </Typography>\r\n            <Box component=\"form\" onSubmit={handleSubmit}>\r\n                <RadioGroup\r\n                    aria-labelledby=\"pick-up-call\"\r\n                    name=\"radio-buttons-group\"\r\n                    defaultValue={call}\r\n                >\r\n                    <FormControlLabel name=\"call\" value=\"15 минут\" control={<Radio/>} label=\"Созвониться за 15 минут\"/>\r\n                    <FormControlLabel name=\"call\" value=\"30 минут\" control={<Radio/>} label=\"Созвониться за 30 минут\"/>\r\n                    <FormControlLabel name=\"call\" value=\"1 час\" control={<Radio/>} label=\"Созвониться за час\"/>\r\n                    <FormControlLabel name=\"call\" value=\"3 часа\" control={<Radio/>} label=\"Созвониться за 3 часа\"/>\r\n                    <FormControlLabel name=\"call\" value=\"не нужно\" control={<Radio/>} label=\"Созвониваться не нужно\"/>\r\n                </RadioGroup>\r\n                <Box sx={{display: 'flex', justifyContent: 'space-between', mt: 3}}>\r\n                    <Button onClick={handleBack}>\r\n                        Назад\r\n                    </Button>\r\n                    <Button variant=\"contained\" type=\"submit\">\r\n                        Далее\r\n                    </Button>\r\n                </Box>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Call\r\n","import React, {FC, useState} from 'react'\r\nimport {Box, Button, FormControlLabel, Grid, Radio, RadioGroup, TextField, Typography} from \"@mui/material\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppDispatch} from \"../../../store/store\";\r\nimport {decrementStep, setFromInfoData, setToInfoData} from \"../../../store/slices/pick-up-slice\";\r\nimport {LocalizationProvider, TimePicker} from \"@mui/x-date-pickers\";\r\nimport {AdapterDayjs} from \"@mui/x-date-pickers/AdapterDayjs\";\r\nimport {PickUpSelector} from \"../../../store/selectors/selectors\";\r\nimport {Dayjs} from \"dayjs\";\r\nimport CustomAlert from \"../../../components/alert\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nconst To: FC = () => {\r\n    const {\r\n        toLastName,\r\n        toFirstName,\r\n        toPhone,\r\n        toExtraPhone,\r\n        toAddress,\r\n        toExtraAddress,\r\n        toCompanyName,\r\n        toPickUpTimeMin: toPickUpTimeMinStore,\r\n        toPickUpTimeMax: toPickUpTimeMaxStore,\r\n        toDocuments,\r\n    } = useSelector(PickUpSelector)\r\n    const dispatch = useDispatch<AppDispatch>()\r\n\r\n    const [toPickUpTimeMin, setToPickUpTimeMin] = React.useState<Dayjs | null>(toPickUpTimeMinStore);\r\n    const [toPickUpTimeMax, setToPickUpTimeMax] = React.useState<Dayjs | null>(toPickUpTimeMaxStore);\r\n    const [open, setOpen] = useState(false)\r\n\r\n    const [to, setTo] = useState('')\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const handleBack = () => {\r\n        dispatch(decrementStep())\r\n    }\r\n\r\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        const data = new FormData(event.currentTarget);\r\n        const lastName = data.get('lastName') as string\r\n        const firstName = data.get('firstName') as string\r\n        const phoneNumber = data.get('phoneNumber') as string\r\n        const extraPhoneNumber = data.get('extraPhoneNumber') as string\r\n        const address = data.get('address') as string\r\n        const extraAddress = data.get('extraAddress') as string\r\n        const documents = data.get('documents') as string\r\n        const company = data.get('company') as string\r\n\r\n        if (to === 'Офис' || lastName && firstName && phoneNumber && address && documents && company) {\r\n            dispatch(setToInfoData({\r\n                to,\r\n                toLastName: lastName,\r\n                toFirstName: firstName,\r\n                toPhone: phoneNumber,\r\n                toExtraPhone: extraPhoneNumber,\r\n                toAddress: address,\r\n                toExtraAddress: extraAddress,\r\n                toCompanyName: company,\r\n                toPickUpTimeMin,\r\n                toPickUpTimeMax,\r\n                toDocuments: documents\r\n            }))\r\n            navigate('/pick-up-check')\r\n        } else {\r\n            setOpen(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CustomAlert open={open} setOpen={setOpen}/>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Укажите адрес доставки:\r\n            </Typography>\r\n            <Box component=\"form\" onSubmit={handleSubmit}>\r\n                <RadioGroup\r\n                    aria-labelledby=\"pick-up-to\"\r\n                    name=\"radio-buttons-group\"\r\n                    value={to}\r\n                    onChange={e => setTo(e.target.value)}\r\n                >\r\n                    <FormControlLabel value=\"Офис\" control={<Radio/>} label=\"Офис\"/>\r\n                    <FormControlLabel value=\"Другое\" control={<Radio/>} label=\"Другое\"/>\r\n                </RadioGroup>\r\n                {to === 'Другое' &&\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                required\r\n                                id=\"lastName\"\r\n                                name=\"lastName\"\r\n                                label=\"Фамилия\"\r\n                                fullWidth\r\n                                autoComplete=\"family-name\"\r\n                                defaultValue={toLastName}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                required\r\n                                id=\"firstName\"\r\n                                name=\"firstName\"\r\n                                label=\"Имя\"\r\n                                fullWidth\r\n                                autoComplete=\"given-name\"\r\n                                defaultValue={toFirstName}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                required\r\n                                id=\"phoneNumber\"\r\n                                name=\"phoneNumber\"\r\n                                label=\"Номер телефона\"\r\n                                fullWidth\r\n                                autoComplete=\"tel\"\r\n                                type=\"phone\"\r\n                                defaultValue={toPhone}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                id=\"extraPhoneNumber\"\r\n                                name=\"extraPhoneNumber\"\r\n                                label=\"Доп. номер телефона\"\r\n                                fullWidth\r\n                                autoComplete=\"tel\"\r\n                                type=\"phone\"\r\n                                defaultValue={toExtraPhone}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                required\r\n                                id=\"address\"\r\n                                name=\"address\"\r\n                                label=\"Адрес\"\r\n                                fullWidth\r\n                                autoComplete=\"street-address\"\r\n                                defaultValue={toAddress}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                id=\"extraAddress\"\r\n                                name=\"extraAddress\"\r\n                                label=\"Доп. адрес\"\r\n                                fullWidth\r\n                                autoComplete=\"street-address\"\r\n                                defaultValue={toExtraAddress}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <LocalizationProvider\r\n                                dateAdapter={AdapterDayjs}\r\n                                adapterLocale='ru'\r\n                            >\r\n                                <TimePicker\r\n                                    label=\"Время забора с\"\r\n                                    value={toPickUpTimeMin}\r\n                                    onChange={(newValue) => setToPickUpTimeMin(newValue)}\r\n                                    renderInput={(params) => <TextField fullWidth {...params} />}\r\n                                />\r\n                            </LocalizationProvider>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <LocalizationProvider\r\n                                dateAdapter={AdapterDayjs}\r\n                                adapterLocale='ru'\r\n                            >\r\n                                <TimePicker\r\n                                    label=\"Время забора до\"\r\n                                    value={toPickUpTimeMax}\r\n                                    onChange={(newValue) => setToPickUpTimeMax(newValue)}\r\n                                    renderInput={(params) => <TextField fullWidth {...params} />}\r\n                                />\r\n                            </LocalizationProvider>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                required\r\n                                id=\"company\"\r\n                                name=\"company\"\r\n                                label=\"Название организации\"\r\n                                fullWidth\r\n                                autoComplete=\"organization\"\r\n                                defaultValue={toCompanyName}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                required\r\n                                id=\"documents\"\r\n                                name=\"documents\"\r\n                                label=\"Документы\"\r\n                                fullWidth\r\n                                autoComplete=\"documents\"\r\n                                defaultValue={toDocuments}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                }\r\n                <Box sx={{display: 'flex', justifyContent: 'space-between', mt: 3}}>\r\n                    <Button onClick={handleBack}>\r\n                        Назад\r\n                    </Button>\r\n                    <Button variant=\"contained\" type=\"submit\">\r\n                        Проверить\r\n                    </Button>\r\n                </Box>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default To\r\n","import React, {FC} from 'react'\r\nimport {AppBar, Toolbar, Typography} from \"@mui/material\";\r\n\r\nconst Header: FC = () => {\r\n\r\n    return (\r\n        <AppBar\r\n            position=\"absolute\"\r\n            color=\"default\"\r\n            elevation={0}\r\n            sx={{\r\n                position: 'relative',\r\n                borderBottom: (t) => `1px solid ${t.palette.divider}`,\r\n            }}\r\n        >\r\n            <Toolbar>\r\n                <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n                    закажи-доставку.рф\r\n                </Typography>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React, {FC, useCallback} from 'react'\r\nimport {Container, CssBaseline, Paper, Step, StepLabel, Stepper, Typography} from \"@mui/material\";\r\nimport Copyright from '../../components/copyright'\r\nimport {useSelector} from 'react-redux';\r\nimport {PickUpSelector} from \"../../store/selectors/selectors\";\r\nimport From from \"./steps/from\";\r\nimport Type from \"./steps/type\";\r\nimport Date from \"./steps/date\";\r\nimport FromInfo from \"./steps/from-info\";\r\nimport Nature from \"./steps/nature\";\r\nimport Pass from \"./steps/pass\";\r\nimport Call from \"./steps/call\";\r\nimport To from \"./steps/to\";\r\nimport Header from \"../../components/header\";\r\n\r\nconst PickUp: FC = () => {\r\n    const {step} = useSelector(PickUpSelector)\r\n\r\n    const getStepContent = useCallback(\r\n        (step: number) => {\r\n            switch (step) {\r\n                case 0:\r\n                    return <From/>\r\n                case 1:\r\n                    return <Type/>\r\n                case 2:\r\n                    return <Date/>\r\n                case 3:\r\n                    return <FromInfo/>\r\n                case 4:\r\n                    return <Nature/>\r\n                case 5:\r\n                    return <Pass/>\r\n                case 6:\r\n                    return <Call/>\r\n                case 7:\r\n                    return <To/>\r\n            }\r\n        }, [])\r\n\r\n    return (\r\n        <>\r\n            <CssBaseline/>\r\n            <Header/>\r\n            <Container component=\"main\" maxWidth=\"sm\" sx={{mb: 4}}>\r\n                <Paper variant=\"outlined\" sx={{my: {xs: 3, md: 6}, p: {xs: 2, md: 3}}}>\r\n                    <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n                        Забор груза\r\n                    </Typography>\r\n                    <Stepper activeStep={step} alternativeLabel sx={{pt: 3, pb: 5}}>\r\n                        {Array(8).fill('').map((el, i) => (\r\n                            <Step key={i}>\r\n                                <StepLabel/>\r\n                            </Step>\r\n                        ))}\r\n                    </Stepper>\r\n                    <>\r\n                        {getStepContent(step)}\r\n                    </>\r\n                </Paper>\r\n                <Copyright/>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PickUp\r\n","import React, {FC, useEffect, useState} from 'react'\r\nimport {Box, Button, Container, CssBaseline, Grid, Paper, Typography} from \"@mui/material\";\r\nimport Header from \"../../../components/header\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {PickUpSelector} from \"../../../store/selectors/selectors\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport Copyright from \"../../../components/copyright\";\r\nimport dayjs from \"dayjs\";\r\nimport axios from \"axios\";\r\nimport CustomAlert from \"../../../components/alert\";\r\n\r\nconst PickUpCheck: FC = () => {\r\n    const data = useSelector(PickUpSelector)\r\n    const {\r\n        step,\r\n        from,\r\n        type,\r\n        pickUpDate,\r\n        orderNumber,\r\n        withContract,\r\n        companyName,\r\n        fromLastName,\r\n        fromFirstName,\r\n        fromPhone,\r\n        fromExtraPhone,\r\n        fromAddress,\r\n        fromExtraAddress,\r\n        fromCompanyName,\r\n        fromPickUpTimeMin,\r\n        fromPickUpTimeMax,\r\n        fromDocuments,\r\n        nature,\r\n        natureDescription,\r\n        needPass,\r\n        call,\r\n        to,\r\n        toLastName,\r\n        toFirstName,\r\n        toPhone,\r\n        toExtraPhone,\r\n        toAddress,\r\n        toExtraAddress,\r\n        toCompanyName,\r\n        toPickUpTimeMin,\r\n        toPickUpTimeMax,\r\n        toDocuments,\r\n    }\r\n        = useSelector(PickUpSelector)\r\n\r\n    const navigate = useNavigate()\r\n    const [success, setSuccess] = useState(false)\r\n    const [error, setError] = useState(false)\r\n\r\n    const sendData = () => {\r\n        axios.post('https://закажи-доставку.рф/api-amocrm/pick-up', {...data,\r\n            pickUpDate: dayjs(pickUpDate).format('DD.MM.YYYY'),\r\n            fromPickUpTimeMin: dayjs(fromPickUpTimeMin).format('HH : mm'),\r\n            fromPickUpTimeMax: dayjs(fromPickUpTimeMax).format('HH : mm'),\r\n            toPickUpTimeMin: dayjs(toPickUpTimeMin).format('HH : mm'),\r\n            toPickUpTimeMax: dayjs(toPickUpTimeMax).format('HH : mm'),\r\n            withContract: withContract ? 'да' : 'нет'\r\n        })\r\n            .then(() => setSuccess(true))\r\n            .catch(() => setError(true))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (step < 7) {\r\n            navigate('pick-up')\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <CustomAlert isSuccess message={'Данные отправлены'} open={success} setOpen={setSuccess}/>\r\n            <CustomAlert message={'Ошибка отправки'} open={error} setOpen={setError}/>\r\n            <CssBaseline/>\r\n            <Header/>\r\n            <Container component=\"main\" maxWidth=\"md\" sx={{mb: 4}}>\r\n                <Paper variant=\"outlined\" sx={{my: {xs: 3, md: 6}, p: {xs: 2, md: 3}}}>\r\n                    <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n                        Проверка данных\r\n                    </Typography>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <Typography variant=\"h6\" align=\"center\">\r\n                                Откуда везем\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Забираем от: {from}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Выберите вид услуги: {type}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Дата забора: {dayjs(pickUpDate).format('DD.MM.YYYY')}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Номер заказа или счета: {orderNumber}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Есть договоренность: {withContract ? 'да' : 'нет'}\r\n                            </Typography>\r\n                            {withContract &&\r\n                                <Typography variant=\"subtitle1\">\r\n                                    Наименование ИП/ООО: {companyName}\r\n                                </Typography>\r\n                            }\r\n                            <Typography variant=\"subtitle1\">\r\n                                Фамилия: {fromLastName}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Имя: {fromFirstName}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Номер телефона: {fromPhone}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Доп. номер телефона: {fromExtraPhone}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Адрес: {fromAddress}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Доп. адрес: {fromExtraAddress}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Время забора с: {dayjs(fromPickUpTimeMin).format('HH : mm')}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Время забора до: {dayjs(fromPickUpTimeMax).format('HH : mm')}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Название организации: {fromCompanyName}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Документы: {fromDocuments}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Укажите тип груза: {nature}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Описание груза: {natureDescription}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Нужен ли пропуск: {needPass}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Нужно ли созвониться заранее: {call}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <Typography variant=\"h6\" align=\"center\">\r\n                                Куда везем\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Адрес доставки: {to}\r\n                            </Typography>\r\n                            {to === 'Другое' &&\r\n                                <>\r\n                                    <Typography variant=\"subtitle1\">\r\n                                        Фамилия: {toLastName}\r\n                                    </Typography>\r\n                                    <Typography variant=\"subtitle1\">\r\n                                        Имя: {toFirstName}\r\n                                    </Typography>\r\n                                    <Typography variant=\"subtitle1\">\r\n                                        Номер телефона: {toPhone}\r\n                                    </Typography>\r\n                                    <Typography variant=\"subtitle1\">\r\n                                        Доп. номер телефона: {toExtraPhone}\r\n                                    </Typography>\r\n                                    <Typography variant=\"subtitle1\">\r\n                                        Адрес: {toAddress}\r\n                                    </Typography>\r\n                                    <Typography variant=\"subtitle1\">\r\n                                        Доп. адрес: {toExtraAddress}\r\n                                    </Typography>\r\n                                    <Typography variant=\"subtitle1\">\r\n                                        Время забора с: {dayjs(toPickUpTimeMin).format('HH : mm')}\r\n                                    </Typography>\r\n                                    <Typography variant=\"subtitle1\">\r\n                                        Время забора до: {dayjs(toPickUpTimeMax).format('HH : mm')}\r\n                                    </Typography>\r\n                                    <Typography variant=\"subtitle1\">\r\n                                        Название организации: {toCompanyName}\r\n                                    </Typography>\r\n                                    <Typography variant=\"subtitle1\">\r\n                                        Документы: {toDocuments}\r\n                                    </Typography>\r\n                                </>\r\n                            }\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Box sx={{display: 'flex', justifyContent: 'space-between', mt: 3}}>\r\n                        <Button>\r\n                            Назад\r\n                        </Button>\r\n                        <Button variant=\"contained\" onClick={sendData}>\r\n                            Подтвердить\r\n                        </Button>\r\n                    </Box>\r\n                </Paper>\r\n                <Copyright/>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PickUpCheck\r\n","import React, {FC} from 'react'\r\nimport {Box, Button, Container, CssBaseline, Paper, Typography} from \"@mui/material\";\r\nimport Header from \"../../components/header\";\r\nimport Copyright from \"../../components/copyright\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nconst Choose: FC = () => {\r\n    const navigate = useNavigate()\r\n\r\n    return (\r\n        <>\r\n            <CssBaseline/>\r\n            <Header/>\r\n            <Container component=\"main\" maxWidth=\"sm\" sx={{mb: 4}}>\r\n                <Paper variant=\"outlined\" sx={{my: {xs: 3, md: 6}, p: {xs: 2, md: 3}}}>\r\n                    <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n                        Выберите тип заказа:\r\n                    </Typography>\r\n                    <Box sx={{display: 'flex', justifyContent: 'space-around', mt: 3}}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            size=\"large\"\r\n                            onClick={() => navigate('/delivery')}\r\n                        >\r\n                            Доставка\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            size=\"large\"\r\n                            onClick={() => navigate('/pick-up')}\r\n                        >\r\n                            Забор\r\n                        </Button>\r\n                    </Box>\r\n                </Paper>\r\n                <Copyright/>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Choose\r\n","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\r\nimport {Dayjs} from \"dayjs\";\r\n\r\ninterface State {\r\n    step: number\r\n    to: string,\r\n    type: string,\r\n    ready: string\r\n    date: Dayjs | null\r\n    appNumber: string\r\n    fromLastName: string\r\n    fromFirstName: string\r\n    fromPhone: string\r\n    fromExtraPhone: string\r\n    fromAddress: string\r\n    fromExtraAddress: string\r\n    fromCompanyName: string\r\n    fromPickUpTimeMin: null | Dayjs\r\n    fromPickUpTimeMax: null | Dayjs\r\n    fromDocuments: string\r\n    nature: string\r\n    natureDescription: string\r\n    toLastName: string\r\n    toFirstName: string\r\n    toPhone: string\r\n    toExtraPhone: string\r\n    toAddress: string\r\n    toExtraAddress: string\r\n    toCompanyName: string\r\n    toPickUpTimeMin: null | Dayjs\r\n    toPickUpTimeMax: null | Dayjs\r\n    toDocuments: string\r\n    needPass: string\r\n    call: string\r\n}\r\n\r\nconst initialState: State = {\r\n    step: 0,\r\n    to: '',\r\n    type: '',\r\n    ready: '',\r\n    date: null,\r\n    appNumber: '',\r\n    fromLastName: '',\r\n    fromFirstName: '',\r\n    fromPhone: '',\r\n    fromExtraPhone: '',\r\n    fromAddress: '',\r\n    fromExtraAddress: '',\r\n    fromCompanyName: '',\r\n    fromPickUpTimeMin: null,\r\n    fromPickUpTimeMax: null,\r\n    fromDocuments: '',\r\n    nature: '',\r\n    natureDescription: '',\r\n    toLastName: '',\r\n    toFirstName: '',\r\n    toPhone: '',\r\n    toExtraPhone: '',\r\n    toAddress: '',\r\n    toExtraAddress: '',\r\n    toCompanyName: '',\r\n    toPickUpTimeMin: null,\r\n    toPickUpTimeMax: null,\r\n    toDocuments: '',\r\n    needPass: '',\r\n    call: '',\r\n}\r\n\r\nconst PickUpSlice = createSlice({\r\n    name: 'delivery',\r\n    initialState,\r\n    reducers: {\r\n        decrementStep(state) {\r\n            --state.step\r\n        },\r\n        setToData(state, action: PayloadAction<string>) {\r\n            ++state.step\r\n            state.to = action.payload\r\n        },\r\n        setTypeData(state, action: PayloadAction<string>) {\r\n            ++state.step\r\n            state.type = action.payload\r\n        },\r\n        setDateData(state, action: PayloadAction<{\r\n            ready: string,\r\n            date: Dayjs | null,\r\n            appNumber: string\r\n        }>) {\r\n            ++state.step\r\n            state.ready = action.payload.ready\r\n            state.date = action.payload.date\r\n            state.appNumber = action.payload.appNumber\r\n        },\r\n        setFromData(state, action: PayloadAction<{\r\n            fromLastName: string\r\n            fromFirstName: string\r\n            fromPhone: string\r\n            fromExtraPhone: string\r\n            fromAddress: string\r\n            fromExtraAddress: string\r\n            fromCompanyName: string\r\n            fromPickUpTimeMin: null | Dayjs\r\n            fromPickUpTimeMax: null | Dayjs\r\n            fromDocuments: string\r\n        }>) {\r\n            ++state.step\r\n            state.fromLastName = action.payload.fromLastName\r\n            state.fromFirstName = action.payload.fromFirstName\r\n            state.fromPhone = action.payload.fromPhone\r\n            state.fromExtraPhone = action.payload.fromExtraPhone\r\n            state.fromAddress = action.payload.fromAddress\r\n            state.fromExtraAddress = action.payload.fromExtraAddress\r\n            state.fromCompanyName = action.payload.fromCompanyName\r\n            state.fromPickUpTimeMin = action.payload.fromPickUpTimeMin\r\n            state.fromPickUpTimeMax = action.payload.fromPickUpTimeMax\r\n            state.fromDocuments = action.payload.fromDocuments\r\n        },\r\n        setNatureData(state, action: PayloadAction<{\r\n            nature: string\r\n            natureDescription: string\r\n        }>) {\r\n            ++state.step\r\n            state.nature = action.payload.nature\r\n            state.natureDescription = action.payload.natureDescription\r\n        },\r\n        setAddressData(state, action: PayloadAction<{\r\n            toLastName: string\r\n            toFirstName: string\r\n            toPhone: string\r\n            toExtraPhone: string\r\n            toAddress: string\r\n            toExtraAddress: string\r\n            toCompanyName: string\r\n            toPickUpTimeMin: null | Dayjs\r\n            toPickUpTimeMax: null | Dayjs\r\n            toDocuments: string\r\n        }>) {\r\n            ++state.step\r\n            state.toLastName = action.payload.toLastName\r\n            state.toFirstName = action.payload.toFirstName\r\n            state.toPhone = action.payload.toPhone\r\n            state.toExtraPhone = action.payload.toExtraPhone\r\n            state.toAddress = action.payload.toAddress\r\n            state.toExtraAddress = action.payload.toExtraAddress\r\n            state.toCompanyName = action.payload.toCompanyName\r\n            state.toPickUpTimeMin = action.payload.toPickUpTimeMin\r\n            state.toPickUpTimeMax = action.payload.toPickUpTimeMax\r\n            state.toDocuments = action.payload.toDocuments\r\n        },\r\n        setPassData(state, action: PayloadAction<{ needPass: string }>) {\r\n            ++state.step\r\n            state.needPass = action.payload.needPass\r\n        },\r\n        setCallData(state, action: PayloadAction<{ call: string }>) {\r\n            ++state.step\r\n            state.call = action.payload.call\r\n        },\r\n    }\r\n})\r\n\r\nexport const {\r\n    decrementStep,\r\n    setToData,\r\n    setTypeData,\r\n    setDateData,\r\n    setFromData,\r\n    setNatureData,\r\n    setAddressData,\r\n    setPassData,\r\n    setCallData\r\n} = PickUpSlice.actions\r\nexport default PickUpSlice.reducer\r\n","import {Box, Button, RadioGroup, Typography, Radio, FormControlLabel} from '@mui/material'\r\nimport React, {FC, useState} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {DeliverySelector} from \"../../../store/selectors/selectors\";\r\nimport {AppDispatch} from \"../../../store/store\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport CustomAlert from \"../../../components/alert\";\r\nimport {setToData} from \"../../../store/slices/delivery-slice\";\r\n\r\nconst From: FC = () => {\r\n    const [open, setOpen] = useState(false)\r\n    const {to} = useSelector(DeliverySelector)\r\n    const dispatch = useDispatch<AppDispatch>()\r\n    const navigate = useNavigate()\r\n\r\n    const handleBack = () => {\r\n        navigate('/choose')\r\n    }\r\n\r\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        const data = new FormData(event.currentTarget);\r\n        const to = data.get('to') as string\r\n\r\n        if (to) {\r\n            dispatch(setToData(to))\r\n        } else {\r\n            setOpen(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CustomAlert open={open} setOpen={setOpen}/>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Кому везем:\r\n            </Typography>\r\n            <Box component=\"form\" onSubmit={handleSubmit}>\r\n                <RadioGroup\r\n                    aria-labelledby=\"pick-up-from\"\r\n                    name=\"radio-buttons-group\"\r\n                    defaultValue={to}\r\n                >\r\n                    <FormControlLabel name='to' value=\"клиент\" control={<Radio/>} label=\"Клиент\"/>\r\n                    <FormControlLabel name='to' value=\"подрядчик\" control={<Radio/>} label=\"Подрядчик\"/>\r\n                </RadioGroup>\r\n                <Box sx={{display: 'flex', justifyContent: 'space-between', mt: 3}}>\r\n                    <Button onClick={handleBack}>\r\n                        Назад\r\n                    </Button>\r\n                    <Button type=\"submit\" variant=\"contained\">\r\n                        Далее\r\n                    </Button>\r\n                </Box>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default From\r\n","import {Box, Button, RadioGroup, Typography, Radio, FormControlLabel} from '@mui/material'\r\nimport React, {FC, useState} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {DeliverySelector} from \"../../../store/selectors/selectors\";\r\nimport {AppDispatch} from \"../../../store/store\";\r\nimport CustomAlert from \"../../../components/alert\";\r\nimport {decrementStep, setTypeData} from \"../../../store/slices/delivery-slice\";\r\n\r\nconst Type: FC = () => {\r\n    const [open, setOpen] = useState(false)\r\n    const {type} = useSelector(DeliverySelector)\r\n    const dispatch = useDispatch<AppDispatch>()\r\n\r\n    const handleBack = () => {\r\n        dispatch(decrementStep())\r\n    }\r\n\r\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        const data = new FormData(event.currentTarget);\r\n        const type = data.get('type') as string\r\n\r\n        if (type) {\r\n            dispatch(setTypeData(type))\r\n        } else {\r\n            setOpen(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CustomAlert open={open} setOpen={setOpen}/>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Укажите тип услуги:\r\n            </Typography>\r\n            <Box component=\"form\" onSubmit={handleSubmit}>\r\n                <RadioGroup\r\n                    aria-labelledby=\"pick-up-from\"\r\n                    name=\"radio-buttons-group\"\r\n                    defaultValue={type}\r\n                >\r\n                    <FormControlLabel name='type' value=\"авто\" control={<Radio/>} label=\"Авто\"/>\r\n                    <FormControlLabel name='type' value=\"пеший\" control={<Radio/>} label=\"Пеший\"/>\r\n                </RadioGroup>\r\n                <Box sx={{display: 'flex', justifyContent: 'space-between', mt: 3}}>\r\n                    <Button onClick={handleBack}>\r\n                        Назад\r\n                    </Button>\r\n                    <Button type=\"submit\" variant=\"contained\">\r\n                        Далее\r\n                    </Button>\r\n                </Box>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Type\r\n","import {Box, Button, RadioGroup, Typography, Radio, FormControlLabel, Grid, TextField} from '@mui/material'\r\nimport React, {FC, useState} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {DeliverySelector} from \"../../../store/selectors/selectors\";\r\nimport {AppDispatch} from \"../../../store/store\";\r\nimport CustomAlert from \"../../../components/alert\";\r\nimport {decrementStep, setDateData} from \"../../../store/slices/delivery-slice\";\r\nimport {AdapterDayjs} from \"@mui/x-date-pickers/AdapterDayjs\";\r\nimport {DatePicker} from \"@mui/x-date-pickers/DatePicker\";\r\nimport {LocalizationProvider} from \"@mui/x-date-pickers/LocalizationProvider\";\r\nimport {Dayjs} from \"dayjs\";\r\n\r\nconst Date: FC = () => {\r\n    const [open, setOpen] = useState(false)\r\n    const {ready, date: dateStore, appNumber} = useSelector(DeliverySelector)\r\n    const dispatch = useDispatch<AppDispatch>()\r\n\r\n    const [date, setDate] = useState<Dayjs | null>(dateStore)\r\n\r\n    const handleBack = () => {\r\n        dispatch(decrementStep())\r\n    }\r\n\r\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        const data = new FormData(event.currentTarget);\r\n        const ready = data.get('ready') as string\r\n        const appNumber = data.get('appNumber') as string\r\n\r\n        if (ready && appNumber && date) {\r\n            dispatch(setDateData({ready, appNumber, date}))\r\n        } else {\r\n            setOpen(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CustomAlert open={open} setOpen={setOpen}/>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Укажите следующие данные:\r\n            </Typography>\r\n            <Box component=\"form\" onSubmit={handleSubmit}>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            required\r\n                            name=\"appNumber\"\r\n                            label=\"Номер заказа\"\r\n                            fullWidth\r\n                            autoComplete=\"order-number\"\r\n                            defaultValue={appNumber}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <LocalizationProvider\r\n                            dateAdapter={AdapterDayjs}\r\n                            adapterLocale='ru'\r\n                        >\r\n                            <DatePicker\r\n                                label=\"Дата забора\"\r\n                                value={date}\r\n                                onChange={e => setDate(e)}\r\n                                renderInput={(params) => <TextField fullWidth {...params} />}\r\n                            />\r\n                        </LocalizationProvider>\r\n                    </Grid>\r\n                </Grid>\r\n                <RadioGroup\r\n                    aria-labelledby=\"pick-up-from\"\r\n                    name=\"radio-buttons-group\"\r\n                    defaultValue={ready}\r\n                >\r\n                    <FormControlLabel name='ready' value=\"заказ не готов\" control={<Radio/>} label=\"Заказ не готов\"/>\r\n                    <FormControlLabel name='ready' value=\"заказ готов\" control={<Radio/>} label=\"Заказ готов\"/>\r\n                </RadioGroup>\r\n                <Box sx={{display: 'flex', justifyContent: 'space-between', mt: 3}}>\r\n                    <Button onClick={handleBack}>\r\n                        Назад\r\n                    </Button>\r\n                    <Button type=\"submit\" variant=\"contained\">\r\n                        Далее\r\n                    </Button>\r\n                </Box>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Date\r\n","import React, {FC, useState} from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {DeliverySelector} from \"../../../store/selectors/selectors\";\r\nimport {AppDispatch} from \"../../../store/store\";\r\nimport {Dayjs} from \"dayjs\";\r\nimport {decrementStep} from \"../../../store/slices/pick-up-slice\";\r\nimport CustomAlert from \"../../../components/alert\";\r\nimport {Box, Button, Grid, TextField, Typography} from \"@mui/material\";\r\nimport {LocalizationProvider, TimePicker} from \"@mui/x-date-pickers\";\r\nimport {AdapterDayjs} from \"@mui/x-date-pickers/AdapterDayjs\";\r\nimport {setFromData} from \"../../../store/slices/delivery-slice\";\r\n\r\nconst From: FC = () => {\r\n    const {\r\n        fromLastName,\r\n        fromFirstName,\r\n        fromPhone,\r\n        fromExtraPhone,\r\n        fromAddress,\r\n        fromExtraAddress,\r\n        fromCompanyName,\r\n        fromPickUpTimeMin: fromPickUpTimeMinStore,\r\n        fromPickUpTimeMax: fromPickUpTimeMaxStore,\r\n        fromDocuments,\r\n    } = useSelector(DeliverySelector)\r\n    const dispatch = useDispatch<AppDispatch>()\r\n\r\n    const [fromPickUpTimeMin, setFromPickUpTimeMin] = React.useState<Dayjs | null>(fromPickUpTimeMinStore);\r\n    const [fromPickUpTimeMax, setFromPickUpTimeMax] = React.useState<Dayjs | null>(fromPickUpTimeMaxStore);\r\n    const [open, setOpen] = useState(false)\r\n\r\n    const handleBack = () => {\r\n        dispatch(decrementStep())\r\n    }\r\n\r\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        const data = new FormData(event.currentTarget);\r\n        const lastName = data.get('lastName') as string\r\n        const firstName = data.get('firstName') as string\r\n        const phoneNumber = data.get('phoneNumber') as string\r\n        const extraPhoneNumber = data.get('extraPhoneNumber') as string\r\n        const address = data.get('address') as string\r\n        const extraAddress = data.get('extraAddress') as string\r\n        const documents = data.get('documents') as string\r\n        const company = data.get('company') as string\r\n\r\n        if (lastName && firstName && phoneNumber && address && documents && company) {\r\n            dispatch(setFromData({\r\n                fromLastName: lastName,\r\n                fromFirstName: firstName,\r\n                fromPhone: phoneNumber,\r\n                fromExtraPhone: extraPhoneNumber,\r\n                fromAddress: address,\r\n                fromExtraAddress: extraAddress,\r\n                fromCompanyName: company,\r\n                fromPickUpTimeMin,\r\n                fromPickUpTimeMax,\r\n                fromDocuments: documents\r\n            }))\r\n        } else {\r\n            setOpen(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CustomAlert open={open} setOpen={setOpen}/>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Укажите данные от кого забирать:\r\n            </Typography>\r\n            <Box component=\"form\" onSubmit={handleSubmit}>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            required\r\n                            id=\"lastName\"\r\n                            name=\"lastName\"\r\n                            label=\"Фамилия\"\r\n                            fullWidth\r\n                            autoComplete=\"family-name\"\r\n                            defaultValue={fromLastName}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            required\r\n                            id=\"firstName\"\r\n                            name=\"firstName\"\r\n                            label=\"Имя\"\r\n                            fullWidth\r\n                            autoComplete=\"given-name\"\r\n                            defaultValue={fromFirstName}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            required\r\n                            id=\"phoneNumber\"\r\n                            name=\"phoneNumber\"\r\n                            label=\"Номер телефона\"\r\n                            fullWidth\r\n                            autoComplete=\"tel\"\r\n                            type=\"phone\"\r\n                            defaultValue={fromPhone}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            id=\"extraPhoneNumber\"\r\n                            name=\"extraPhoneNumber\"\r\n                            label=\"Доп. номер телефона\"\r\n                            fullWidth\r\n                            autoComplete=\"tel\"\r\n                            type=\"phone\"\r\n                            defaultValue={fromExtraPhone}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            required\r\n                            id=\"address\"\r\n                            name=\"address\"\r\n                            label=\"Адрес\"\r\n                            fullWidth\r\n                            autoComplete=\"street-address\"\r\n                            defaultValue={fromAddress}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            id=\"extraAddress\"\r\n                            name=\"extraAddress\"\r\n                            label=\"Доп. адрес\"\r\n                            fullWidth\r\n                            autoComplete=\"street-address\"\r\n                            defaultValue={fromExtraAddress}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <LocalizationProvider\r\n                            dateAdapter={AdapterDayjs}\r\n                            adapterLocale='ru'\r\n                        >\r\n                            <TimePicker\r\n                                label=\"Время забора с\"\r\n                                value={fromPickUpTimeMin}\r\n                                onChange={(newValue) => setFromPickUpTimeMin(newValue)}\r\n                                renderInput={(params) => <TextField fullWidth {...params} />}\r\n                            />\r\n                        </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <LocalizationProvider\r\n                            dateAdapter={AdapterDayjs}\r\n                            adapterLocale='ru'\r\n                        >\r\n                            <TimePicker\r\n                                label=\"Время забора до\"\r\n                                value={fromPickUpTimeMax}\r\n                                onChange={(newValue) => setFromPickUpTimeMax(newValue)}\r\n                                renderInput={(params) => <TextField fullWidth {...params} />}\r\n                            />\r\n                        </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            required\r\n                            id=\"company\"\r\n                            name=\"company\"\r\n                            label=\"Название организации\"\r\n                            fullWidth\r\n                            autoComplete=\"organization\"\r\n                            defaultValue={fromCompanyName}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            required\r\n                            id=\"documents\"\r\n                            name=\"documents\"\r\n                            label=\"Документы\"\r\n                            fullWidth\r\n                            autoComplete=\"documents\"\r\n                            defaultValue={fromDocuments}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                <Box sx={{display: 'flex', justifyContent: 'space-between', mt: 3}}>\r\n                    <Button onClick={handleBack}>\r\n                        Назад\r\n                    </Button>\r\n                    <Button variant=\"contained\" type=\"submit\">\r\n                        Далее\r\n                    </Button>\r\n                </Box>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default From\r\n","import React, {FC, useState} from 'react'\r\nimport {\r\n    Box,\r\n    Button,\r\n    FormControlLabel,\r\n    Radio,\r\n    RadioGroup,\r\n    TextField,\r\n    Typography\r\n} from \"@mui/material\";\r\nimport {decrementStep, setNatureData} from \"../../../store/slices/delivery-slice\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppDispatch} from \"../../../store/store\";\r\nimport {DeliverySelector} from \"../../../store/selectors/selectors\";\r\nimport CustomAlert from \"../../../components/alert\";\r\n\r\nconst Nature: FC = () => {\r\n    const {nature, natureDescription} = useSelector(DeliverySelector)\r\n    const dispatch = useDispatch<AppDispatch>()\r\n\r\n    const [open, setOpen] = useState(false)\r\n\r\n    const handleBack = () => {\r\n        dispatch(decrementStep())\r\n    }\r\n\r\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        const data = new FormData(event.currentTarget);\r\n        const nature = data.get('nature') as string\r\n        const description = data.get('description') as string\r\n\r\n        if (nature && description) {\r\n            dispatch(setNatureData({nature, natureDescription: description}))\r\n        } else {\r\n            setOpen(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CustomAlert open={open} setOpen={setOpen}/>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Укажите тип груза:\r\n            </Typography>\r\n            <Box component=\"form\" onSubmit={handleSubmit}>\r\n                <RadioGroup\r\n                    aria-labelledby=\"pick-up-nature\"\r\n                    name=\"radio-buttons-group\"\r\n                    defaultValue={nature}\r\n                >\r\n                    <FormControlLabel name=\"nature\" value=\"коробка\" control={<Radio/>} label=\"Коробка\"/>\r\n                    <FormControlLabel name=\"nature\" value=\"пачка\" control={<Radio/>} label=\"Пачка\"/>\r\n                    <FormControlLabel name=\"nature\" value=\"другое\" control={<Radio/>} label=\"Другое\"/>\r\n                </RadioGroup>\r\n                <TextField\r\n                    defaultValue={natureDescription}\r\n                    name=\"description\"\r\n                    required\r\n                    id=\"outlined-multiline-flexible\"\r\n                    label=\"Описание\"\r\n                    multiline\r\n                    maxRows={4}\r\n                    placeholder=\"ВАЖНО: После выбора Коробка и Пачка, необходимо написать количество и вес. При выборе ДРУГОЕ опишите характер груза (например: Баннер длинной 2,30м; Паллет 400кг и т.д.)\"\r\n                    fullWidth\r\n                />\r\n                <Box sx={{display: 'flex', justifyContent: 'space-between', mt: 3}}>\r\n                    <Button onClick={handleBack}>\r\n                        Назад\r\n                    </Button>\r\n                    <Button variant=\"contained\" type=\"submit\">\r\n                        Далее\r\n                    </Button>\r\n                </Box>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Nature\r\n","import React, {useState} from 'react'\r\nimport {Box, Button, FormControlLabel, Radio, RadioGroup, Typography} from \"@mui/material\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppDispatch} from \"../../../store/store\";\r\nimport {decrementStep, setPassData} from \"../../../store/slices/delivery-slice\";\r\nimport {DeliverySelector, PickUpSelector} from \"../../../store/selectors/selectors\";\r\nimport CustomAlert from \"../../../components/alert\";\r\n\r\nconst Pass = () => {\r\n    const {needPass} = useSelector(DeliverySelector)\r\n    const dispatch = useDispatch<AppDispatch>()\r\n\r\n    const [open, setOpen] = useState(false)\r\n\r\n    const handleBack = () => {\r\n        dispatch(decrementStep())\r\n    }\r\n\r\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        const data = new FormData(event.currentTarget);\r\n        const pass = data.get('pass') as string\r\n\r\n        if (pass) {\r\n            dispatch(setPassData({needPass: pass}))\r\n        } else {\r\n            setOpen(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CustomAlert open={open} setOpen={setOpen}/>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Нужен ли пропуск:\r\n            </Typography>\r\n            <Box component=\"form\" onSubmit={handleSubmit}>\r\n                <RadioGroup\r\n                    aria-labelledby=\"pick-up-pass\"\r\n                    name=\"radio-buttons-group\"\r\n                    defaultValue={needPass}\r\n                >\r\n                    <FormControlLabel name=\"pass\" value=\"нужен\" control={<Radio/>} label=\"Пропуск нужен\"/>\r\n                    <FormControlLabel name=\"pass\" value=\"не нужен\" control={<Radio/>} label=\"Пропуск не нужен\"/>\r\n                </RadioGroup>\r\n                <Box sx={{display: 'flex', justifyContent: 'space-between', mt: 3}}>\r\n                    <Button onClick={handleBack}>\r\n                        Назад\r\n                    </Button>\r\n                    <Button variant=\"contained\" type=\"submit\">\r\n                        Далее\r\n                    </Button>\r\n                </Box>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Pass\r\n","import React, {FC, useState} from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {DeliverySelector} from \"../../../store/selectors/selectors\";\r\nimport {AppDispatch} from \"../../../store/store\";\r\nimport {Dayjs} from \"dayjs\";\r\nimport CustomAlert from \"../../../components/alert\";\r\nimport {Box, Button, Grid, TextField, Typography} from \"@mui/material\";\r\nimport {LocalizationProvider, TimePicker} from \"@mui/x-date-pickers\";\r\nimport {AdapterDayjs} from \"@mui/x-date-pickers/AdapterDayjs\";\r\nimport {decrementStep, setAddressData} from \"../../../store/slices/delivery-slice\";\r\n\r\nconst Address: FC = () => {\r\n    const {\r\n        toLastName,\r\n        toFirstName,\r\n        toPhone,\r\n        toExtraPhone,\r\n        toAddress,\r\n        toExtraAddress,\r\n        toCompanyName,\r\n        toPickUpTimeMin: toPickUpTimeMinStore,\r\n        toPickUpTimeMax: toPickUpTimeMaxStore,\r\n        toDocuments,\r\n    } = useSelector(DeliverySelector)\r\n    const dispatch = useDispatch<AppDispatch>()\r\n\r\n    const [toPickUpTimeMin, setFromPickUpTimeMin] = React.useState<Dayjs | null>(toPickUpTimeMinStore);\r\n    const [toPickUpTimeMax, setFromPickUpTimeMax] = React.useState<Dayjs | null>(toPickUpTimeMaxStore);\r\n    const [open, setOpen] = useState(false)\r\n\r\n    const handleBack = () => {\r\n        dispatch(decrementStep())\r\n    }\r\n\r\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        const data = new FormData(event.currentTarget);\r\n        const lastName = data.get('lastName') as string\r\n        const firstName = data.get('firstName') as string\r\n        const phoneNumber = data.get('phoneNumber') as string\r\n        const extraPhoneNumber = data.get('extraPhoneNumber') as string\r\n        const address = data.get('address') as string\r\n        const extraAddress = data.get('extraAddress') as string\r\n        const documents = data.get('documents') as string\r\n        const company = data.get('company') as string\r\n\r\n        if (lastName && firstName && phoneNumber && address && documents && company) {\r\n            dispatch(setAddressData({\r\n                toLastName: lastName,\r\n                toFirstName: firstName,\r\n                toPhone: phoneNumber,\r\n                toExtraPhone: extraPhoneNumber,\r\n                toAddress: address,\r\n                toExtraAddress: extraAddress,\r\n                toCompanyName: company,\r\n                toPickUpTimeMin,\r\n                toPickUpTimeMax,\r\n                toDocuments: documents\r\n            }))\r\n        } else {\r\n            setOpen(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CustomAlert open={open} setOpen={setOpen}/>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Укажите данные от кого забирать:\r\n            </Typography>\r\n            <Box component=\"form\" onSubmit={handleSubmit}>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            required\r\n                            id=\"lastName\"\r\n                            name=\"lastName\"\r\n                            label=\"Фамилия\"\r\n                            fullWidth\r\n                            autoComplete=\"family-name\"\r\n                            defaultValue={toLastName}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            required\r\n                            id=\"firstName\"\r\n                            name=\"firstName\"\r\n                            label=\"Имя\"\r\n                            fullWidth\r\n                            autoComplete=\"given-name\"\r\n                            defaultValue={toFirstName}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            required\r\n                            id=\"phoneNumber\"\r\n                            name=\"phoneNumber\"\r\n                            label=\"Номер телефона\"\r\n                            fullWidth\r\n                            autoComplete=\"tel\"\r\n                            type=\"phone\"\r\n                            defaultValue={toPhone}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            id=\"extraPhoneNumber\"\r\n                            name=\"extraPhoneNumber\"\r\n                            label=\"Доп. номер телефона\"\r\n                            fullWidth\r\n                            autoComplete=\"tel\"\r\n                            type=\"phone\"\r\n                            defaultValue={toExtraPhone}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            required\r\n                            id=\"address\"\r\n                            name=\"address\"\r\n                            label=\"Адрес\"\r\n                            fullWidth\r\n                            autoComplete=\"street-address\"\r\n                            defaultValue={toAddress}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            id=\"extraAddress\"\r\n                            name=\"extraAddress\"\r\n                            label=\"Доп. адрес\"\r\n                            fullWidth\r\n                            autoComplete=\"street-address\"\r\n                            defaultValue={toExtraAddress}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <LocalizationProvider\r\n                            dateAdapter={AdapterDayjs}\r\n                            adapterLocale='ru'\r\n                        >\r\n                            <TimePicker\r\n                                label=\"Время забора с\"\r\n                                value={toPickUpTimeMin}\r\n                                onChange={(newValue) => setFromPickUpTimeMin(newValue)}\r\n                                renderInput={(params) => <TextField fullWidth {...params} />}\r\n                            />\r\n                        </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <LocalizationProvider\r\n                            dateAdapter={AdapterDayjs}\r\n                            adapterLocale='ru'\r\n                        >\r\n                            <TimePicker\r\n                                label=\"Время забора до\"\r\n                                value={toPickUpTimeMax}\r\n                                onChange={(newValue) => setFromPickUpTimeMax(newValue)}\r\n                                renderInput={(params) => <TextField fullWidth {...params} />}\r\n                            />\r\n                        </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            required\r\n                            id=\"company\"\r\n                            name=\"company\"\r\n                            label=\"Название организации\"\r\n                            fullWidth\r\n                            autoComplete=\"organization\"\r\n                            defaultValue={toCompanyName}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            required\r\n                            id=\"documents\"\r\n                            name=\"documents\"\r\n                            label=\"Документы\"\r\n                            fullWidth\r\n                            autoComplete=\"documents\"\r\n                            defaultValue={toDocuments}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                <Box sx={{display: 'flex', justifyContent: 'space-between', mt: 3}}>\r\n                    <Button onClick={handleBack}>\r\n                        Назад\r\n                    </Button>\r\n                    <Button variant=\"contained\" type=\"submit\">\r\n                        Далее\r\n                    </Button>\r\n                </Box>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Address\r\n","import React, {FC, useState} from 'react'\r\nimport {Box, Button, FormControlLabel, Radio, RadioGroup, Typography} from \"@mui/material\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppDispatch} from \"../../../store/store\";\r\nimport {decrementStep, setCallData} from \"../../../store/slices/delivery-slice\";\r\nimport {DeliverySelector} from \"../../../store/selectors/selectors\";\r\nimport CustomAlert from \"../../../components/alert\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nconst Call: FC = () => {\r\n    const {call} = useSelector(DeliverySelector)\r\n    const dispatch = useDispatch<AppDispatch>()\r\n    const navigation = useNavigate()\r\n\r\n    const [open, setOpen] = useState(false)\r\n\r\n    const handleBack = () => {\r\n        dispatch(decrementStep())\r\n    }\r\n\r\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        const data = new FormData(event.currentTarget);\r\n        const call = data.get('call') as string\r\n\r\n        if (call) {\r\n            dispatch(setCallData({call}))\r\n            navigation('/delivery-check')\r\n        } else {\r\n            setOpen(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CustomAlert open={open} setOpen={setOpen}/>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Нужно ли созвониться заранее:\r\n            </Typography>\r\n            <Box component=\"form\" onSubmit={handleSubmit}>\r\n                <RadioGroup\r\n                    aria-labelledby=\"pick-up-call\"\r\n                    name=\"radio-buttons-group\"\r\n                    defaultValue={call}\r\n                >\r\n                    <FormControlLabel name=\"call\" value=\"15 минут\" control={<Radio/>} label=\"Созвониться за 15 минут\"/>\r\n                    <FormControlLabel name=\"call\" value=\"30 минут\" control={<Radio/>} label=\"Созвониться за 30 минут\"/>\r\n                    <FormControlLabel name=\"call\" value=\"1 час\" control={<Radio/>} label=\"Созвониться за час\"/>\r\n                    <FormControlLabel name=\"call\" value=\"3 часа\" control={<Radio/>} label=\"Созвониться за 3 часа\"/>\r\n                    <FormControlLabel name=\"call\" value=\"не нужно\" control={<Radio/>} label=\"Созвониваться не нужно\"/>\r\n                </RadioGroup>\r\n                <Box sx={{display: 'flex', justifyContent: 'space-between', mt: 3}}>\r\n                    <Button onClick={handleBack}>\r\n                        Назад\r\n                    </Button>\r\n                    <Button variant=\"contained\" type=\"submit\">\r\n                        Далее\r\n                    </Button>\r\n                </Box>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Call\r\n","import React, {FC, useCallback} from 'react'\r\nimport {Container, CssBaseline, Paper, Step, StepLabel, Stepper, Typography} from \"@mui/material\";\r\nimport Copyright from '../../components/copyright'\r\nimport {useSelector} from 'react-redux';\r\nimport {DeliverySelector} from \"../../store/selectors/selectors\";\r\nimport To from \"./steps/to\";\r\nimport Header from \"../../components/header\";\r\nimport Type from \"./steps/type\";\r\nimport Date from \"./steps/date\";\r\nimport From from \"./steps/from\";\r\nimport Nature from \"./steps/nature\";\r\nimport Pass from \"./steps/pass\";\r\nimport Address from \"./steps/address\";\r\nimport Call from \"./steps/call\";\r\n\r\nconst Delivery: FC = () => {\r\n    const {step} = useSelector(DeliverySelector)\r\n\r\n    const getStepContent = useCallback(\r\n        (step: number) => {\r\n            switch (step) {\r\n                case 0:\r\n                    return <To/>\r\n                case 1:\r\n                    return <Type/>\r\n                case 2:\r\n                    return <Date/>\r\n                case 3:\r\n                    return <From/>\r\n                case 4:\r\n                    return <Nature/>\r\n                case 5:\r\n                    return <Address/>\r\n                case 6:\r\n                    return <Pass/>\r\n                case 7:\r\n                    return <Call/>\r\n            }\r\n        }, [])\r\n\r\n    return (\r\n        <>\r\n            <CssBaseline/>\r\n            <Header/>\r\n            <Container component=\"main\" maxWidth=\"sm\" sx={{mb: 4}}>\r\n                <Paper variant=\"outlined\" sx={{my: {xs: 3, md: 6}, p: {xs: 2, md: 3}}}>\r\n                    <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n                        Доставка груза\r\n                    </Typography>\r\n                    <Stepper activeStep={step} alternativeLabel sx={{pt: 3, pb: 5}}>\r\n                        {Array(8).fill('').map((el, i) => (\r\n                            <Step key={i}>\r\n                                <StepLabel/>\r\n                            </Step>\r\n                        ))}\r\n                    </Stepper>\r\n                    <>\r\n                        {getStepContent(step)}\r\n                    </>\r\n                </Paper>\r\n                <Copyright/>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Delivery\r\n","import React, {FC, useEffect, useState} from 'react'\r\nimport {Box, Button, Container, CssBaseline, Grid, Paper, Typography} from \"@mui/material\";\r\nimport Header from \"../../../components/header\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {DeliverySelector, PickUpSelector} from \"../../../store/selectors/selectors\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport Copyright from \"../../../components/copyright\";\r\nimport dayjs from \"dayjs\";\r\nimport axios from \"axios\";\r\nimport CustomAlert from \"../../../components/alert\";\r\n\r\nconst DeliveryCheck: FC = () => {\r\n    const data = useSelector(PickUpSelector)\r\n    const {\r\n        step,\r\n        to,\r\n        type,\r\n        ready,\r\n        date,\r\n        appNumber,\r\n        fromLastName,\r\n        fromFirstName,\r\n        fromPhone,\r\n        fromExtraPhone,\r\n        fromAddress,\r\n        fromExtraAddress,\r\n        fromCompanyName,\r\n        fromPickUpTimeMin,\r\n        fromPickUpTimeMax,\r\n        fromDocuments,\r\n        nature,\r\n        natureDescription,\r\n        toLastName,\r\n        toFirstName,\r\n        toPhone,\r\n        toExtraPhone,\r\n        toAddress,\r\n        toExtraAddress,\r\n        toCompanyName,\r\n        toPickUpTimeMin,\r\n        toPickUpTimeMax,\r\n        toDocuments,\r\n        needPass,\r\n        call\r\n    }\r\n        = useSelector(DeliverySelector)\r\n    const [success, setSuccess] = useState(false)\r\n    const [error, setError] = useState(false)\r\n\r\n    const sendData = () => {\r\n        axios.post('https://закажи-доставку.рф/api-amocrm/delivery', {...data,\r\n            date: dayjs(date).format('DD.MM.YYYY'),\r\n            fromPickUpTimeMin: dayjs(fromPickUpTimeMin).format('HH : mm'),\r\n            fromPickUpTimeMax: dayjs(fromPickUpTimeMax).format('HH : mm'),\r\n            toPickUpTimeMin: dayjs(toPickUpTimeMin).format('HH : mm'),\r\n            toPickUpTimeMax: dayjs(toPickUpTimeMax).format('HH : mm'),\r\n        })\r\n            .then(() => setSuccess(true))\r\n            .catch(() => setError(true))\r\n    }\r\n\r\n    const navigate = useNavigate()\r\n\r\n    useEffect(() => {\r\n        if (step < 7) {\r\n            navigate('delivery')\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <CustomAlert isSuccess message={'Данные отправлены'} open={success} setOpen={setSuccess}/>\r\n            <CustomAlert message={'Ошибка отправки'} open={error} setOpen={setError}/>\r\n            <CssBaseline/>\r\n            <Header/>\r\n            <Container component=\"main\" maxWidth=\"md\" sx={{mb: 4}}>\r\n                <Paper variant=\"outlined\" sx={{my: {xs: 3, md: 6}, p: {xs: 2, md: 3}}}>\r\n                    <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n                        Проверка данных\r\n                    </Typography>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <Typography variant=\"h6\" align=\"center\">\r\n                                Кому везем\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Кому везем: {to}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Тип услуги: {type}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Номер заказа: {appNumber}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Дата забора: {dayjs(date).format('DD.MM.YYYY')}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Готовность заказа: {ready}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Фамилия: {fromLastName}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Имя: {fromFirstName}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Номер телефона: {fromPhone}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Доп. номер телефона: {fromExtraPhone}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Адрес: {fromAddress}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Доп. адрес: {fromExtraAddress}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Время забора с: {dayjs(fromPickUpTimeMin).format('HH : mm')}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Время забора до: {dayjs(fromPickUpTimeMax).format('HH : mm')}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Название организации: {fromCompanyName}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Документы: {fromDocuments}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Укажите тип груза: {nature}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Описание груза: {natureDescription}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Нужен ли пропуск: {needPass}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Нужно ли созвониться заранее: {call}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <Typography variant=\"h6\" align=\"center\">\r\n                                От кого везем\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Фамилия: {toLastName}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Имя: {toFirstName}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Номер телефона: {toPhone}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Доп. номер телефона: {toExtraPhone}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Адрес: {toAddress}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Доп. адрес: {toExtraAddress}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Время забора с: {dayjs(toPickUpTimeMin).format('HH : mm')}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Время забора до: {dayjs(toPickUpTimeMax).format('HH : mm')}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Название организации: {toCompanyName}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Документы: {toDocuments}\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Box sx={{display: 'flex', justifyContent: 'space-between', mt: 3}}>\r\n                        <Button>\r\n                            Назад\r\n                        </Button>\r\n                        <Button variant=\"contained\" onClick={sendData}>\r\n                            Подтвердить\r\n                        </Button>\r\n                    </Box>\r\n                </Paper>\r\n                <Copyright/>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DeliveryCheck\r\n","import React, {FC, useEffect} from 'react'\r\nimport {BrowserRouter, Routes, Route, Navigate} from \"react-router-dom\";\r\nimport SignIn from \"./pages/sign-in/sign-in\";\r\nimport SignUp from \"./pages/sign-up/sign-up\";\r\nimport PickUp from \"./pages/pick-up/pick-up\";\r\nimport PickUpCheck from \"./pages/pick-up/check/pick-up-check\";\r\nimport Choose from \"./pages/choose/choose\";\r\nimport Delivery from \"./pages/delivery/delivery\";\r\nimport DeliveryCheck from \"./pages/delivery/check/delivery-check\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AuthSelector} from \"./store/selectors/selectors\";\r\nimport {refreshThunk} from \"./store/thunks/auth-thunk\";\r\nimport {setLoading} from \"./store/slices/auth-slice\";\r\nimport {CircularProgress} from \"@mui/material\";\r\n\r\nconst AppRouter: FC = () => {\r\n    const dispatch = useDispatch()\r\n    const {isAuth, isLoading} = useSelector(AuthSelector)\r\n\r\n    useEffect(() => {\r\n        const jwt = localStorage.getItem('jwt')\r\n\r\n        if(jwt) {\r\n            // @ts-ignore\r\n            dispatch(refreshThunk({jwt}))\r\n        } else {\r\n            dispatch(setLoading(false))\r\n        }\r\n    }, [])\r\n\r\n    if(isLoading) {\r\n        return (\r\n            <div style={{height: '100vh', width: '100vw', display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\r\n                <CircularProgress />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <Routes>\r\n                {\r\n                    !isAuth ?\r\n                        <>\r\n                            <Route path='/sign-in' element={<SignIn/>}/>\r\n                            <Route path='/sign-up' element={<SignUp/>}/>\r\n                            <Route path='*' element={<Navigate to=\"/sign-in\" replace />} />\r\n                        </>\r\n                        :\r\n                        <Route path='/'>\r\n                            <Route path='choose' element={<Choose/>}/>\r\n                            <Route path='pick-up' element={<PickUp/>}/>\r\n                            <Route path='pick-up-check' element={<PickUpCheck/>}/>\r\n                            <Route path='delivery' element={<Delivery/>}/>\r\n                            <Route path='delivery-check' element={<DeliveryCheck/>}/>\r\n                            <Route path='*' element={<Navigate to=\"/choose\" replace />} />\r\n                        </Route>\r\n                }\r\n            </Routes>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default AppRouter\r\n","import {configureStore} from '@reduxjs/toolkit'\r\nimport PickUpSlice from './slices/pick-up-slice'\r\nimport DeliverySlice from \"./slices/delivery-slice\";\r\nimport AuthSlice from \"./slices/auth-slice\";\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        pickUp: PickUpSlice,\r\n        delivery: DeliverySlice,\r\n        auth: AuthSlice\r\n    },\r\n})\r\n\r\nexport type RootState = ReturnType<typeof store.getState>\r\nexport type AppDispatch = typeof store.dispatch\r\n","import '@fontsource/roboto/300.css';\nimport '@fontsource/roboto/400.css';\nimport '@fontsource/roboto/500.css';\nimport '@fontsource/roboto/700.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport AppRouter from \"./app-router\";\nimport {createTheme, ThemeProvider} from \"@mui/material\";\nimport {Provider} from 'react-redux'\nimport {store} from \"./store/store\";\n\nconst theme = createTheme();\n\nconst root = ReactDOM.createRoot(\n    document.getElementById('root') as HTMLElement\n);\nroot.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <ThemeProvider theme={theme}>\n                <AppRouter/>\n            </ThemeProvider>\n        </Provider>\n    </React.StrictMode>\n);\n\n"],"sourceRoot":""}