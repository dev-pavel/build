{"version":3,"sources":["components/copyright.tsx","store/thunks/auth-thunk.ts","store/selectors/selectors.ts","components/alert.tsx","store/slices/auth-slice.tsx","pages/sign-in/sign-in.tsx","pages/sign-up/sign-up.tsx","store/slices/pick-up-slice.ts","pages/pick-up/steps/from.tsx","pages/pick-up/steps/type.tsx","pages/pick-up/steps/date.tsx","pages/pick-up/steps/from-info.tsx","pages/pick-up/steps/nature.tsx","pages/pick-up/steps/pass.tsx","pages/pick-up/steps/call.tsx","pages/pick-up/steps/to.tsx","components/header.tsx","pages/pick-up/pick-up.tsx","pages/pick-up/check/pick-up-check.tsx","pages/choose/choose.tsx","store/slices/delivery-slice.ts","pages/delivery/steps/to.tsx","pages/delivery/steps/type.tsx","pages/delivery/steps/date.tsx","pages/delivery/steps/from.tsx","pages/delivery/steps/nature.tsx","pages/delivery/steps/pass.tsx","pages/delivery/steps/address.tsx","pages/delivery/steps/call.tsx","pages/delivery/delivery.tsx","pages/delivery/check/delivery-check.tsx","app-router.tsx","store/store.ts","index.tsx"],"names":["Copyright","props","react","Typography","Object","assign","variant","color","align","Link","Date","getFullYear","API_URL","loginThunk","createAsyncThunk","_ref","asyncToGenerator","_regeneratorRuntime","mark","_callee","data","res","wrap","_context","prev","next","axios","post","validateStatus","sent","abrupt","status","stop","_x","apply","this","arguments","registrationThunk","_ref2","_callee2","_context2","_x2","refreshThunk","_ref3","_callee3","_context3","_x3","PickUpSelector","state","pickUp","DeliverySelector","delivery","AuthSelector","auth","CustomAlert","open","setOpen","message","isSuccess","react_default","a","createElement","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","Alert","severity","AuthSlice","createSlice","name","initialState","isAuth","error","isLoading","reducers","setAuth","action","payload","registration","localStorage","setItem","clearError","setLoading","extraReducers","builder","addCase","fulfilled","jwt","actions","SignIn","useSelector","_useState","useState","_useState2","slicedToArray","dispatch","useDispatch","navigate","useNavigate","useEffect","components_alert","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","LockOutlined_default","onSubmit","event","preventDefault","FormData","currentTarget","email","get","password","noValidate","mt","TextField","margin","required","fullWidth","id","label","autoComplete","autoFocus","type","FormControlLabel","control","Checkbox","value","Button","mb","Grid","container","justifyContent","item","onClick","copyright","SignUp","_useState3","_useState4","accept","setAccept","firstName","lastName","company","spacing","xs","sm","checked","onChange","PickUpSlice","step","from","ready","readyDate","readyTime","pickUpDate","orderNumber","powerOfAttorney","supplierOrderNumber","companyName","fromLastName","fromFirstName","fromPhone","fromExtraPhone","fromAddress","fromExtraAddress","fromCompanyName","fromPickUpTimeMin","fromPickUpTimeMax","fromDocuments","nature","natureDescription","needPass","call","to","toLastName","toFirstName","toPhone","toExtraPhone","toAddress","toExtraAddress","toCompanyName","toPickUpTimeMin","toPickUpTimeMax","toDocuments","incrementStep","decrementStep","setFromData","setTypeData","setDateData","setFromInfoData","setNatureData","setPassData","setCallData","setToInfoData","From","Fragment","gutterBottom","RadioGroup","aria-labelledby","defaultValue","Radio","Type","_useSelector","readyStore","readyDateStore","readyTimeStore","date","setDate","_useState5","_useState6","openPicker","setOpenPicker","_useState7","_useState8","openReadyPicker","setOpenReadyPicker","_useState9","_useState10","setReady","_useState11","_useState12","power","setPower","_useState13","_useState14","setReadyDate","_useState15","_useState16","setReadyTime","LocalizationProvider","dateAdapter","AdapterDayjs","adapterLocale","DatePicker","onOpen","minDate","dayjs","add","e","renderInput","params","focused","onKeyDown","target","TimePicker","newValue","FromInfo","fromPickUpTimeMinStore","fromPickUpTimeMaxStore","_React$useState","React","_React$useState2","setFromPickUpTimeMin","_React$useState3","_React$useState4","setFromPickUpTimeMax","phoneNumber","extraPhoneNumber","address","extraAddress","documents","Nature","description","multiline","maxRows","placeholder","Pass","pass","Call","To","storeTo","toPickUpTimeMinStore","toPickUpTimeMaxStore","setToPickUpTimeMin","setToPickUpTimeMax","setTo","Header","AppBar","position","elevation","borderBottom","t","concat","palette","divider","Toolbar","noWrap","PickUp","getStepContent","useCallback","steps_from","steps_type","steps_date","from_info","steps_nature","steps_pass","steps_call","steps_to","header","Paper","my","md","p","Stepper","activeStep","alternativeLabel","pt","pb","Array","fill","map","el","i","Step","key","StepLabel","PickUpCheck","loading","isNext","setIsNext","success","setSuccess","setError","format","objectSpread","then","catch","finally","CircularProgress","size","Choose","appNumber","setToData","setAddressData","DateComponent","dateStore","Address","navigation","Delivery","delivery_steps_to","delivery_steps_type","delivery_steps_date","delivery_steps_from","delivery_steps_nature","steps_address","delivery_steps_pass","delivery_steps_call","DeliveryCheck","AppRouter","getItem","style","height","width","dist","react_router_dist","path","element","choose","pick_up","pick_up_check","delivery_check","replace","sign_in","sign_up","store","configureStore","reducer","DeliverySlice","theme","createTheme","ReactDOM","createRoot","document","getElementById","render","StrictMode","es","ThemeProvider","app_router"],"mappings":"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","file":"static/js/main.5e8be35f.chunk.js","sourcesContent":["import Typography from \"@mui/material/Typography\";\r\nimport Link from \"@mui/material/Link\";\r\nimport * as React from \"react\";\r\nimport {FC} from \"react\";\r\n\r\nconst Copyright: FC<any> = (props) => {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\">\r\n                Закажи Доставку\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nexport default Copyright\r\n","import {createAsyncThunk} from \"@reduxjs/toolkit\";\r\nimport axios from 'axios'\r\nimport {User} from \"../../interfaces/interfaces\";\r\n\r\nconst API_URL = 'https://закажи-доставку.рф/api'\r\n\r\nexport const loginThunk = createAsyncThunk(\r\n    'auth/login',\r\n    async (data: { email: string, password: string }) => {\r\n        const res = await axios.post(API_URL + '/auth/login', data, {validateStatus: null})\r\n\r\n        return {\r\n            status: res.status,\r\n            data: res.data\r\n        }\r\n    }\r\n)\r\n\r\nexport const registrationThunk = createAsyncThunk(\r\n    'auth/registration',\r\n    async (data: User) => {\r\n        const res = await axios.post(API_URL + '/auth/registration', data, {validateStatus: null})\r\n\r\n        return {\r\n            status: res.status,\r\n            data: res.data\r\n        }\r\n    }\r\n)\r\n\r\nexport const refreshThunk = createAsyncThunk(\r\n    'auth/refresh',\r\n    async (data: { jwt: string }) => {\r\n        const res = await axios.post(API_URL + '/auth/refresh', data, {validateStatus: null})\r\n\r\n        return {\r\n            status: res.status,\r\n            data: res.data\r\n        }\r\n    }\r\n)\r\n","import {RootState} from \"../store\";\r\n\r\nexport const PickUpSelector = (state: RootState) => state.pickUp\r\nexport const DeliverySelector = (state: RootState) => state.delivery\r\nexport const AuthSelector = (state: RootState) => state.auth\r\n","import React, {FC} from 'react'\r\nimport {Alert, Snackbar} from \"@mui/material\";\r\n\r\ninterface Props {\r\n    open: boolean,\r\n    setOpen: React.Dispatch<React.SetStateAction<boolean>>\r\n    message?: string | null\r\n    isSuccess?: boolean\r\n}\r\n\r\nconst CustomAlert: FC<Props> = ({open, setOpen, message, isSuccess}) => {\r\n    return (\r\n        <Snackbar\r\n            anchorOrigin={{vertical: 'top', horizontal: 'right'}}\r\n            open={open}\r\n            autoHideDuration={3000}\r\n            onClose={() => setOpen(false)}\r\n        >\r\n            <Alert\r\n                onClose={() => setOpen(false)}\r\n                severity={isSuccess ? \"success\" : \"warning\"}\r\n            >\r\n                {message || 'Заполните все поля!'}\r\n            </Alert>\r\n        </Snackbar>\r\n    )\r\n}\r\n\r\nexport default CustomAlert\r\n","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\r\nimport {loginThunk, refreshThunk, registrationThunk} from \"../thunks/auth-thunk\";\r\n\r\ninterface InitialState {\r\n    isAuth: boolean\r\n    error: string | null\r\n    isLoading: boolean\r\n}\r\n\r\nconst initialState: InitialState = {\r\n    isAuth: false,\r\n    error: null,\r\n    isLoading: true\r\n}\r\n\r\nconst AuthSlice = createSlice({\r\n    name: 'auth',\r\n    initialState,\r\n    reducers: {\r\n        setAuth(state, action: PayloadAction<boolean>) {\r\n            state.isAuth = action.payload\r\n            state.error = null\r\n        },\r\n        registration(state) {\r\n            localStorage.setItem('auth', 'true')\r\n            state.isAuth = true\r\n        },\r\n        clearError(state) {\r\n            state.error = null\r\n        },\r\n        setLoading(state, action: PayloadAction<boolean>) {\r\n            state.isLoading = action.payload\r\n        }\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder.addCase(loginThunk.fulfilled, (state, action) => {\r\n            if(action.payload.status === 200) {\r\n                state.isAuth = true\r\n                state.error = null\r\n\r\n                localStorage.setItem('jwt', action.payload.data.jwt)\r\n            } else {\r\n                state.isAuth = false\r\n                state.error = action.payload.data.message\r\n            }\r\n        })\r\n        builder.addCase(registrationThunk.fulfilled, (state, action) => {\r\n            if(action.payload.status === 200) {\r\n                state.isAuth = true\r\n                state.error = null\r\n\r\n                localStorage.setItem('jwt', action.payload.data.jwt)\r\n            } else {\r\n                state.isAuth = false\r\n                state.error = action.payload.data.message\r\n            }\r\n        })\r\n        builder.addCase(refreshThunk.fulfilled, (state, action) => {\r\n            if(action.payload.status === 200) {\r\n                state.isAuth = true\r\n                state.error = null\r\n                state.isLoading = false\r\n\r\n                localStorage.setItem('jwt', action.payload.data.jwt)\r\n            } else {\r\n                state.isAuth = false\r\n                state.error = action.payload.data.message\r\n            }\r\n        })\r\n    }\r\n})\r\n\r\nexport const {clearError, setLoading} = AuthSlice.actions\r\nexport default AuthSlice.reducer\r\n","import * as React from 'react';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Link from '@mui/material/Link';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport {FC, useEffect, useState} from \"react\";\r\nimport Copyright from \"../../components/copyright\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {loginThunk} from \"../../store/thunks/auth-thunk\";\r\nimport {AuthSelector} from \"../../store/selectors/selectors\";\r\nimport CustomAlert from \"../../components/alert\";\r\nimport {clearError} from \"../../store/slices/auth-slice\";\r\n\r\n\r\nconst SignIn: FC = () => {\r\n    const {error} = useSelector(AuthSelector)\r\n    const [open, setOpen] = useState(false)\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n\r\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        const data = new FormData(event.currentTarget);\r\n        // @ts-ignore\r\n        dispatch(loginThunk({\r\n            email: data.get('email') as string,\r\n            password: data.get('password') as string,\r\n        }))\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (error) {\r\n            setOpen(true)\r\n        }\r\n    }, [error])\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            dispatch(clearError())\r\n        }\r\n    }, [open])\r\n\r\n    return (\r\n        <>\r\n            {open && <CustomAlert message={error} open={open} setOpen={setOpen}/>}\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                <CssBaseline/>\r\n                <Box\r\n                    sx={{\r\n                        marginTop: 8,\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        alignItems: 'center',\r\n                    }}\r\n                >\r\n                    <Avatar sx={{m: 1, bgcolor: 'secondary.main'}}>\r\n                        <LockOutlinedIcon/>\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Вход в аккаунт\r\n                    </Typography>\r\n                    <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{mt: 1}}>\r\n                        <TextField\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"email\"\r\n                            label=\"Email\"\r\n                            name=\"email\"\r\n                            autoComplete=\"email\"\r\n                            autoFocus\r\n                        />\r\n                        <TextField\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            name=\"password\"\r\n                            label=\"Пароль\"\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            autoComplete=\"current-password\"\r\n                        />\r\n                        <FormControlLabel\r\n                            control={<Checkbox value=\"remember\" color=\"primary\"/>}\r\n                            label=\"Запомнить меня\"\r\n                        />\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            sx={{mt: 3, mb: 2}}\r\n                        >\r\n                            Войти в аккаунт\r\n                        </Button>\r\n                        <Grid container justifyContent=\"center\">\r\n                            <Grid item>\r\n                                <Link onClick={() => navigate('/sign-up')} variant=\"body2\">\r\n                                    {\"Нет аккаунта? Регистрация\"}\r\n                                </Link>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Box>\r\n                </Box>\r\n                <Copyright sx={{mt: 8, mb: 4}}/>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SignIn\r\n","import * as React from 'react';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport Copyright from \"../../components/copyright\";\r\nimport {FC, useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport CustomAlert from \"../../components/alert\";\r\nimport {Link} from '@mui/material';\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {registrationThunk} from \"../../store/thunks/auth-thunk\";\r\nimport {AuthSelector} from \"../../store/selectors/selectors\";\r\nimport {clearError} from \"../../store/slices/auth-slice\";\r\n\r\n\r\nconst SignUp: FC = () => {\r\n    const {error} = useSelector(AuthSelector)\r\n    const navigate = useNavigate()\r\n    const dispatch = useDispatch()\r\n    const [open, setOpen] = useState(false)\r\n    const [accept, setAccept] = useState(false)\r\n\r\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        const data = new FormData(event.currentTarget);\r\n        if (\r\n            data.get('email') &&\r\n            data.get('password') &&\r\n            data.get('firstName') &&\r\n            data.get('lastName') &&\r\n            data.get('company') &&\r\n            accept\r\n        ) {\r\n            // @ts-ignore\r\n            dispatch(registrationThunk({\r\n                email: data.get('email') as string,\r\n                password: data.get('password') as string,\r\n                firstName: data.get('firstName') as string,\r\n                lastName: data.get('lastName') as string,\r\n                company: data.get('company') as string,\r\n            }))\r\n        } else {\r\n            setOpen(true)\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (error) {\r\n            setOpen(true)\r\n        }\r\n    }, [error])\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            dispatch(clearError())\r\n        }\r\n    }, [open])\r\n\r\n    return (\r\n        <>\r\n            {open && <CustomAlert message={error} open={open} setOpen={setOpen}/>}\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                <CssBaseline/>\r\n                <Box\r\n                    sx={{\r\n                        marginTop: 8,\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        alignItems: 'center',\r\n                    }}\r\n                >\r\n                    <Avatar sx={{m: 1, bgcolor: 'secondary.main'}}>\r\n                        <LockOutlinedIcon/>\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Регистрация\r\n                    </Typography>\r\n                    <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{mt: 3}}>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    autoComplete=\"given-name\"\r\n                                    name=\"firstName\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"firstName\"\r\n                                    label=\"Имя\"\r\n                                    autoFocus\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"lastName\"\r\n                                    label=\"Фамилия\"\r\n                                    name=\"lastName\"\r\n                                    autoComplete=\"family-name\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"company\"\r\n                                    label=\"Название компании\"\r\n                                    name=\"company\"\r\n                                    autoComplete=\"company\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"email\"\r\n                                    label=\"Email\"\r\n                                    name=\"email\"\r\n                                    autoComplete=\"email\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    required\r\n                                    fullWidth\r\n                                    name=\"password\"\r\n                                    label=\"Пароль\"\r\n                                    type=\"password\"\r\n                                    id=\"password\"\r\n                                    autoComplete=\"new-password\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <FormControlLabel\r\n                                    checked={accept}\r\n                                    onChange={() => setAccept(accept => !accept)}\r\n                                    control={<Checkbox value=\"allowExtraEmails\" color=\"primary\"/>}\r\n                                    label=\"Я соглашаюсь с условиями обработки персональных данных\"\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            sx={{mt: 3, mb: 2}}\r\n                        >\r\n                            Зарегистрироваться\r\n                        </Button>\r\n                        <Grid container justifyContent=\"center\">\r\n                            <Grid item>\r\n                                <Link onClick={() => navigate('/sign-in')} variant=\"body2\">\r\n                                    Уже есть аккаунт? Вход\r\n                                </Link>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Box>\r\n                </Box>\r\n                <Copyright sx={{mt: 5}}/>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SignUp\r\n","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\r\nimport {Dayjs} from \"dayjs\";\r\n\r\ninterface State {\r\n    step: number\r\n    from: string,\r\n    type: string\r\n    ready: string\r\n    readyDate: null | Dayjs\r\n    readyTime: null | Dayjs\r\n    pickUpDate: null | Dayjs\r\n    orderNumber: string\r\n    powerOfAttorney: string\r\n    supplierOrderNumber: string\r\n    companyName: string\r\n    fromLastName: string\r\n    fromFirstName: string\r\n    fromPhone: string\r\n    fromExtraPhone: string\r\n    fromAddress: string\r\n    fromExtraAddress: string\r\n    fromCompanyName: string\r\n    fromPickUpTimeMin: null | Dayjs\r\n    fromPickUpTimeMax: null | Dayjs\r\n    fromDocuments: string\r\n    nature: string\r\n    natureDescription: string\r\n    needPass: string\r\n    call: string\r\n\r\n    to: string\r\n    toLastName: string\r\n    toFirstName: string\r\n    toPhone: string\r\n    toExtraPhone: string\r\n    toAddress: string\r\n    toExtraAddress: string\r\n    toCompanyName: string\r\n    toPickUpTimeMin: null | Dayjs\r\n    toPickUpTimeMax: null | Dayjs\r\n    toDocuments: string\r\n}\r\n\r\nconst initialState: State = {\r\n    step: 0,\r\n    from: '',\r\n    type: '',\r\n    ready: '',\r\n    readyDate: null,\r\n    readyTime: null,\r\n    pickUpDate: null,\r\n    orderNumber: '',\r\n    powerOfAttorney: '',\r\n    supplierOrderNumber: '',\r\n    companyName: '',\r\n    fromLastName: '',\r\n    fromFirstName: '',\r\n    fromPhone: '',\r\n    fromExtraPhone: '',\r\n    fromAddress: '',\r\n    fromExtraAddress: '',\r\n    fromCompanyName: '',\r\n    fromPickUpTimeMin: null,\r\n    fromPickUpTimeMax: null,\r\n    fromDocuments: '',\r\n    nature: '',\r\n    natureDescription: '',\r\n    needPass: '',\r\n    call: '',\r\n\r\n    to: '',\r\n    toLastName: '',\r\n    toFirstName: '',\r\n    toPhone: '',\r\n    toExtraPhone: '',\r\n    toAddress: '',\r\n    toExtraAddress: '',\r\n    toCompanyName: '',\r\n    toPickUpTimeMin: null,\r\n    toPickUpTimeMax: null,\r\n    toDocuments: '',\r\n}\r\n\r\nconst PickUpSlice = createSlice({\r\n    name: 'receipt',\r\n    initialState,\r\n    reducers: {\r\n        incrementStep(state) {\r\n            ++state.step\r\n        },\r\n        decrementStep(state) {\r\n            --state.step\r\n        },\r\n        setFromData(state, action: PayloadAction<string>) {\r\n            ++state.step\r\n            state.from = action.payload\r\n        },\r\n        setTypeData(state, action: PayloadAction<string>) {\r\n            ++state.step\r\n            state.type = action.payload\r\n        },\r\n        setDateData(state, action: PayloadAction<{\r\n            pickUpDate: Dayjs | null,\r\n            orderNumber: string,\r\n            powerOfAttorney: string,\r\n            companyName: string,\r\n            supplierOrderNumber: string,\r\n            ready: string,\r\n            readyDate: null | Dayjs\r\n            readyTime: null | Dayjs\r\n        }>) {\r\n            ++state.step\r\n            state.pickUpDate = action.payload.pickUpDate\r\n            state.orderNumber = action.payload.orderNumber\r\n            state.powerOfAttorney = action.payload.powerOfAttorney\r\n            state.companyName = action.payload.companyName\r\n            state.supplierOrderNumber = action.payload.supplierOrderNumber\r\n            state.ready = action.payload.ready\r\n            state.readyDate = action.payload.readyDate\r\n            state.readyTime = action.payload.readyTime\r\n        },\r\n        setFromInfoData(state, action: PayloadAction<{\r\n            fromLastName: string\r\n            fromFirstName: string\r\n            fromPhone: string\r\n            fromExtraPhone: string\r\n            fromAddress: string\r\n            fromExtraAddress: string\r\n            fromCompanyName: string\r\n            fromPickUpTimeMin: null | Dayjs\r\n            fromPickUpTimeMax: null | Dayjs\r\n            fromDocuments: string\r\n        }>) {\r\n            ++state.step\r\n            state.fromLastName = action.payload.fromLastName\r\n            state.fromFirstName = action.payload.fromFirstName\r\n            state.fromPhone = action.payload.fromPhone\r\n            state.fromExtraPhone = action.payload.fromExtraPhone\r\n            state.fromAddress = action.payload.fromAddress\r\n            state.fromExtraAddress = action.payload.fromExtraAddress\r\n            state.fromCompanyName = action.payload.fromCompanyName\r\n            state.fromPickUpTimeMin = action.payload.fromPickUpTimeMin\r\n            state.fromPickUpTimeMax = action.payload.fromPickUpTimeMax\r\n            state.fromDocuments = action.payload.fromDocuments\r\n        },\r\n        setNatureData(state, action: PayloadAction<{\r\n            nature: string\r\n            natureDescription: string\r\n        }>) {\r\n            ++state.step\r\n            state.nature = action.payload.nature\r\n            state.natureDescription = action.payload.natureDescription\r\n        },\r\n        setPassData(state, action: PayloadAction<{ needPass: string }>) {\r\n            ++state.step\r\n            state.needPass = action.payload.needPass\r\n        },\r\n        setCallData(state, action: PayloadAction<{ call: string }>) {\r\n            ++state.step\r\n            state.call = action.payload.call\r\n        },\r\n        setToInfoData(state, action: PayloadAction<{\r\n            to: string\r\n            toLastName: string\r\n            toFirstName: string\r\n            toPhone: string\r\n            toExtraPhone: string\r\n            toAddress: string\r\n            toExtraAddress: string\r\n            toCompanyName: string\r\n            toPickUpTimeMin: null | Dayjs\r\n            toPickUpTimeMax: null | Dayjs\r\n            toDocuments: string\r\n        }>) {\r\n            state.to = action.payload.to\r\n            state.toLastName = action.payload.toLastName\r\n            state.toFirstName = action.payload.toFirstName\r\n            state.toPhone = action.payload.toPhone\r\n            state.toExtraPhone = action.payload.toExtraPhone\r\n            state.toAddress = action.payload.toAddress\r\n            state.toExtraAddress = action.payload.toExtraAddress\r\n            state.toCompanyName = action.payload.toCompanyName\r\n            state.toPickUpTimeMin = action.payload.toPickUpTimeMin\r\n            state.toPickUpTimeMax = action.payload.toPickUpTimeMax\r\n            state.toDocuments = action.payload.toDocuments\r\n        }\r\n    }\r\n})\r\n\r\nexport const {\r\n    incrementStep,\r\n    decrementStep,\r\n    setFromData,\r\n    setTypeData,\r\n    setDateData,\r\n    setFromInfoData,\r\n    setNatureData,\r\n    setPassData,\r\n    setCallData,\r\n    setToInfoData\r\n} = PickUpSlice.actions\r\nexport default PickUpSlice.reducer\r\n","import {Box, Button, RadioGroup, Typography, Radio, FormControlLabel} from '@mui/material'\r\nimport React, {FC, useState} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {PickUpSelector} from \"../../../store/selectors/selectors\";\r\nimport {AppDispatch} from \"../../../store/store\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {setFromData} from \"../../../store/slices/pick-up-slice\";\r\nimport CustomAlert from \"../../../components/alert\";\r\n\r\nconst From: FC = () => {\r\n    const [open, setOpen] = useState(false)\r\n    const {from} = useSelector(PickUpSelector)\r\n    const dispatch = useDispatch<AppDispatch>()\r\n    const navigate = useNavigate()\r\n\r\n    const handleBack = () => {\r\n        navigate('/choose')\r\n    }\r\n\r\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        const data = new FormData(event.currentTarget);\r\n        const from = data.get('from') as string\r\n\r\n        if (from) {\r\n            dispatch(setFromData(from))\r\n        } else {\r\n            setOpen(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CustomAlert open={open} setOpen={setOpen}/>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Забираем от:\r\n            </Typography>\r\n            <Box component=\"form\" onSubmit={handleSubmit}>\r\n                <RadioGroup\r\n                    aria-labelledby=\"pick-up-from\"\r\n                    name=\"radio-buttons-group\"\r\n                    defaultValue={from}\r\n                >\r\n                    <FormControlLabel name='from' value=\"подрядчик\" control={<Radio/>} label=\"Подрядчика\"/>\r\n                    <FormControlLabel name='from' value=\"поставщик\" control={<Radio/>} label=\"Поставщика\"/>\r\n                </RadioGroup>\r\n                <Box sx={{display: 'flex', justifyContent: 'space-between', mt: 3}}>\r\n                    <Button onClick={handleBack}>\r\n                        Назад\r\n                    </Button>\r\n                    <Button type=\"submit\" variant=\"contained\">\r\n                        Далее\r\n                    </Button>\r\n                </Box>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default From\r\n","import {Box, Button, RadioGroup, Typography, Radio, FormControlLabel} from '@mui/material'\r\nimport React, {FC, useState} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {PickUpSelector} from \"../../../store/selectors/selectors\";\r\nimport {AppDispatch} from \"../../../store/store\";\r\nimport {decrementStep, setTypeData} from \"../../../store/slices/pick-up-slice\";\r\nimport CustomAlert from \"../../../components/alert\";\r\n\r\nconst Type: FC = () => {\r\n    const [open, setOpen] = useState(false)\r\n    const {type} = useSelector(PickUpSelector)\r\n    const dispatch = useDispatch<AppDispatch>()\r\n\r\n    const handleBack = () => {\r\n        dispatch(decrementStep())\r\n    }\r\n\r\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        const data = new FormData(event.currentTarget);\r\n        const type = data.get('type') as string\r\n\r\n        if (type) {\r\n            dispatch(setTypeData(type))\r\n        } else {\r\n            setOpen(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CustomAlert open={open} setOpen={setOpen}/>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Выберите вид услуги:\r\n            </Typography>\r\n            <Box component=\"form\" onSubmit={handleSubmit}>\r\n                <RadioGroup\r\n                    aria-labelledby=\"pick-up-type\"\r\n                    name=\"radio-buttons-group\"\r\n                    defaultValue={type}\r\n                >\r\n                    <FormControlLabel name=\"type\" value=\"пеший\" control={<Radio/>} label=\"Пеший\"/>\r\n                    <FormControlLabel name=\"type\" value=\"авто\" control={<Radio/>} label=\"Авто\"/>\r\n                </RadioGroup>\r\n                <Box sx={{display: 'flex', justifyContent: 'space-between', mt: 3}}>\r\n                    <Button onClick={handleBack}>\r\n                        Назад\r\n                    </Button>\r\n                    <Button variant=\"contained\" type=\"submit\">\r\n                        Далее\r\n                    </Button>\r\n                </Box>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Type\r\n","import {\r\n    Box,\r\n    Button,\r\n    Typography,\r\n    Grid,\r\n    TextField,\r\n    FormControlLabel,\r\n    Radio,\r\n    RadioGroup\r\n} from '@mui/material'\r\nimport React, {FC, useState} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {PickUpSelector} from \"../../../store/selectors/selectors\";\r\nimport {AppDispatch} from \"../../../store/store\";\r\nimport {decrementStep, setDateData,} from \"../../../store/slices/pick-up-slice\";\r\nimport {AdapterDayjs} from '@mui/x-date-pickers/AdapterDayjs';\r\nimport {LocalizationProvider} from '@mui/x-date-pickers/LocalizationProvider';\r\nimport {DatePicker} from '@mui/x-date-pickers/DatePicker';\r\nimport 'dayjs/locale/ru';\r\nimport CustomAlert from \"../../../components/alert\";\r\nimport dayjs, {Dayjs} from \"dayjs\";\r\nimport {TimePicker} from \"@mui/x-date-pickers\";\r\n\r\nconst Type: FC = () => {\r\n    const {\r\n        ready: readyStore,\r\n        readyDate: readyDateStore,\r\n        readyTime: readyTimeStore,\r\n        pickUpDate,\r\n        orderNumber,\r\n        powerOfAttorney,\r\n        companyName,\r\n        supplierOrderNumber\r\n    } = useSelector(PickUpSelector)\r\n    const dispatch = useDispatch<AppDispatch>()\r\n\r\n    const [open, setOpen] = useState(false)\r\n    const [date, setDate] = useState<Dayjs | null>(pickUpDate)\r\n\r\n    const [openPicker, setOpenPicker] = useState(false)\r\n    const [openReadyPicker, setOpenReadyPicker] = useState(false)\r\n\r\n    const [ready, setReady] = useState(readyStore)\r\n    const [power, setPower] = useState(powerOfAttorney)\r\n\r\n    const [readyDate, setReadyDate] = useState<Dayjs | null>(readyDateStore)\r\n    const [readyTime, setReadyTime] = useState<Dayjs | null>(readyTimeStore)\r\n\r\n    const handleBack = () => {\r\n        dispatch(decrementStep())\r\n    }\r\n\r\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        const data = new FormData(event.currentTarget);\r\n        const orderNumber = data.get('orderNumber') as string\r\n        const companyName = data.get('companyName') as string\r\n        const supplierOrderNumber = data.get('supplierOrderNumber') as string\r\n\r\n        if (\r\n            date && orderNumber && companyName && supplierOrderNumber && powerOfAttorney &&\r\n            ((ready === 'заказ не готов' && readyDate && readyTime) || ready === 'заказ готов')\r\n        ) {\r\n            dispatch(setDateData({\r\n                pickUpDate: date,\r\n                orderNumber,\r\n                companyName,\r\n                supplierOrderNumber,\r\n                ready,\r\n                readyDate,\r\n                readyTime,\r\n                powerOfAttorney: power\r\n            }))\r\n        } else {\r\n            setOpen(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CustomAlert open={open} setOpen={setOpen}/>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Укажите следующие данные:\r\n            </Typography>\r\n            <Box component=\"form\" onSubmit={handleSubmit}>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12}>\r\n                        <LocalizationProvider\r\n                            dateAdapter={AdapterDayjs}\r\n                            adapterLocale='ru'\r\n                        >\r\n                            <DatePicker\r\n                                open={openPicker}\r\n                                onOpen={() => setOpenPicker(true)}\r\n                                onClose={() => setOpenPicker(false)}\r\n                                minDate={dayjs().add(1, 'day')}\r\n                                label=\"Дата забора\"\r\n                                value={date}\r\n                                onChange={e => setDate(e)}\r\n                                renderInput={(params) =>\r\n                                    <TextField\r\n                                        focused={false}\r\n                                        onClick={() => setOpenPicker(true)}\r\n                                        onKeyDown={e => e.preventDefault()}\r\n                                        fullWidth\r\n                                        {...params}\r\n                                    />}\r\n                            />\r\n                        </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            id=\"supplierOrderNumber\"\r\n                            name=\"supplierOrderNumber\"\r\n                            label=\"Номер заказа или счета у поставщика/подрядчика\"\r\n                            fullWidth\r\n                            autoComplete=\"supplierOrderNumber\"\r\n                            defaultValue={supplierOrderNumber}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            required\r\n                            id=\"orderNumber\"\r\n                            name=\"orderNumber\"\r\n                            label=\"Номер внутреннего заказа или счета\"\r\n                            fullWidth\r\n                            autoComplete=\"orderNumber\"\r\n                            defaultValue={orderNumber}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <RadioGroup\r\n                            aria-labelledby=\"pick-up-from\"\r\n                            name=\"radio-buttons-group\"\r\n                            value={ready}\r\n                            onChange={e => setReady(e.target.value)}\r\n                        >\r\n                            <FormControlLabel name='ready' value=\"заказ готов\" control={<Radio/>} label=\"Заказ готов\"/>\r\n                            <FormControlLabel name='ready' value=\"заказ не готов\" control={<Radio/>}\r\n                                              label=\"Заказ не готов\"/>\r\n                        </RadioGroup>\r\n                    </Grid>\r\n\r\n                    {\r\n                        ready === \"заказ не готов\" &&\r\n                        <Grid item xs={12}>\r\n                            <Grid container spacing={3}>\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <LocalizationProvider\r\n                                        dateAdapter={AdapterDayjs}\r\n                                        adapterLocale='ru'\r\n                                    >\r\n                                        <DatePicker\r\n                                            open={openReadyPicker}\r\n                                            onOpen={() => setOpenReadyPicker(true)}\r\n                                            onClose={() => setOpenReadyPicker(false)}\r\n                                            minDate={dayjs()}\r\n                                            label=\"Дата готовности\"\r\n                                            value={readyDate}\r\n                                            onChange={e => setReadyDate(e)}\r\n                                            renderInput={(params) =>\r\n                                                <TextField\r\n                                                    focused={false}\r\n                                                    onClick={() => setOpenReadyPicker(true)}\r\n                                                    onKeyDown={e => e.preventDefault()}\r\n                                                    fullWidth\r\n                                                    {...params}\r\n                                                />\r\n                                            }\r\n                                        />\r\n                                    </LocalizationProvider>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <LocalizationProvider\r\n                                        dateAdapter={AdapterDayjs}\r\n                                        adapterLocale='ru'\r\n                                    >\r\n                                        <TimePicker\r\n                                            label=\"Время готовности\"\r\n                                            value={readyTime}\r\n                                            onChange={(newValue) => setReadyTime(newValue)}\r\n                                            renderInput={(params) => <TextField fullWidth {...params} />}\r\n                                        />\r\n                                    </LocalizationProvider>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    }\r\n\r\n\r\n                    <Grid item xs={12}>\r\n                        <RadioGroup\r\n                            aria-labelledby=\"powerOfAttorney\"\r\n                            name=\"powerOfAttorney-radio-buttons-group\"\r\n                            value={power}\r\n                            onChange={e => setPower(e.target.value)}\r\n                        >\r\n                            <FormControlLabel name='powerOfAttorney' value=\"Есть договоренность\" control={<Radio/>}\r\n                                              label=\"Есть договоренность\"/>\r\n                            <FormControlLabel name='powerOfAttorney' value=\"Нет договоренности\" control={<Radio/>}\r\n                                              label=\"Нет договоренности\"/>\r\n                        </RadioGroup>\r\n                    </Grid>\r\n\r\n                    {\r\n                        power === 'Есть договоренность' &&\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                id=\"companyName\"\r\n                                name=\"companyName\"\r\n                                label=\"От какой организации договоренность\"\r\n                                fullWidth\r\n                                autoComplete=\"companyName\"\r\n                                defaultValue={companyName}\r\n                            />\r\n                        </Grid>\r\n                    }\r\n                </Grid>\r\n                <Box sx={{display: 'flex', justifyContent: 'space-between', mt: 3}}>\r\n                    <Button onClick={handleBack}>\r\n                        Назад\r\n                    </Button>\r\n                    <Button variant=\"contained\" type=\"submit\">\r\n                        Далее\r\n                    </Button>\r\n                </Box>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Type\r\n","import {Box, Button, Typography, Grid, TextField, FormControlLabel} from '@mui/material'\r\nimport React, {FC, useState} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {PickUpSelector} from \"../../../store/selectors/selectors\";\r\nimport {AppDispatch} from \"../../../store/store\";\r\nimport {LocalizationProvider, TimePicker} from '@mui/x-date-pickers';\r\nimport {AdapterDayjs} from '@mui/x-date-pickers/AdapterDayjs';\r\nimport 'dayjs/locale/ru';\r\nimport {Dayjs} from 'dayjs';\r\nimport {decrementStep, setFromInfoData} from \"../../../store/slices/pick-up-slice\";\r\nimport CustomAlert from \"../../../components/alert\";\r\n\r\nconst FromInfo: FC = () => {\r\n    const {\r\n        fromLastName,\r\n        fromFirstName,\r\n        fromPhone,\r\n        fromExtraPhone,\r\n        fromAddress,\r\n        fromExtraAddress,\r\n        fromCompanyName,\r\n        fromPickUpTimeMin: fromPickUpTimeMinStore,\r\n        fromPickUpTimeMax: fromPickUpTimeMaxStore,\r\n        fromDocuments,\r\n    } = useSelector(PickUpSelector)\r\n    const dispatch = useDispatch<AppDispatch>()\r\n\r\n    const [fromPickUpTimeMin, setFromPickUpTimeMin] = React.useState<Dayjs | null>(fromPickUpTimeMinStore);\r\n    const [fromPickUpTimeMax, setFromPickUpTimeMax] = React.useState<Dayjs | null>(fromPickUpTimeMaxStore);\r\n    const [open, setOpen] = useState(false)\r\n\r\n    const handleBack = () => {\r\n        dispatch(decrementStep())\r\n    }\r\n\r\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        const data = new FormData(event.currentTarget);\r\n        const lastName = data.get('lastName') as string\r\n        const firstName = data.get('firstName') as string\r\n        const phoneNumber = data.get('phoneNumber') as string\r\n        const extraPhoneNumber = data.get('extraPhoneNumber') as string\r\n        const address = data.get('address') as string\r\n        const extraAddress = data.get('extraAddress') as string\r\n        const documents = data.get('documents') as string\r\n        const company = data.get('company') as string\r\n\r\n        if (lastName && firstName && phoneNumber && address && company && fromPickUpTimeMin && fromPickUpTimeMax) {\r\n            dispatch(setFromInfoData({\r\n                fromLastName: lastName,\r\n                fromFirstName: firstName,\r\n                fromPhone: phoneNumber,\r\n                fromExtraPhone: extraPhoneNumber,\r\n                fromAddress: address,\r\n                fromExtraAddress: extraAddress,\r\n                fromCompanyName: company,\r\n                fromPickUpTimeMin,\r\n                fromPickUpTimeMax,\r\n                fromDocuments: documents\r\n            }))\r\n        } else {\r\n            setOpen(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CustomAlert open={open} setOpen={setOpen}/>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Укажите данные от кого забирать:\r\n            </Typography>\r\n            <Box component=\"form\" onSubmit={handleSubmit}>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            required\r\n                            id=\"company\"\r\n                            name=\"company\"\r\n                            label=\"Название организации\"\r\n                            fullWidth\r\n                            autoComplete=\"organization\"\r\n                            defaultValue={fromCompanyName}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            required\r\n                            id=\"address\"\r\n                            name=\"address\"\r\n                            label=\"Адрес\"\r\n                            fullWidth\r\n                            autoComplete=\"street-address\"\r\n                            defaultValue={fromAddress}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            id=\"extraAddress\"\r\n                            name=\"extraAddress\"\r\n                            label=\"Доп. адрес\"\r\n                            fullWidth\r\n                            autoComplete=\"street-address\"\r\n                            defaultValue={fromExtraAddress}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <LocalizationProvider\r\n                            dateAdapter={AdapterDayjs}\r\n                            adapterLocale='ru'\r\n                        >\r\n                            <TimePicker\r\n                                label=\"Время забора с *\"\r\n                                value={fromPickUpTimeMin}\r\n                                onChange={(newValue) => setFromPickUpTimeMin(newValue)}\r\n                                renderInput={(params) => <TextField fullWidth {...params} />}\r\n                            />\r\n                        </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <LocalizationProvider\r\n                            dateAdapter={AdapterDayjs}\r\n                            adapterLocale='ru'\r\n                        >\r\n                            <TimePicker\r\n                                label=\"Время забора до *\"\r\n                                value={fromPickUpTimeMax}\r\n                                onChange={(newValue) => setFromPickUpTimeMax(newValue)}\r\n                                renderInput={(params) => <TextField fullWidth {...params} />}\r\n                            />\r\n                        </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            required\r\n                            id=\"lastName\"\r\n                            name=\"lastName\"\r\n                            label=\"Фамилия\"\r\n                            fullWidth\r\n                            autoComplete=\"family-name\"\r\n                            defaultValue={fromLastName}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            required\r\n                            id=\"firstName\"\r\n                            name=\"firstName\"\r\n                            label=\"Имя\"\r\n                            fullWidth\r\n                            autoComplete=\"given-name\"\r\n                            defaultValue={fromFirstName}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            required\r\n                            id=\"phoneNumber\"\r\n                            name=\"phoneNumber\"\r\n                            label=\"Номер телефона\"\r\n                            fullWidth\r\n                            autoComplete=\"tel\"\r\n                            type=\"phone\"\r\n                            defaultValue={fromPhone}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            id=\"extraPhoneNumber\"\r\n                            name=\"extraPhoneNumber\"\r\n                            label=\"Доп. номер телефона\"\r\n                            fullWidth\r\n                            autoComplete=\"tel\"\r\n                            type=\"phone\"\r\n                            defaultValue={fromExtraPhone}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            id=\"documents\"\r\n                            name=\"documents\"\r\n                            label=\"Комментарий\"\r\n                            fullWidth\r\n                            autoComplete=\"documents\"\r\n                            defaultValue={fromDocuments}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                <Box sx={{display: 'flex', justifyContent: 'space-between', mt: 3}}>\r\n                    <Button onClick={handleBack}>\r\n                        Назад\r\n                    </Button>\r\n                    <Button variant=\"contained\" type=\"submit\">\r\n                        Далее\r\n                    </Button>\r\n                </Box>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FromInfo\r\n","import React, {FC, useState} from 'react'\r\nimport {\r\n    Box,\r\n    Button,\r\n    FormControlLabel,\r\n    Radio,\r\n    RadioGroup,\r\n    TextField,\r\n    Typography\r\n} from \"@mui/material\";\r\nimport {decrementStep, setNatureData} from \"../../../store/slices/pick-up-slice\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppDispatch} from \"../../../store/store\";\r\nimport {PickUpSelector} from \"../../../store/selectors/selectors\";\r\nimport CustomAlert from \"../../../components/alert\";\r\n\r\nconst Nature: FC = () => {\r\n    const {nature, natureDescription} = useSelector(PickUpSelector)\r\n    const dispatch = useDispatch<AppDispatch>()\r\n\r\n    const [open, setOpen] = useState(false)\r\n\r\n    const handleBack = () => {\r\n        dispatch(decrementStep())\r\n    }\r\n\r\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        const data = new FormData(event.currentTarget);\r\n        const nature = data.get('nature') as string\r\n        const description = data.get('description') as string\r\n\r\n        if (nature && description) {\r\n            dispatch(setNatureData({nature, natureDescription: description}))\r\n        } else {\r\n            setOpen(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CustomAlert open={open} setOpen={setOpen}/>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Укажите тип груза:\r\n            </Typography>\r\n            <Box component=\"form\" onSubmit={handleSubmit}>\r\n                <RadioGroup\r\n                    aria-labelledby=\"pick-up-nature\"\r\n                    name=\"radio-buttons-group\"\r\n                    defaultValue={nature}\r\n                >\r\n                    <FormControlLabel name=\"nature\" value=\"коробка\" control={<Radio/>} label=\"Коробка\"/>\r\n                    <FormControlLabel name=\"nature\" value=\"пачка\" control={<Radio/>} label=\"Пачка\"/>\r\n                    <FormControlLabel name=\"nature\" value=\"другое\" control={<Radio/>} label=\"Другое\"/>\r\n                </RadioGroup>\r\n                <TextField\r\n                    defaultValue={natureDescription}\r\n                    name=\"description\"\r\n                    required\r\n                    id=\"outlined-multiline-flexible\"\r\n                    label=\"Описание\"\r\n                    multiline\r\n                    maxRows={4}\r\n                    placeholder=\"ВАЖНО: После выбора Коробка и Пачка, необходимо написать количество и вес. При выборе ДРУГОЕ опишите характер груза (например: Баннер длинной 2,30м; Паллет 400кг и т.д.)\"\r\n                    fullWidth\r\n                />\r\n                <Box sx={{display: 'flex', justifyContent: 'space-between', mt: 3}}>\r\n                    <Button onClick={handleBack}>\r\n                        Назад\r\n                    </Button>\r\n                    <Button variant=\"contained\" type=\"submit\">\r\n                        Далее\r\n                    </Button>\r\n                </Box>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Nature\r\n","import React, {useState} from 'react'\r\nimport {Box, Button, FormControlLabel, Radio, RadioGroup, Typography} from \"@mui/material\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppDispatch} from \"../../../store/store\";\r\nimport {decrementStep, setPassData} from \"../../../store/slices/pick-up-slice\";\r\nimport {PickUpSelector} from \"../../../store/selectors/selectors\";\r\nimport CustomAlert from \"../../../components/alert\";\r\n\r\nconst Pass = () => {\r\n    const {needPass} = useSelector(PickUpSelector)\r\n    const dispatch = useDispatch<AppDispatch>()\r\n\r\n    const [open, setOpen] = useState(false)\r\n\r\n    const handleBack = () => {\r\n        dispatch(decrementStep())\r\n    }\r\n\r\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        const data = new FormData(event.currentTarget);\r\n        const pass = data.get('pass') as string\r\n\r\n        if (pass) {\r\n            dispatch(setPassData({needPass: pass}))\r\n        } else {\r\n            setOpen(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CustomAlert open={open} setOpen={setOpen}/>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Нужен ли пропуск:\r\n            </Typography>\r\n            <Box component=\"form\" onSubmit={handleSubmit}>\r\n                <RadioGroup\r\n                    aria-labelledby=\"pick-up-pass\"\r\n                    name=\"radio-buttons-group\"\r\n                    defaultValue={needPass}\r\n                >\r\n                    <FormControlLabel name=\"pass\" value=\"нужен\" control={<Radio/>} label=\"Пропуск нужен\"/>\r\n                    <FormControlLabel name=\"pass\" value=\"не нужен\" control={<Radio/>} label=\"Пропуск не нужен\"/>\r\n                </RadioGroup>\r\n                <Box sx={{display: 'flex', justifyContent: 'space-between', mt: 3}}>\r\n                    <Button onClick={handleBack}>\r\n                        Назад\r\n                    </Button>\r\n                    <Button variant=\"contained\" type=\"submit\">\r\n                        Далее\r\n                    </Button>\r\n                </Box>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Pass\r\n","import React, {FC, useState} from 'react'\r\nimport {Box, Button, FormControlLabel, Radio, RadioGroup, Typography} from \"@mui/material\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppDispatch} from \"../../../store/store\";\r\nimport {\r\n    decrementStep,\r\n    incrementStep,\r\n    setCallData,\r\n    setPassData\r\n} from \"../../../store/slices/pick-up-slice\";\r\nimport {PickUpSelector} from \"../../../store/selectors/selectors\";\r\nimport CustomAlert from \"../../../components/alert\";\r\n\r\nconst Call: FC = () => {\r\n    const {call} = useSelector(PickUpSelector)\r\n    const dispatch = useDispatch<AppDispatch>()\r\n\r\n    const [open, setOpen] = useState(false)\r\n\r\n    const handleBack = () => {\r\n        dispatch(decrementStep())\r\n    }\r\n\r\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        const data = new FormData(event.currentTarget);\r\n        const call = data.get('call') as string\r\n\r\n        if (call) {\r\n            dispatch(setCallData({call}))\r\n        } else {\r\n            setOpen(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CustomAlert open={open} setOpen={setOpen}/>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Нужно ли созвониться заранее:\r\n            </Typography>\r\n            <Box component=\"form\" onSubmit={handleSubmit}>\r\n                <RadioGroup\r\n                    aria-labelledby=\"pick-up-call\"\r\n                    name=\"radio-buttons-group\"\r\n                    defaultValue={call}\r\n                >\r\n                    <FormControlLabel name=\"call\" value=\"15 минут\" control={<Radio/>} label=\"Созвониться за 15 минут\"/>\r\n                    <FormControlLabel name=\"call\" value=\"30 минут\" control={<Radio/>} label=\"Созвониться за 30 минут\"/>\r\n                    <FormControlLabel name=\"call\" value=\"1 час\" control={<Radio/>} label=\"Созвониться за час\"/>\r\n                    <FormControlLabel name=\"call\" value=\"3 часа\" control={<Radio/>} label=\"Созвониться за 3 часа\"/>\r\n                    <FormControlLabel name=\"call\" value=\"не нужно\" control={<Radio/>} label=\"Созвониваться не нужно\"/>\r\n                </RadioGroup>\r\n                <Box sx={{display: 'flex', justifyContent: 'space-between', mt: 3}}>\r\n                    <Button onClick={handleBack}>\r\n                        Назад\r\n                    </Button>\r\n                    <Button variant=\"contained\" type=\"submit\">\r\n                        Далее\r\n                    </Button>\r\n                </Box>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Call\r\n","import React, {FC, useState} from 'react'\r\nimport {Box, Button, FormControlLabel, Grid, Radio, RadioGroup, TextField, Typography} from \"@mui/material\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppDispatch} from \"../../../store/store\";\r\nimport {decrementStep, setToInfoData} from \"../../../store/slices/pick-up-slice\";\r\nimport {LocalizationProvider, TimePicker} from \"@mui/x-date-pickers\";\r\nimport {AdapterDayjs} from \"@mui/x-date-pickers/AdapterDayjs\";\r\nimport {PickUpSelector} from \"../../../store/selectors/selectors\";\r\nimport {Dayjs} from \"dayjs\";\r\nimport CustomAlert from \"../../../components/alert\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nconst To: FC = () => {\r\n    const {\r\n        to: storeTo,\r\n        toLastName,\r\n        toFirstName,\r\n        toPhone,\r\n        toExtraPhone,\r\n        toAddress,\r\n        toExtraAddress,\r\n        toCompanyName,\r\n        toPickUpTimeMin: toPickUpTimeMinStore,\r\n        toPickUpTimeMax: toPickUpTimeMaxStore,\r\n        toDocuments,\r\n    } = useSelector(PickUpSelector)\r\n    const dispatch = useDispatch<AppDispatch>()\r\n\r\n    const [toPickUpTimeMin, setToPickUpTimeMin] = React.useState<Dayjs | null>(toPickUpTimeMinStore);\r\n    const [toPickUpTimeMax, setToPickUpTimeMax] = React.useState<Dayjs | null>(toPickUpTimeMaxStore);\r\n    const [open, setOpen] = useState(false)\r\n\r\n    const [to, setTo] = useState(storeTo)\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const handleBack = () => {\r\n        dispatch(decrementStep())\r\n    }\r\n\r\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        const data = new FormData(event.currentTarget);\r\n        const lastName = data.get('lastName') as string\r\n        const firstName = data.get('firstName') as string\r\n        const phoneNumber = data.get('phoneNumber') as string\r\n        const extraPhoneNumber = data.get('extraPhoneNumber') as string\r\n        const address = data.get('address') as string\r\n        const extraAddress = data.get('extraAddress') as string\r\n        const documents = data.get('documents') as string\r\n        const company = data.get('company') as string\r\n\r\n        if (to === 'Офис' ||\r\n            to && company && toPickUpTimeMin && toPickUpTimeMax && address && lastName && firstName && phoneNumber) {\r\n            dispatch(setToInfoData({\r\n                to,\r\n                toLastName: lastName,\r\n                toFirstName: firstName,\r\n                toPhone: phoneNumber,\r\n                toExtraPhone: extraPhoneNumber,\r\n                toAddress: address,\r\n                toExtraAddress: extraAddress,\r\n                toCompanyName: company,\r\n                toPickUpTimeMin,\r\n                toPickUpTimeMax,\r\n                toDocuments: documents\r\n            }))\r\n            navigate('/pick-up-check')\r\n        } else {\r\n            setOpen(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CustomAlert open={open} setOpen={setOpen}/>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Укажите адрес доставки:\r\n            </Typography>\r\n            <Box component=\"form\" onSubmit={handleSubmit}>\r\n                <RadioGroup\r\n                    aria-labelledby=\"pick-up-to\"\r\n                    name=\"radio-buttons-group\"\r\n                    value={to}\r\n                    onChange={e => setTo(e.target.value)}\r\n                >\r\n                    <FormControlLabel value=\"Офис\" control={<Radio/>} label=\"Офис\"/>\r\n                    <FormControlLabel value=\"Другое\" control={<Radio/>} label=\"Другое\"/>\r\n                </RadioGroup>\r\n                {to === 'Другое' &&\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                required\r\n                                id=\"company\"\r\n                                name=\"company\"\r\n                                label=\"Название организации\"\r\n                                fullWidth\r\n                                autoComplete=\"organization\"\r\n                                defaultValue={toCompanyName}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                required\r\n                                id=\"address\"\r\n                                name=\"address\"\r\n                                label=\"Адрес\"\r\n                                fullWidth\r\n                                autoComplete=\"street-address\"\r\n                                defaultValue={toAddress}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                id=\"extraAddress\"\r\n                                name=\"extraAddress\"\r\n                                label=\"Доп. адрес\"\r\n                                fullWidth\r\n                                autoComplete=\"street-address\"\r\n                                defaultValue={toExtraAddress}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <LocalizationProvider\r\n                                dateAdapter={AdapterDayjs}\r\n                                adapterLocale='ru'\r\n                            >\r\n                                <TimePicker\r\n                                    label=\"Время доставки с *\"\r\n                                    value={toPickUpTimeMin}\r\n                                    onChange={(newValue) => setToPickUpTimeMin(newValue)}\r\n                                    renderInput={(params) => <TextField fullWidth {...params} />}\r\n                                />\r\n                            </LocalizationProvider>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <LocalizationProvider\r\n                                dateAdapter={AdapterDayjs}\r\n                                adapterLocale='ru'\r\n                            >\r\n                                <TimePicker\r\n                                    label=\"Время доставки до *\"\r\n                                    value={toPickUpTimeMax}\r\n                                    onChange={(newValue) => setToPickUpTimeMax(newValue)}\r\n                                    renderInput={(params) => <TextField fullWidth {...params} />}\r\n                                />\r\n                            </LocalizationProvider>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                required\r\n                                id=\"lastName\"\r\n                                name=\"lastName\"\r\n                                label=\"Фамилия\"\r\n                                fullWidth\r\n                                autoComplete=\"family-name\"\r\n                                defaultValue={toLastName}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                required\r\n                                id=\"firstName\"\r\n                                name=\"firstName\"\r\n                                label=\"Имя\"\r\n                                fullWidth\r\n                                autoComplete=\"given-name\"\r\n                                defaultValue={toFirstName}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                required\r\n                                id=\"phoneNumber\"\r\n                                name=\"phoneNumber\"\r\n                                label=\"Номер телефона\"\r\n                                fullWidth\r\n                                autoComplete=\"tel\"\r\n                                type=\"phone\"\r\n                                defaultValue={toPhone}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                id=\"extraPhoneNumber\"\r\n                                name=\"extraPhoneNumber\"\r\n                                label=\"Доп. номер телефона\"\r\n                                fullWidth\r\n                                autoComplete=\"tel\"\r\n                                type=\"phone\"\r\n                                defaultValue={toExtraPhone}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                }\r\n                <Box sx={{display: 'flex', justifyContent: 'space-between', mt: 3}}>\r\n                    <Button onClick={handleBack}>\r\n                        Назад\r\n                    </Button>\r\n                    <Button variant=\"contained\" type=\"submit\">\r\n                        Проверить\r\n                    </Button>\r\n                </Box>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default To\r\n","import React, {FC} from 'react'\r\nimport {AppBar, Toolbar, Typography} from \"@mui/material\";\r\n\r\nconst Header: FC = () => {\r\n\r\n    return (\r\n        <AppBar\r\n            position=\"absolute\"\r\n            color=\"default\"\r\n            elevation={0}\r\n            sx={{\r\n                position: 'relative',\r\n                borderBottom: (t) => `1px solid ${t.palette.divider}`,\r\n            }}\r\n        >\r\n            <Toolbar>\r\n                <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n                    закажи-доставку.рф\r\n                </Typography>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React, {FC, useCallback} from 'react'\r\nimport {Container, CssBaseline, Paper, Step, StepLabel, Stepper, Typography} from \"@mui/material\";\r\nimport Copyright from '../../components/copyright'\r\nimport {useSelector} from 'react-redux';\r\nimport {PickUpSelector} from \"../../store/selectors/selectors\";\r\nimport From from \"./steps/from\";\r\nimport Type from \"./steps/type\";\r\nimport Date from \"./steps/date\";\r\nimport FromInfo from \"./steps/from-info\";\r\nimport Nature from \"./steps/nature\";\r\nimport Pass from \"./steps/pass\";\r\nimport Call from \"./steps/call\";\r\nimport To from \"./steps/to\";\r\nimport Header from \"../../components/header\";\r\n\r\nconst PickUp: FC = () => {\r\n    const {step} = useSelector(PickUpSelector)\r\n\r\n    const getStepContent = useCallback(\r\n        (step: number) => {\r\n            switch (step) {\r\n                case 0:\r\n                    return <From/>\r\n                case 1:\r\n                    return <Type/>\r\n                case 2:\r\n                    return <Date/>\r\n                case 3:\r\n                    return <FromInfo/>\r\n                case 4:\r\n                    return <Nature/>\r\n                case 5:\r\n                    return <Pass/>\r\n                case 6:\r\n                    return <Call/>\r\n                case 7:\r\n                    return <To/>\r\n            }\r\n        }, [])\r\n\r\n    return (\r\n        <>\r\n            <CssBaseline/>\r\n            <Header/>\r\n            <Container component=\"main\" maxWidth=\"sm\" sx={{mb: 4}}>\r\n                <Paper variant=\"outlined\" sx={{my: {xs: 3, md: 6}, p: {xs: 2, md: 3}}}>\r\n                    <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n                        Забор груза\r\n                    </Typography>\r\n                    <Stepper activeStep={step} alternativeLabel sx={{pt: 3, pb: 5}}>\r\n                        {Array(8).fill('').map((el, i) => (\r\n                            <Step key={i}>\r\n                                <StepLabel/>\r\n                            </Step>\r\n                        ))}\r\n                    </Stepper>\r\n                    <>\r\n                        {getStepContent(step)}\r\n                    </>\r\n                </Paper>\r\n                <Copyright/>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PickUp\r\n","import React, {FC, useEffect, useState} from 'react'\r\nimport {Box, Button, CircularProgress, Container, CssBaseline, Grid, Paper, Typography} from \"@mui/material\";\r\nimport Header from \"../../../components/header\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {PickUpSelector} from \"../../../store/selectors/selectors\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport Copyright from \"../../../components/copyright\";\r\nimport dayjs from \"dayjs\";\r\nimport axios from \"axios\";\r\nimport CustomAlert from \"../../../components/alert\";\r\n\r\nconst PickUpCheck: FC = () => {\r\n    const [loading, setLoading] = useState(false)\r\n    const [isNext, setIsNext] = useState(false)\r\n    const data = useSelector(PickUpSelector)\r\n    const {\r\n        step,\r\n        from,\r\n        type,\r\n        pickUpDate,\r\n        orderNumber,\r\n        companyName,\r\n        fromLastName,\r\n        fromFirstName,\r\n        fromPhone,\r\n        fromExtraPhone,\r\n        fromAddress,\r\n        fromExtraAddress,\r\n        fromCompanyName,\r\n        fromPickUpTimeMin,\r\n        fromPickUpTimeMax,\r\n        fromDocuments,\r\n        nature,\r\n        natureDescription,\r\n        needPass,\r\n        call,\r\n        to,\r\n        toLastName,\r\n        toFirstName,\r\n        toPhone,\r\n        toExtraPhone,\r\n        toAddress,\r\n        toExtraAddress,\r\n        toCompanyName,\r\n        toPickUpTimeMin,\r\n        toPickUpTimeMax,\r\n        toDocuments,\r\n        ready,\r\n        readyDate,\r\n        readyTime\r\n    }\r\n        = useSelector(PickUpSelector)\r\n\r\n    const navigate = useNavigate()\r\n    const [success, setSuccess] = useState(false)\r\n    const [error, setError] = useState(false)\r\n\r\n    const sendData = () => {\r\n        setLoading(true)\r\n        axios.post('https://закажи-доставку.рф/api-amocrm/pick-up', {\r\n            ...data,\r\n            readyDate: dayjs(readyDate).format('DD.MM.YYYY'),\r\n            readyTime: dayjs(readyTime).format('HH:mm'),\r\n            pickUpDate: dayjs(pickUpDate).format('DD.MM.YYYY'),\r\n            fromPickUpTimeMin: dayjs(fromPickUpTimeMin).format('HH:mm'),\r\n            fromPickUpTimeMax: dayjs(fromPickUpTimeMax).format('HH:mm'),\r\n            toPickUpTimeMin: dayjs(toPickUpTimeMin).format('HH:mm'),\r\n            toPickUpTimeMax: dayjs(toPickUpTimeMax).format('HH:mm'),\r\n        })\r\n            .then(() => {\r\n                setSuccess(true)\r\n                setIsNext(true)\r\n            })\r\n            .catch(() => setError(true))\r\n            .finally(() => setLoading(false))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (step < 7) {\r\n            navigate('pick-up')\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <CustomAlert isSuccess message={'Данные отправлены'} open={success} setOpen={setSuccess}/>\r\n            <CustomAlert message={'Ошибка отправки'} open={error} setOpen={setError}/>\r\n            <CssBaseline/>\r\n            <Header/>\r\n            <Container component=\"main\" maxWidth=\"md\" sx={{mb: 4}}>\r\n                <Paper variant=\"outlined\" sx={{my: {xs: 3, md: 6}, p: {xs: 2, md: 3}}}>\r\n                    <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n                        Проверка данных\r\n                    </Typography>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <Typography variant=\"h6\" align=\"center\">\r\n                                Откуда везем\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Забираем от: {from}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Вид услуги: {type}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Дата забора: {dayjs(pickUpDate).format('DD.MM.YYYY')}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Название организации: {fromCompanyName}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Адрес: {fromAddress}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Доп. адрес: {fromExtraAddress}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Фамилия: {fromLastName}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Имя: {fromFirstName}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Номер телефона: {fromPhone}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Доп. номер телефона: {fromExtraPhone}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Номер заказа или счета: {orderNumber}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Готовность заказа: {ready}\r\n                            </Typography>\r\n                            {ready === 'заказ не готов' &&\r\n                                <Typography variant=\"subtitle1\">\r\n                                    Дата готовности заказа: {dayjs(readyTime).format('HH:mm')} {dayjs(readyDate).format('DD.MM.YYYY')}\r\n                                </Typography>\r\n                            }\r\n                            <Typography variant=\"subtitle1\">\r\n                                Время забора с: {dayjs(fromPickUpTimeMin).format('HH:mm')}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Время забора до: {dayjs(fromPickUpTimeMax).format('HH:mm')}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Тип груза: {nature}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Описание груза: {natureDescription}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Нужен ли пропуск: {needPass}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Нужно ли созвониться заранее: {call}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Комментарий: {fromDocuments}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <Typography variant=\"h6\" align=\"center\">\r\n                                Куда везем\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Адрес доставки: {to}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Название организации: {toCompanyName}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Адрес: {toAddress}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Доп. адрес: {toExtraAddress}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Время доставки с: {dayjs(toPickUpTimeMin).format('HH:mm')}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Время доставки до: {dayjs(toPickUpTimeMax).format('HH:mm')}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Фамилия: {toLastName}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Имя: {toFirstName}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Номер телефона: {toPhone}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Доп. номер телефона: {toExtraPhone}\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Box sx={{display: 'flex', justifyContent: 'space-between', mt: 3}}>\r\n                        <Button onClick={() => navigate('/pick-up')}>\r\n                            Назад\r\n                        </Button>\r\n                        {(!loading && !isNext) && <Button variant=\"contained\" onClick={sendData}>\r\n                            Подтвердить\r\n                        </Button>}\r\n                        {loading && <Button variant=\"outlined\">\r\n                            <CircularProgress size={20}/>\r\n                        </Button>}\r\n                        {isNext && <Button variant=\"contained\" onClick={() => navigate('/choose')}>\r\n                            На главную\r\n                        </Button>}\r\n                    </Box>\r\n                </Paper>\r\n                <Copyright/>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PickUpCheck\r\n","import React, {FC} from 'react'\r\nimport {Box, Button, Container, CssBaseline, Paper, Typography} from \"@mui/material\";\r\nimport Header from \"../../components/header\";\r\nimport Copyright from \"../../components/copyright\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nconst Choose: FC = () => {\r\n    const navigate = useNavigate()\r\n\r\n    return (\r\n        <>\r\n            <CssBaseline/>\r\n            <Header/>\r\n            <Container component=\"main\" maxWidth=\"sm\" sx={{mb: 4}}>\r\n                <Paper variant=\"outlined\" sx={{my: {xs: 3, md: 6}, p: {xs: 2, md: 3}}}>\r\n                    <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n                        Выберите тип заказа:\r\n                    </Typography>\r\n                    <Box sx={{display: 'flex', justifyContent: 'space-around', mt: 3}}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            size=\"large\"\r\n                            onClick={() => navigate('/delivery')}\r\n                        >\r\n                            Доставка\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            size=\"large\"\r\n                            onClick={() => navigate('/pick-up')}\r\n                        >\r\n                            Забор\r\n                        </Button>\r\n                    </Box>\r\n                </Paper>\r\n                <Copyright/>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Choose\r\n","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\r\nimport {Dayjs} from \"dayjs\";\r\n\r\ninterface State {\r\n    step: number\r\n    to: string,\r\n    type: string,\r\n    ready: string\r\n    date: Dayjs | null\r\n    appNumber: string\r\n    readyDate: Dayjs | null\r\n    readyTime: Dayjs | null\r\n    fromLastName: string\r\n    fromFirstName: string\r\n    fromPhone: string\r\n    fromExtraPhone: string\r\n    fromAddress: string\r\n    fromExtraAddress: string\r\n    fromCompanyName: string\r\n    fromPickUpTimeMin: null | Dayjs\r\n    fromPickUpTimeMax: null | Dayjs\r\n    fromDocuments: string\r\n    nature: string\r\n    natureDescription: string\r\n    toLastName: string\r\n    toFirstName: string\r\n    toPhone: string\r\n    toExtraPhone: string\r\n    toAddress: string\r\n    toExtraAddress: string\r\n    toCompanyName: string\r\n    toPickUpTimeMin: null | Dayjs\r\n    toPickUpTimeMax: null | Dayjs\r\n    toDocuments: string\r\n    needPass: string\r\n    call: string\r\n}\r\n\r\nconst initialState: State = {\r\n    step: 0,\r\n    to: '',\r\n    type: '',\r\n    ready: '',\r\n    date: null,\r\n    appNumber: '',\r\n    readyDate: null,\r\n    readyTime: null,\r\n    fromLastName: '',\r\n    fromFirstName: '',\r\n    fromPhone: '',\r\n    fromExtraPhone: '',\r\n    fromAddress: '',\r\n    fromExtraAddress: '',\r\n    fromCompanyName: '',\r\n    fromPickUpTimeMin: null,\r\n    fromPickUpTimeMax: null,\r\n    fromDocuments: '',\r\n    nature: '',\r\n    natureDescription: '',\r\n    toLastName: '',\r\n    toFirstName: '',\r\n    toPhone: '',\r\n    toExtraPhone: '',\r\n    toAddress: '',\r\n    toExtraAddress: '',\r\n    toCompanyName: '',\r\n    toPickUpTimeMin: null,\r\n    toPickUpTimeMax: null,\r\n    toDocuments: '',\r\n    needPass: '',\r\n    call: '',\r\n}\r\n\r\nconst PickUpSlice = createSlice({\r\n    name: 'delivery',\r\n    initialState,\r\n    reducers: {\r\n        decrementStep(state) {\r\n            --state.step\r\n        },\r\n        setToData(state, action: PayloadAction<string>) {\r\n            ++state.step\r\n            state.to = action.payload\r\n        },\r\n        setTypeData(state, action: PayloadAction<string>) {\r\n            ++state.step\r\n            state.type = action.payload\r\n        },\r\n        setDateData(state, action: PayloadAction<{\r\n            ready: string,\r\n            date: Dayjs | null,\r\n            appNumber: string,\r\n            readyTime: Dayjs | null,\r\n            readyDate: Dayjs | null\r\n        }>) {\r\n            ++state.step\r\n            state.ready = action.payload.ready\r\n            state.date = action.payload.date\r\n            state.appNumber = action.payload.appNumber\r\n            state.readyTime = action.payload.readyTime\r\n            state.readyDate = action.payload.readyDate\r\n        },\r\n        setFromData(state, action: PayloadAction<{\r\n            fromLastName: string\r\n            fromFirstName: string\r\n            fromPhone: string\r\n            fromExtraPhone: string\r\n            fromAddress: string\r\n            fromExtraAddress: string\r\n            fromCompanyName: string\r\n            fromPickUpTimeMin: null | Dayjs\r\n            fromPickUpTimeMax: null | Dayjs\r\n            fromDocuments: string\r\n        }>) {\r\n            ++state.step\r\n            state.fromLastName = action.payload.fromLastName\r\n            state.fromFirstName = action.payload.fromFirstName\r\n            state.fromPhone = action.payload.fromPhone\r\n            state.fromExtraPhone = action.payload.fromExtraPhone\r\n            state.fromAddress = action.payload.fromAddress\r\n            state.fromExtraAddress = action.payload.fromExtraAddress\r\n            state.fromCompanyName = action.payload.fromCompanyName\r\n            state.fromPickUpTimeMin = action.payload.fromPickUpTimeMin\r\n            state.fromPickUpTimeMax = action.payload.fromPickUpTimeMax\r\n            state.fromDocuments = action.payload.fromDocuments\r\n        },\r\n        setNatureData(state, action: PayloadAction<{\r\n            nature: string\r\n            natureDescription: string\r\n        }>) {\r\n            ++state.step\r\n            state.nature = action.payload.nature\r\n            state.natureDescription = action.payload.natureDescription\r\n        },\r\n        setAddressData(state, action: PayloadAction<{\r\n            toLastName: string\r\n            toFirstName: string\r\n            toPhone: string\r\n            toExtraPhone: string\r\n            toAddress: string\r\n            toExtraAddress: string\r\n            toCompanyName: string\r\n            toPickUpTimeMin: null | Dayjs\r\n            toPickUpTimeMax: null | Dayjs\r\n            toDocuments: string\r\n        }>) {\r\n            ++state.step\r\n            state.toLastName = action.payload.toLastName\r\n            state.toFirstName = action.payload.toFirstName\r\n            state.toPhone = action.payload.toPhone\r\n            state.toExtraPhone = action.payload.toExtraPhone\r\n            state.toAddress = action.payload.toAddress\r\n            state.toExtraAddress = action.payload.toExtraAddress\r\n            state.toCompanyName = action.payload.toCompanyName\r\n            state.toPickUpTimeMin = action.payload.toPickUpTimeMin\r\n            state.toPickUpTimeMax = action.payload.toPickUpTimeMax\r\n            state.toDocuments = action.payload.toDocuments\r\n        },\r\n        setPassData(state, action: PayloadAction<{ needPass: string }>) {\r\n            ++state.step\r\n            state.needPass = action.payload.needPass\r\n        },\r\n        setCallData(state, action: PayloadAction<{ call: string }>) {\r\n            state.call = action.payload.call\r\n        },\r\n    }\r\n})\r\n\r\nexport const {\r\n    decrementStep,\r\n    setToData,\r\n    setTypeData,\r\n    setDateData,\r\n    setFromData,\r\n    setNatureData,\r\n    setAddressData,\r\n    setPassData,\r\n    setCallData\r\n} = PickUpSlice.actions\r\nexport default PickUpSlice.reducer\r\n","import {Box, Button, RadioGroup, Typography, Radio, FormControlLabel} from '@mui/material'\r\nimport React, {FC, useState} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {DeliverySelector} from \"../../../store/selectors/selectors\";\r\nimport {AppDispatch} from \"../../../store/store\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport CustomAlert from \"../../../components/alert\";\r\nimport {setToData} from \"../../../store/slices/delivery-slice\";\r\n\r\nconst From: FC = () => {\r\n    const [open, setOpen] = useState(false)\r\n    const {to} = useSelector(DeliverySelector)\r\n    const dispatch = useDispatch<AppDispatch>()\r\n    const navigate = useNavigate()\r\n\r\n    const handleBack = () => {\r\n        navigate('/choose')\r\n    }\r\n\r\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        const data = new FormData(event.currentTarget);\r\n        const to = data.get('to') as string\r\n\r\n        if (to) {\r\n            dispatch(setToData(to))\r\n        } else {\r\n            setOpen(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CustomAlert open={open} setOpen={setOpen}/>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Кому везем:\r\n            </Typography>\r\n            <Box component=\"form\" onSubmit={handleSubmit}>\r\n                <RadioGroup\r\n                    aria-labelledby=\"pick-up-from\"\r\n                    name=\"radio-buttons-group\"\r\n                    defaultValue={to}\r\n                >\r\n                    <FormControlLabel name='to' value=\"клиент\" control={<Radio/>} label=\"Клиенту\"/>\r\n                    <FormControlLabel name='to' value=\"подрядчик\" control={<Radio/>} label=\"Подрядчику\"/>\r\n                </RadioGroup>\r\n                <Box sx={{display: 'flex', justifyContent: 'space-between', mt: 3}}>\r\n                    <Button onClick={handleBack}>\r\n                        Назад\r\n                    </Button>\r\n                    <Button type=\"submit\" variant=\"contained\">\r\n                        Далее\r\n                    </Button>\r\n                </Box>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default From\r\n","import {Box, Button, RadioGroup, Typography, Radio, FormControlLabel} from '@mui/material'\r\nimport React, {FC, useState} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {DeliverySelector} from \"../../../store/selectors/selectors\";\r\nimport {AppDispatch} from \"../../../store/store\";\r\nimport CustomAlert from \"../../../components/alert\";\r\nimport {decrementStep, setTypeData} from \"../../../store/slices/delivery-slice\";\r\n\r\nconst Type: FC = () => {\r\n    const [open, setOpen] = useState(false)\r\n    const {type} = useSelector(DeliverySelector)\r\n    const dispatch = useDispatch<AppDispatch>()\r\n\r\n    const handleBack = () => {\r\n        dispatch(decrementStep())\r\n    }\r\n\r\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        const data = new FormData(event.currentTarget);\r\n        const type = data.get('type') as string\r\n\r\n        if (type) {\r\n            dispatch(setTypeData(type))\r\n        } else {\r\n            setOpen(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CustomAlert open={open} setOpen={setOpen}/>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Укажите тип услуги:\r\n            </Typography>\r\n            <Box component=\"form\" onSubmit={handleSubmit}>\r\n                <RadioGroup\r\n                    aria-labelledby=\"pick-up-from\"\r\n                    name=\"radio-buttons-group\"\r\n                    defaultValue={type}\r\n                >\r\n                    <FormControlLabel name='type' value=\"авто\" control={<Radio/>} label=\"Авто\"/>\r\n                    <FormControlLabel name='type' value=\"пеший\" control={<Radio/>} label=\"Пеший\"/>\r\n                </RadioGroup>\r\n                <Box sx={{display: 'flex', justifyContent: 'space-between', mt: 3}}>\r\n                    <Button onClick={handleBack}>\r\n                        Назад\r\n                    </Button>\r\n                    <Button type=\"submit\" variant=\"contained\">\r\n                        Далее\r\n                    </Button>\r\n                </Box>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Type\r\n","import {Box, Button, RadioGroup, Typography, Radio, FormControlLabel, Grid, TextField} from '@mui/material'\r\nimport React, {FC, useState} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {DeliverySelector} from \"../../../store/selectors/selectors\";\r\nimport {AppDispatch} from \"../../../store/store\";\r\nimport CustomAlert from \"../../../components/alert\";\r\nimport {decrementStep, setDateData} from \"../../../store/slices/delivery-slice\";\r\nimport {AdapterDayjs} from \"@mui/x-date-pickers/AdapterDayjs\";\r\nimport {DatePicker} from \"@mui/x-date-pickers/DatePicker\";\r\nimport {LocalizationProvider} from \"@mui/x-date-pickers/LocalizationProvider\";\r\nimport dayjs, {Dayjs} from \"dayjs\";\r\nimport {TimePicker} from \"@mui/x-date-pickers\";\r\n\r\nconst DateComponent: FC = () => {\r\n    const [open, setOpen] = useState(false)\r\n    const {\r\n        ready: readyStore,\r\n        date: dateStore,\r\n        appNumber,\r\n        readyDate: readyDateStore,\r\n        readyTime: readyTimeStore\r\n    } = useSelector(DeliverySelector)\r\n    const dispatch = useDispatch<AppDispatch>()\r\n\r\n    const [date, setDate] = useState<Dayjs | null>(dateStore)\r\n    const [ready, setReady] = useState(readyStore)\r\n\r\n    const [openPicker, setOpenPicker] = useState(false)\r\n    const [openReadyPicker, setOpenReadyPicker] = useState(false)\r\n\r\n    const [readyDate, setReadyDate] = useState<Dayjs | null>(readyDateStore)\r\n    const [readyTime, setReadyTime] = useState<Dayjs | null>(readyTimeStore)\r\n\r\n    const handleBack = () => {\r\n        dispatch(decrementStep())\r\n    }\r\n\r\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        const data = new FormData(event.currentTarget);\r\n        const ready = data.get('ready') as string\r\n        const appNumber = data.get('appNumber') as string\r\n\r\n        if (ready && appNumber && date &&\r\n            ((ready === 'заказ не готов' && readyDate && readyTime) || ready === 'заказ готов')\r\n        ) {\r\n            dispatch(setDateData({ready, appNumber, date, readyDate, readyTime}))\r\n        } else {\r\n            setOpen(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CustomAlert open={open} setOpen={setOpen}/>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Укажите следующие данные:\r\n            </Typography>\r\n            <Box component=\"form\" onSubmit={handleSubmit}>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            required\r\n                            name=\"appNumber\"\r\n                            label=\"Номер заказа\"\r\n                            fullWidth\r\n                            autoComplete=\"order-number\"\r\n                            defaultValue={appNumber}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <LocalizationProvider\r\n                            dateAdapter={AdapterDayjs}\r\n                            adapterLocale='ru'\r\n                        >\r\n                            <DatePicker\r\n                                open={openPicker}\r\n                                onOpen={() => setOpenPicker(true)}\r\n                                onClose={() => setOpenPicker(false)}\r\n                                minDate={dayjs().add(1, 'day')}\r\n                                label=\"Дата забора\"\r\n                                value={date}\r\n                                onChange={e => setDate(e)}\r\n                                renderInput={(params) =>\r\n                                    <TextField\r\n                                        focused={false}\r\n                                        onClick={() => setOpenPicker(true)}\r\n                                        onKeyDown={e => e.preventDefault()}\r\n                                        fullWidth\r\n                                        {...params}\r\n                                    />}\r\n                            />\r\n                        </LocalizationProvider>\r\n                    </Grid>\r\n                </Grid>\r\n                <RadioGroup\r\n                    aria-labelledby=\"pick-up-from\"\r\n                    name=\"radio-buttons-group\"\r\n                    value={ready}\r\n                    onChange={e => setReady(e.target.value)}\r\n                >\r\n                    <FormControlLabel name='ready' value=\"заказ готов\" control={<Radio/>} label=\"Заказ готов\"/>\r\n                    <FormControlLabel name='ready' value=\"заказ не готов\" control={<Radio/>} label=\"Заказ не готов\"/>\r\n                </RadioGroup>\r\n                {\r\n                    ready === \"заказ не готов\" &&\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <LocalizationProvider\r\n                                dateAdapter={AdapterDayjs}\r\n                                adapterLocale='ru'\r\n                            >\r\n                                <DatePicker\r\n                                    open={openReadyPicker}\r\n                                    onOpen={() => setOpenReadyPicker(true)}\r\n                                    onClose={() => setOpenReadyPicker(false)}\r\n                                    minDate={dayjs()}\r\n                                    label=\"Дата готовности\"\r\n                                    value={readyDate}\r\n                                    onChange={e => setReadyDate(e)}\r\n                                    renderInput={(params) =>\r\n                                        <TextField\r\n                                            focused={false}\r\n                                            onClick={() => setOpenReadyPicker(true)}\r\n                                            onKeyDown={e => e.preventDefault()}\r\n                                            fullWidth\r\n                                            {...params}\r\n                                        />}\r\n                                />\r\n                            </LocalizationProvider>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <LocalizationProvider\r\n                                dateAdapter={AdapterDayjs}\r\n                                adapterLocale='ru'\r\n                            >\r\n                                <TimePicker\r\n                                    label=\"Время готовности\"\r\n                                    value={readyTime}\r\n                                    onChange={(newValue) => setReadyTime(newValue)}\r\n                                    renderInput={(params) => <TextField onKeyDown={e => e.preventDefault()}\r\n                                                                        fullWidth {...params} />}\r\n                                />\r\n                            </LocalizationProvider>\r\n                        </Grid>\r\n                    </Grid>\r\n                }\r\n                <Box sx={{display: 'flex', justifyContent: 'space-between', mt: 3}}>\r\n                    <Button onClick={handleBack}>\r\n                        Назад\r\n                    </Button>\r\n                    <Button type=\"submit\" variant=\"contained\">\r\n                        Далее\r\n                    </Button>\r\n                </Box>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DateComponent\r\n","import React, {FC, useState} from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {DeliverySelector} from \"../../../store/selectors/selectors\";\r\nimport {AppDispatch} from \"../../../store/store\";\r\nimport {Dayjs} from \"dayjs\";\r\nimport CustomAlert from \"../../../components/alert\";\r\nimport {Box, Button, Grid, TextField, Typography} from \"@mui/material\";\r\nimport {LocalizationProvider, TimePicker} from \"@mui/x-date-pickers\";\r\nimport {AdapterDayjs} from \"@mui/x-date-pickers/AdapterDayjs\";\r\nimport {setFromData, decrementStep} from \"../../../store/slices/delivery-slice\";\r\n\r\nconst From: FC = () => {\r\n    const {\r\n        fromLastName,\r\n        fromFirstName,\r\n        fromPhone,\r\n        fromExtraPhone,\r\n        fromAddress,\r\n        fromExtraAddress,\r\n        fromCompanyName,\r\n        fromPickUpTimeMin: fromPickUpTimeMinStore,\r\n        fromPickUpTimeMax: fromPickUpTimeMaxStore,\r\n        fromDocuments,\r\n    } = useSelector(DeliverySelector)\r\n    const dispatch = useDispatch<AppDispatch>()\r\n\r\n    const [fromPickUpTimeMin, setFromPickUpTimeMin] = React.useState<Dayjs | null>(fromPickUpTimeMinStore);\r\n    const [fromPickUpTimeMax, setFromPickUpTimeMax] = React.useState<Dayjs | null>(fromPickUpTimeMaxStore);\r\n    const [open, setOpen] = useState(false)\r\n\r\n    const handleBack = () => {\r\n        dispatch(decrementStep())\r\n    }\r\n\r\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        const data = new FormData(event.currentTarget);\r\n        const lastName = data.get('lastName') as string\r\n        const firstName = data.get('firstName') as string\r\n        const phoneNumber = data.get('phoneNumber') as string\r\n        const extraPhoneNumber = data.get('extraPhoneNumber') as string\r\n        const address = data.get('address') as string\r\n        const extraAddress = data.get('extraAddress') as string\r\n        const documents = data.get('documents') as string\r\n        const company = data.get('company') as string\r\n\r\n        if (lastName && firstName && phoneNumber && address && company && fromPickUpTimeMin && fromPickUpTimeMax) {\r\n            dispatch(setFromData({\r\n                fromLastName: lastName,\r\n                fromFirstName: firstName,\r\n                fromPhone: phoneNumber,\r\n                fromExtraPhone: extraPhoneNumber,\r\n                fromAddress: address,\r\n                fromExtraAddress: extraAddress,\r\n                fromCompanyName: company,\r\n                fromPickUpTimeMin,\r\n                fromPickUpTimeMax,\r\n                fromDocuments: documents\r\n            }))\r\n        } else {\r\n            setOpen(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CustomAlert open={open} setOpen={setOpen}/>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Укажите данные от кого забирать:\r\n            </Typography>\r\n            <Box component=\"form\" onSubmit={handleSubmit}>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            required\r\n                            id=\"company\"\r\n                            name=\"company\"\r\n                            label=\"Название организации\"\r\n                            fullWidth\r\n                            autoComplete=\"organization\"\r\n                            defaultValue={fromCompanyName}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            required\r\n                            id=\"address\"\r\n                            name=\"address\"\r\n                            label=\"Адрес\"\r\n                            fullWidth\r\n                            autoComplete=\"street-address\"\r\n                            defaultValue={fromAddress}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            id=\"extraAddress\"\r\n                            name=\"extraAddress\"\r\n                            label=\"Доп. адрес\"\r\n                            fullWidth\r\n                            autoComplete=\"street-address\"\r\n                            defaultValue={fromExtraAddress}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <LocalizationProvider\r\n                            dateAdapter={AdapterDayjs}\r\n                            adapterLocale='ru'\r\n                        >\r\n                            <TimePicker\r\n                                label=\"Время забора с *\"\r\n                                value={fromPickUpTimeMin}\r\n                                onChange={(newValue) => setFromPickUpTimeMin(newValue)}\r\n                                renderInput={(params) => <TextField fullWidth {...params} />}\r\n                            />\r\n                        </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <LocalizationProvider\r\n                            dateAdapter={AdapterDayjs}\r\n                            adapterLocale='ru'\r\n                        >\r\n                            <TimePicker\r\n                                label=\"Время забора до *\"\r\n                                value={fromPickUpTimeMax}\r\n                                onChange={(newValue) => setFromPickUpTimeMax(newValue)}\r\n                                renderInput={(params) => <TextField fullWidth {...params} />}\r\n                            />\r\n                        </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            required\r\n                            id=\"lastName\"\r\n                            name=\"lastName\"\r\n                            label=\"Фамилия\"\r\n                            fullWidth\r\n                            autoComplete=\"family-name\"\r\n                            defaultValue={fromLastName}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            required\r\n                            id=\"firstName\"\r\n                            name=\"firstName\"\r\n                            label=\"Имя\"\r\n                            fullWidth\r\n                            autoComplete=\"given-name\"\r\n                            defaultValue={fromFirstName}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            required\r\n                            id=\"phoneNumber\"\r\n                            name=\"phoneNumber\"\r\n                            label=\"Номер телефона\"\r\n                            fullWidth\r\n                            autoComplete=\"tel\"\r\n                            type=\"phone\"\r\n                            defaultValue={fromPhone}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            id=\"extraPhoneNumber\"\r\n                            name=\"extraPhoneNumber\"\r\n                            label=\"Доп. номер телефона\"\r\n                            fullWidth\r\n                            autoComplete=\"tel\"\r\n                            type=\"phone\"\r\n                            defaultValue={fromExtraPhone}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            id=\"documents\"\r\n                            name=\"documents\"\r\n                            label=\"Комментарий\"\r\n                            fullWidth\r\n                            autoComplete=\"documents\"\r\n                            defaultValue={fromDocuments}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                <Box sx={{display: 'flex', justifyContent: 'space-between', mt: 3}}>\r\n                    <Button onClick={handleBack}>\r\n                        Назад\r\n                    </Button>\r\n                    <Button variant=\"contained\" type=\"submit\">\r\n                        Далее\r\n                    </Button>\r\n                </Box>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default From\r\n","import React, {FC, useState} from 'react'\r\nimport {\r\n    Box,\r\n    Button,\r\n    FormControlLabel,\r\n    Radio,\r\n    RadioGroup,\r\n    TextField,\r\n    Typography\r\n} from \"@mui/material\";\r\nimport {decrementStep, setNatureData} from \"../../../store/slices/delivery-slice\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppDispatch} from \"../../../store/store\";\r\nimport {DeliverySelector} from \"../../../store/selectors/selectors\";\r\nimport CustomAlert from \"../../../components/alert\";\r\n\r\nconst Nature: FC = () => {\r\n    const {nature, natureDescription} = useSelector(DeliverySelector)\r\n    const dispatch = useDispatch<AppDispatch>()\r\n\r\n    const [open, setOpen] = useState(false)\r\n\r\n    const handleBack = () => {\r\n        dispatch(decrementStep())\r\n    }\r\n\r\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        const data = new FormData(event.currentTarget);\r\n        const nature = data.get('nature') as string\r\n        const description = data.get('description') as string\r\n\r\n        if (nature && description) {\r\n            dispatch(setNatureData({nature, natureDescription: description}))\r\n        } else {\r\n            setOpen(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CustomAlert open={open} setOpen={setOpen}/>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Укажите тип груза:\r\n            </Typography>\r\n            <Box component=\"form\" onSubmit={handleSubmit}>\r\n                <RadioGroup\r\n                    aria-labelledby=\"pick-up-nature\"\r\n                    name=\"radio-buttons-group\"\r\n                    defaultValue={nature}\r\n                >\r\n                    <FormControlLabel name=\"nature\" value=\"коробка\" control={<Radio/>} label=\"Коробка\"/>\r\n                    <FormControlLabel name=\"nature\" value=\"пачка\" control={<Radio/>} label=\"Пачка\"/>\r\n                    <FormControlLabel name=\"nature\" value=\"другое\" control={<Radio/>} label=\"Другое\"/>\r\n                </RadioGroup>\r\n                <TextField\r\n                    defaultValue={natureDescription}\r\n                    name=\"description\"\r\n                    required\r\n                    id=\"outlined-multiline-flexible\"\r\n                    label=\"Описание\"\r\n                    multiline\r\n                    maxRows={4}\r\n                    placeholder=\"ВАЖНО: После выбора Коробка и Пачка, необходимо написать количество и вес. При выборе ДРУГОЕ опишите характер груза (например: Баннер длинной 2,30м; Паллет 400кг и т.д.)\"\r\n                    fullWidth\r\n                />\r\n                <Box sx={{display: 'flex', justifyContent: 'space-between', mt: 3}}>\r\n                    <Button onClick={handleBack}>\r\n                        Назад\r\n                    </Button>\r\n                    <Button variant=\"contained\" type=\"submit\">\r\n                        Далее\r\n                    </Button>\r\n                </Box>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Nature\r\n","import React, {useState} from 'react'\r\nimport {Box, Button, FormControlLabel, Radio, RadioGroup, Typography} from \"@mui/material\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppDispatch} from \"../../../store/store\";\r\nimport {decrementStep, setPassData} from \"../../../store/slices/delivery-slice\";\r\nimport {DeliverySelector, PickUpSelector} from \"../../../store/selectors/selectors\";\r\nimport CustomAlert from \"../../../components/alert\";\r\n\r\nconst Pass = () => {\r\n    const {needPass} = useSelector(DeliverySelector)\r\n    const dispatch = useDispatch<AppDispatch>()\r\n\r\n    const [open, setOpen] = useState(false)\r\n\r\n    const handleBack = () => {\r\n        dispatch(decrementStep())\r\n    }\r\n\r\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        const data = new FormData(event.currentTarget);\r\n        const pass = data.get('pass') as string\r\n\r\n        if (pass) {\r\n            dispatch(setPassData({needPass: pass}))\r\n        } else {\r\n            setOpen(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CustomAlert open={open} setOpen={setOpen}/>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Нужен ли пропуск:\r\n            </Typography>\r\n            <Box component=\"form\" onSubmit={handleSubmit}>\r\n                <RadioGroup\r\n                    aria-labelledby=\"pick-up-pass\"\r\n                    name=\"radio-buttons-group\"\r\n                    defaultValue={needPass}\r\n                >\r\n                    <FormControlLabel name=\"pass\" value=\"нужен\" control={<Radio/>} label=\"Пропуск нужен\"/>\r\n                    <FormControlLabel name=\"pass\" value=\"не нужен\" control={<Radio/>} label=\"Пропуск не нужен\"/>\r\n                </RadioGroup>\r\n                <Box sx={{display: 'flex', justifyContent: 'space-between', mt: 3}}>\r\n                    <Button onClick={handleBack}>\r\n                        Назад\r\n                    </Button>\r\n                    <Button variant=\"contained\" type=\"submit\">\r\n                        Далее\r\n                    </Button>\r\n                </Box>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Pass\r\n","import React, {FC, useState} from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {DeliverySelector} from \"../../../store/selectors/selectors\";\r\nimport {AppDispatch} from \"../../../store/store\";\r\nimport {Dayjs} from \"dayjs\";\r\nimport CustomAlert from \"../../../components/alert\";\r\nimport {Box, Button, Grid, TextField, Typography} from \"@mui/material\";\r\nimport {LocalizationProvider, TimePicker} from \"@mui/x-date-pickers\";\r\nimport {AdapterDayjs} from \"@mui/x-date-pickers/AdapterDayjs\";\r\nimport {decrementStep, setAddressData} from \"../../../store/slices/delivery-slice\";\r\n\r\nconst Address: FC = () => {\r\n    const {\r\n        toLastName,\r\n        toFirstName,\r\n        toPhone,\r\n        toExtraPhone,\r\n        toAddress,\r\n        toExtraAddress,\r\n        toCompanyName,\r\n        toPickUpTimeMin: toPickUpTimeMinStore,\r\n        toPickUpTimeMax: toPickUpTimeMaxStore,\r\n        toDocuments,\r\n    } = useSelector(DeliverySelector)\r\n    const dispatch = useDispatch<AppDispatch>()\r\n\r\n    const [toPickUpTimeMin, setFromPickUpTimeMin] = React.useState<Dayjs | null>(toPickUpTimeMinStore);\r\n    const [toPickUpTimeMax, setFromPickUpTimeMax] = React.useState<Dayjs | null>(toPickUpTimeMaxStore);\r\n    const [open, setOpen] = useState(false)\r\n\r\n    const handleBack = () => {\r\n        dispatch(decrementStep())\r\n    }\r\n\r\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        const data = new FormData(event.currentTarget);\r\n        const lastName = data.get('lastName') as string\r\n        const firstName = data.get('firstName') as string\r\n        const phoneNumber = data.get('phoneNumber') as string\r\n        const extraPhoneNumber = data.get('extraPhoneNumber') as string\r\n        const address = data.get('address') as string\r\n        const extraAddress = data.get('extraAddress') as string\r\n        const documents = data.get('documents') as string\r\n        const company = data.get('company') as string\r\n\r\n        if (lastName && firstName && phoneNumber && address && company && toPickUpTimeMin && toPickUpTimeMax) {\r\n            dispatch(setAddressData({\r\n                toLastName: lastName,\r\n                toFirstName: firstName,\r\n                toPhone: phoneNumber,\r\n                toExtraPhone: extraPhoneNumber,\r\n                toAddress: address,\r\n                toExtraAddress: extraAddress,\r\n                toCompanyName: company,\r\n                toPickUpTimeMin,\r\n                toPickUpTimeMax,\r\n                toDocuments: documents\r\n            }))\r\n        } else {\r\n            setOpen(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CustomAlert open={open} setOpen={setOpen}/>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Укажите данные кому везем:\r\n            </Typography>\r\n            <Box component=\"form\" onSubmit={handleSubmit}>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            required\r\n                            id=\"company\"\r\n                            name=\"company\"\r\n                            label=\"Название организации\"\r\n                            fullWidth\r\n                            autoComplete=\"organization\"\r\n                            defaultValue={toCompanyName}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            required\r\n                            id=\"address\"\r\n                            name=\"address\"\r\n                            label=\"Адрес\"\r\n                            fullWidth\r\n                            autoComplete=\"street-address\"\r\n                            defaultValue={toAddress}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            id=\"extraAddress\"\r\n                            name=\"extraAddress\"\r\n                            label=\"Доп. адрес\"\r\n                            fullWidth\r\n                            autoComplete=\"street-address\"\r\n                            defaultValue={toExtraAddress}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <LocalizationProvider\r\n                            dateAdapter={AdapterDayjs}\r\n                            adapterLocale='ru'\r\n                        >\r\n                            <TimePicker\r\n                                label=\"Время доставки с *\"\r\n                                value={toPickUpTimeMin}\r\n                                onChange={(newValue) => setFromPickUpTimeMin(newValue)}\r\n                                renderInput={(params) => <TextField fullWidth {...params} />}\r\n                            />\r\n                        </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <LocalizationProvider\r\n                            dateAdapter={AdapterDayjs}\r\n                            adapterLocale='ru'\r\n                        >\r\n                            <TimePicker\r\n                                label=\"Время доставки до *\"\r\n                                value={toPickUpTimeMax}\r\n                                onChange={(newValue) => setFromPickUpTimeMax(newValue)}\r\n                                renderInput={(params) => <TextField fullWidth {...params} />}\r\n                            />\r\n                        </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            required\r\n                            id=\"lastName\"\r\n                            name=\"lastName\"\r\n                            label=\"Фамилия\"\r\n                            fullWidth\r\n                            autoComplete=\"family-name\"\r\n                            defaultValue={toLastName}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            required\r\n                            id=\"firstName\"\r\n                            name=\"firstName\"\r\n                            label=\"Имя\"\r\n                            fullWidth\r\n                            autoComplete=\"given-name\"\r\n                            defaultValue={toFirstName}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            required\r\n                            id=\"phoneNumber\"\r\n                            name=\"phoneNumber\"\r\n                            label=\"Номер телефона\"\r\n                            fullWidth\r\n                            autoComplete=\"tel\"\r\n                            type=\"phone\"\r\n                            defaultValue={toPhone}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            id=\"extraPhoneNumber\"\r\n                            name=\"extraPhoneNumber\"\r\n                            label=\"Доп. номер телефона\"\r\n                            fullWidth\r\n                            autoComplete=\"tel\"\r\n                            type=\"phone\"\r\n                            defaultValue={toExtraPhone}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            id=\"documents\"\r\n                            name=\"documents\"\r\n                            label=\"Комментарий к доставке\"\r\n                            fullWidth\r\n                            autoComplete=\"documents\"\r\n                            defaultValue={toDocuments}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                <Box sx={{display: 'flex', justifyContent: 'space-between', mt: 3}}>\r\n                    <Button onClick={handleBack}>\r\n                        Назад\r\n                    </Button>\r\n                    <Button variant=\"contained\" type=\"submit\">\r\n                        Далее\r\n                    </Button>\r\n                </Box>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Address\r\n","import React, {FC, useState} from 'react'\r\nimport {Box, Button, FormControlLabel, Radio, RadioGroup, Typography} from \"@mui/material\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppDispatch} from \"../../../store/store\";\r\nimport {decrementStep, setCallData} from \"../../../store/slices/delivery-slice\";\r\nimport {DeliverySelector} from \"../../../store/selectors/selectors\";\r\nimport CustomAlert from \"../../../components/alert\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nconst Call: FC = () => {\r\n    const {call} = useSelector(DeliverySelector)\r\n    const dispatch = useDispatch<AppDispatch>()\r\n    const navigation = useNavigate()\r\n\r\n    const [open, setOpen] = useState(false)\r\n\r\n    const handleBack = () => {\r\n        dispatch(decrementStep())\r\n    }\r\n\r\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        const data = new FormData(event.currentTarget);\r\n        const call = data.get('call') as string\r\n\r\n        if (call) {\r\n            dispatch(setCallData({call}))\r\n            navigation('/delivery-check')\r\n        } else {\r\n            setOpen(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CustomAlert open={open} setOpen={setOpen}/>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Нужно ли созвониться заранее:\r\n            </Typography>\r\n            <Box component=\"form\" onSubmit={handleSubmit}>\r\n                <RadioGroup\r\n                    aria-labelledby=\"pick-up-call\"\r\n                    name=\"radio-buttons-group\"\r\n                    defaultValue={call}\r\n                >\r\n                    <FormControlLabel name=\"call\" value=\"15 минут\" control={<Radio/>} label=\"Созвониться за 15 минут\"/>\r\n                    <FormControlLabel name=\"call\" value=\"30 минут\" control={<Radio/>} label=\"Созвониться за 30 минут\"/>\r\n                    <FormControlLabel name=\"call\" value=\"1 час\" control={<Radio/>} label=\"Созвониться за час\"/>\r\n                    <FormControlLabel name=\"call\" value=\"3 часа\" control={<Radio/>} label=\"Созвониться за 3 часа\"/>\r\n                    <FormControlLabel name=\"call\" value=\"не нужно\" control={<Radio/>} label=\"Созвониваться не нужно\"/>\r\n                </RadioGroup>\r\n                <Box sx={{display: 'flex', justifyContent: 'space-between', mt: 3}}>\r\n                    <Button onClick={handleBack}>\r\n                        Назад\r\n                    </Button>\r\n                    <Button variant=\"contained\" type=\"submit\">\r\n                        Далее\r\n                    </Button>\r\n                </Box>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Call\r\n","import React, {FC, useCallback} from 'react'\r\nimport {Container, CssBaseline, Paper, Step, StepLabel, Stepper, Typography} from \"@mui/material\";\r\nimport Copyright from '../../components/copyright'\r\nimport {useSelector} from 'react-redux';\r\nimport {DeliverySelector} from \"../../store/selectors/selectors\";\r\nimport To from \"./steps/to\";\r\nimport Header from \"../../components/header\";\r\nimport Type from \"./steps/type\";\r\nimport Date from \"./steps/date\";\r\nimport From from \"./steps/from\";\r\nimport Nature from \"./steps/nature\";\r\nimport Pass from \"./steps/pass\";\r\nimport Address from \"./steps/address\";\r\nimport Call from \"./steps/call\";\r\n\r\nconst Delivery: FC = () => {\r\n    const {step} = useSelector(DeliverySelector)\r\n\r\n    const getStepContent = useCallback(\r\n        (step: number) => {\r\n            switch (step) {\r\n                case 0:\r\n                    return <To/>\r\n                case 1:\r\n                    return <Type/>\r\n                case 2:\r\n                    return <Date/>\r\n                case 3:\r\n                    return <From/>\r\n                case 4:\r\n                    return <Nature/>\r\n                case 5:\r\n                    return <Address/>\r\n                case 6:\r\n                    return <Pass/>\r\n                case 7:\r\n                    return <Call/>\r\n            }\r\n        }, [])\r\n\r\n    return (\r\n        <>\r\n            <CssBaseline/>\r\n            <Header/>\r\n            <Container component=\"main\" maxWidth=\"sm\" sx={{mb: 4}}>\r\n                <Paper variant=\"outlined\" sx={{my: {xs: 3, md: 6}, p: {xs: 2, md: 3}}}>\r\n                    <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n                        Доставка груза\r\n                    </Typography>\r\n                    <Stepper activeStep={step} alternativeLabel sx={{pt: 3, pb: 5}}>\r\n                        {Array(8).fill('').map((el, i) => (\r\n                            <Step key={i}>\r\n                                <StepLabel/>\r\n                            </Step>\r\n                        ))}\r\n                    </Stepper>\r\n                    <>\r\n                        {getStepContent(step)}\r\n                    </>\r\n                </Paper>\r\n                <Copyright/>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Delivery\r\n","import React, {FC, useEffect, useState} from 'react'\r\nimport {Box, Button, CircularProgress, Container, CssBaseline, Grid, Paper, Typography} from \"@mui/material\";\r\nimport Header from \"../../../components/header\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {DeliverySelector} from \"../../../store/selectors/selectors\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport Copyright from \"../../../components/copyright\";\r\nimport dayjs from \"dayjs\";\r\nimport axios from \"axios\";\r\nimport CustomAlert from \"../../../components/alert\";\r\n\r\nconst DeliveryCheck: FC = () => {\r\n    const [loading, setLoading] = useState(false)\r\n    const [isNext, setIsNext] = useState(false)\r\n    const data = useSelector(DeliverySelector)\r\n    const {\r\n        step,\r\n        to,\r\n        type,\r\n        ready,\r\n        date,\r\n        appNumber,\r\n        fromLastName,\r\n        fromFirstName,\r\n        fromPhone,\r\n        fromExtraPhone,\r\n        fromAddress,\r\n        fromExtraAddress,\r\n        fromCompanyName,\r\n        fromPickUpTimeMin,\r\n        fromPickUpTimeMax,\r\n        fromDocuments,\r\n        nature,\r\n        natureDescription,\r\n        toLastName,\r\n        toFirstName,\r\n        toPhone,\r\n        toExtraPhone,\r\n        toAddress,\r\n        toExtraAddress,\r\n        toCompanyName,\r\n        toPickUpTimeMin,\r\n        toPickUpTimeMax,\r\n        toDocuments,\r\n        needPass,\r\n        call,\r\n        readyDate,\r\n        readyTime,\r\n    }\r\n        = useSelector(DeliverySelector)\r\n    const [success, setSuccess] = useState(false)\r\n    const [error, setError] = useState(false)\r\n\r\n    const sendData = () => {\r\n        setLoading(true)\r\n        axios.post('https://закажи-доставку.рф/api-amocrm/delivery', {\r\n            ...data,\r\n            date: dayjs(date).format('DD.MM.YYYY'),\r\n            readyDate: dayjs(readyDate).format('DD.MM.YYYY'),\r\n            readyTime: dayjs(readyTime).format('HH:mm'),\r\n            fromPickUpTimeMin: dayjs(fromPickUpTimeMin).format('HH:mm'),\r\n            fromPickUpTimeMax: dayjs(fromPickUpTimeMax).format('HH:mm'),\r\n            toPickUpTimeMin: dayjs(toPickUpTimeMin).format('HH:mm'),\r\n            toPickUpTimeMax: dayjs(toPickUpTimeMax).format('HH:mm'),\r\n        })\r\n            .then(() => {\r\n                setSuccess(true)\r\n                setIsNext(true)\r\n            })\r\n            .catch(() => setError(true))\r\n            .finally(() => setLoading(false))\r\n    }\r\n\r\n    const navigate = useNavigate()\r\n\r\n    useEffect(() => {\r\n        if (step < 7) {\r\n            navigate('delivery')\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <CustomAlert isSuccess message={'Данные отправлены'} open={success} setOpen={setSuccess}/>\r\n            <CustomAlert message={'Ошибка отправки'} open={error} setOpen={setError}/>\r\n            <CssBaseline/>\r\n            <Header/>\r\n            <Container component=\"main\" maxWidth=\"md\" sx={{mb: 4}}>\r\n                <Paper variant=\"outlined\" sx={{my: {xs: 3, md: 6}, p: {xs: 2, md: 3}}}>\r\n                    <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n                        Проверка данных\r\n                    </Typography>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <Typography variant=\"h6\" align=\"center\">\r\n                                От кого везем\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Тип услуги: {type}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Дата забора: {dayjs(date).format('DD.MM.YYYY')}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Название организации: {fromCompanyName}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Адрес: {fromAddress}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Доп. адрес: {fromExtraAddress}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Фамилия: {fromLastName}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Имя: {fromFirstName}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Номер телефона: {fromPhone}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Доп. номер телефона: {fromExtraPhone}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Номер заказа: {appNumber}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Готовность заказа: {ready}\r\n                            </Typography>\r\n                            {ready === 'заказ не готов' && <Typography variant=\"subtitle1\">\r\n                                Дата готовности заказа: {dayjs(readyTime).format('HH:mm')} {dayjs(readyDate).format('DD.MM.YYYY')}\r\n                            </Typography>}\r\n                            <Typography variant=\"subtitle1\">\r\n                                Время забора с: {dayjs(fromPickUpTimeMin).format('HH:mm')}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Время забора до: {dayjs(fromPickUpTimeMax).format('HH:mm')}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Укажите тип груза: {nature}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Описание груза: {natureDescription}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Комментарий: {fromDocuments}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <Typography variant=\"h6\" align=\"center\">\r\n                                Кому везем\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Кому везем: {to}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Название организации: {toCompanyName}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Адрес: {toAddress}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Доп. адрес: {toExtraAddress}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Время доставки с: {dayjs(toPickUpTimeMin).format('HH:mm')}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Время доставки до: {dayjs(toPickUpTimeMax).format('HH:mm')}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Фамилия: {toLastName}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Имя: {toFirstName}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Номер телефона: {toPhone}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Доп. номер телефона: {toExtraPhone}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Комментарий: {toDocuments}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Нужен ли пропуск: {needPass}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Нужно ли созвониться заранее: {call}\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Box sx={{display: 'flex', justifyContent: 'space-between', mt: 3}}>\r\n                        <Button onClick={() => navigate('/delivery')}>\r\n                            Назад\r\n                        </Button>\r\n                        {(!loading && !isNext) && <Button variant=\"contained\" onClick={sendData}>\r\n                            Подтвердить\r\n                        </Button>}\r\n                        {loading && <Button variant=\"outlined\">\r\n                            <CircularProgress size={20}/>\r\n                        </Button>}\r\n                        {isNext && <Button variant=\"contained\" onClick={() => navigate('/choose')}>\r\n                            На главную\r\n                        </Button>}\r\n                    </Box>\r\n                </Paper>\r\n                <Copyright/>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DeliveryCheck\r\n","import React, {FC, useEffect} from 'react'\r\nimport {BrowserRouter, Routes, Route, Navigate} from \"react-router-dom\";\r\nimport SignIn from \"./pages/sign-in/sign-in\";\r\nimport SignUp from \"./pages/sign-up/sign-up\";\r\nimport PickUp from \"./pages/pick-up/pick-up\";\r\nimport PickUpCheck from \"./pages/pick-up/check/pick-up-check\";\r\nimport Choose from \"./pages/choose/choose\";\r\nimport Delivery from \"./pages/delivery/delivery\";\r\nimport DeliveryCheck from \"./pages/delivery/check/delivery-check\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AuthSelector} from \"./store/selectors/selectors\";\r\nimport {refreshThunk} from \"./store/thunks/auth-thunk\";\r\nimport {setLoading} from \"./store/slices/auth-slice\";\r\nimport {CircularProgress} from \"@mui/material\";\r\n\r\nconst AppRouter: FC = () => {\r\n    const dispatch = useDispatch()\r\n    const {isAuth, isLoading} = useSelector(AuthSelector)\r\n\r\n    useEffect(() => {\r\n        const jwt = localStorage.getItem('jwt')\r\n\r\n        if (jwt) {\r\n            // @ts-ignore\r\n            dispatch(refreshThunk({jwt}))\r\n        } else {\r\n            dispatch(setLoading(false))\r\n        }\r\n    }, [])\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <div style={{\r\n                height: '100vh',\r\n                width: '100vw',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center'\r\n            }}>\r\n                <CircularProgress/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <Routes>\r\n                {\r\n                    !isAuth ?\r\n                        <>\r\n                            <Route path='/sign-in' element={<SignIn/>}/>\r\n                            <Route path='/sign-up' element={<SignUp/>}/>\r\n                            <Route path='*' element={<Navigate to=\"/sign-in\" replace/>}/>\r\n                        </>\r\n                        :\r\n                        <>\r\n                            <Route path='/choose' element={<Choose/>}/>\r\n                            <Route path='/pick-up' element={<PickUp/>}/>\r\n                            <Route path='/pick-up-check' element={<PickUpCheck/>}/>\r\n                            <Route path='/delivery' element={<Delivery/>}/>\r\n                            <Route path='/delivery-check' element={<DeliveryCheck/>}/>\r\n                            <Route path='*' element={<Navigate to=\"/choose\" replace/>}/>\r\n                        </>\r\n                }\r\n            </Routes>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default AppRouter\r\n","import {configureStore} from '@reduxjs/toolkit'\r\nimport PickUpSlice from './slices/pick-up-slice'\r\nimport DeliverySlice from \"./slices/delivery-slice\";\r\nimport AuthSlice from \"./slices/auth-slice\";\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        pickUp: PickUpSlice,\r\n        delivery: DeliverySlice,\r\n        auth: AuthSlice\r\n    },\r\n})\r\n\r\nexport type RootState = ReturnType<typeof store.getState>\r\nexport type AppDispatch = typeof store.dispatch\r\n","import '@fontsource/roboto/300.css';\nimport '@fontsource/roboto/400.css';\nimport '@fontsource/roboto/500.css';\nimport '@fontsource/roboto/700.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport AppRouter from \"./app-router\";\nimport {createTheme, ThemeProvider} from \"@mui/material\";\nimport {Provider} from 'react-redux'\nimport {store} from \"./store/store\";\n\nconst theme = createTheme();\n\nconst root = ReactDOM.createRoot(\n    document.getElementById('root') as HTMLElement\n);\nroot.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <ThemeProvider theme={theme}>\n                <AppRouter/>\n            </ThemeProvider>\n        </Provider>\n    </React.StrictMode>\n);\n\n"],"sourceRoot":""}