{"version":3,"sources":["components/copyright.tsx","store/slices/auth-slice.tsx","components/alert.tsx","pages/sign-up/sign-up.tsx","store/selectors/selectors.ts","store/slices/pick-up-slice.ts","pages/pick-up/steps/from.tsx","pages/pick-up/steps/type.tsx","pages/pick-up/steps/date.tsx","pages/pick-up/steps/from-info.tsx","pages/pick-up/steps/nature.tsx","pages/pick-up/steps/pass.tsx","pages/pick-up/steps/call.tsx","pages/pick-up/steps/to.tsx","components/header.tsx","pages/pick-up/pick-up.tsx","pages/pick-up/check/pick-up-check.tsx","pages/choose/choose.tsx","store/slices/delivery-slice.ts","pages/delivery/steps/to.tsx","pages/delivery/steps/type.tsx","pages/delivery/steps/date.tsx","pages/delivery/steps/from.tsx","pages/delivery/steps/nature.tsx","pages/delivery/steps/pass.tsx","pages/delivery/steps/address.tsx","pages/delivery/steps/call.tsx","pages/delivery/delivery.tsx","pages/delivery/check/delivery-check.tsx","app-router.tsx","store/store.ts","index.tsx"],"names":["Copyright","props","react","Typography","Object","assign","variant","color","align","Link","href","Date","getFullYear","AuthSlice","createSlice","name","initialState","isAuth","reducers","checkAuth","state","localStorage","getItem","registration","setItem","actions","CustomAlert","_ref","open","setOpen","react_default","a","createElement","Snackbar","anchorOrigin","vertical","horizontal","message","autoHideDuration","onClose","Alert","severity","SignUp","dispatch","useDispatch","_useState","useState","_useState2","slicedToArray","_useState3","_useState4","accept","setAccept","components_alert","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","LockOutlined_default","noValidate","onSubmit","event","preventDefault","data","FormData","currentTarget","get","mt","Grid","container","spacing","item","xs","sm","TextField","autoComplete","required","fullWidth","id","label","autoFocus","type","FormControlLabel","checked","onChange","control","Checkbox","value","Button","mb","copyright","PickUpSelector","pickUp","DeliverySelector","delivery","AuthSelector","auth","PickUpSlice","step","from","pickUpDate","orderNumber","withContract","companyName","fromLastName","fromFirstName","fromPhone","fromExtraPhone","fromAddress","fromExtraAddress","fromCompanyName","fromPickUpTimeMin","fromPickUpTimeMax","fromDocuments","nature","natureDescription","needPass","call","to","toLastName","toFirstName","toPhone","toExtraPhone","toAddress","toExtraAddress","toCompanyName","toPickUpTimeMin","toPickUpTimeMax","toDocuments","incrementStep","decrementStep","setFromData","action","payload","setTypeData","setDateData","setFromInfoData","setNatureData","setPassData","setCallData","setToInfoData","From","useSelector","navigate","useNavigate","Fragment","gutterBottom","RadioGroup","aria-labelledby","defaultValue","Radio","justifyContent","onClick","Type","_useSelector","withContractStore","date","setDate","_useState5","_useState6","setWithContract","LocalizationProvider","dateAdapter","AdapterDayjs","adapterLocale","DatePicker","e","renderInput","params","disabled","FromInfo","fromPickUpTimeMinStore","fromPickUpTimeMaxStore","_React$useState","React","_React$useState2","setFromPickUpTimeMin","_React$useState3","_React$useState4","setFromPickUpTimeMax","lastName","firstName","phoneNumber","extraPhoneNumber","address","extraAddress","documents","company","TimePicker","newValue","Nature","description","multiline","maxRows","placeholder","Pass","pass","Call","To","toPickUpTimeMinStore","toPickUpTimeMaxStore","setToPickUpTimeMin","setToPickUpTimeMax","setTo","target","Header","AppBar","position","elevation","borderBottom","t","concat","palette","divider","Toolbar","noWrap","PickUp","getStepContent","useCallback","steps_from","steps_type","steps_date","from_info","steps_nature","steps_pass","steps_call","steps_to","header","Paper","my","md","p","Stepper","activeStep","alternativeLabel","pt","pb","Array","fill","map","el","i","Step","key","StepLabel","PickUpCheck","useEffect","dayjs","format","Choose","size","ready","appNumber","setToData","setAddressData","dateStore","Address","navigation","Delivery","delivery_steps_to","delivery_steps_type","delivery_steps_date","delivery_steps_from","delivery_steps_nature","steps_address","delivery_steps_pass","delivery_steps_call","DeliveryCheck","AppRouter","dist","react_router_dist","path","element","choose","pick_up","pick_up_check","delivery_check","replace","sign_up","store","configureStore","reducer","DeliverySlice","theme","createTheme","ReactDOM","createRoot","document","getElementById","render","StrictMode","es","ThemeProvider","app_router"],"mappings":"qVAiBeA,EAZY,SAACC,GACxB,OACIC,EAAA,cAACC,EAAA,EAADC,OAAAC,OAAA,CAAYC,QAAQ,QAAQC,MAAM,iBAAiBC,MAAM,UAAaP,GACjE,kBACDC,EAAA,cAACO,EAAA,EAAD,CAAMF,MAAM,UAAUG,KAAK,oBAA3B,yFAEQ,KACP,IAAIC,MAAOC,gCCFlBC,EAAYC,YAAY,CAC1BC,KAAM,OACNC,aAN+B,CAC/BC,QAAQ,GAMRC,SAAU,CACNC,UADM,SACIC,GACSC,aAAaC,QAAQ,UAGhCF,EAAMH,QAAS,IAGvBM,aARM,SAQOH,GACTC,aAAaG,QAAQ,OAAQ,QAC7BJ,EAAMH,QAAS,QAKcJ,EAAUY,QAArCN,cAAWI,iBACVV,IAAf,0BCFea,EAnBgB,SAAAC,GAAqB,IAAnBC,EAAmBD,EAAnBC,KAAMC,EAAaF,EAAbE,QAEnC,OACIC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACIC,aAAc,CAACC,SAAU,MAAOC,WAAY,SAC5CR,KAAMA,EACNS,QAAQ,+KACRC,iBAAkB,IAClBC,QAAS,kBAAMV,GAAQ,KAEvBC,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACID,QAAS,kBAAMV,GAAQ,IACvBY,SAAS,WAFb,yGCgIGC,EA/HI,WACf,IAAMC,EAAWC,cADIC,EAEGC,oBAAS,GAFZC,EAAA3C,OAAA4C,EAAA,EAAA5C,CAAAyC,EAAA,GAEdjB,EAFcmB,EAAA,GAERlB,EAFQkB,EAAA,GAAAE,EAGOH,oBAAS,GAHhBI,EAAA9C,OAAA4C,EAAA,EAAA5C,CAAA6C,EAAA,GAGdE,EAHcD,EAAA,GAGNE,EAHMF,EAAA,GAsBrB,OACIhD,EAAA,cAAAA,EAAA,cACIA,EAAA,cAACmD,EAAD,CAAazB,KAAMA,EAAMC,QAASA,IAClC3B,EAAA,cAACoD,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,MACjCtD,EAAA,cAACuD,EAAA,EAAD,MACAvD,EAAA,cAACwD,EAAA,EAAD,CACIC,GAAI,CACAC,UAAW,EACXC,QAAS,OACTC,cAAe,SACfC,WAAY,WAGhB7D,EAAA,cAAC8D,EAAA,EAAD,CAAQL,GAAI,CAACM,EAAG,EAAGC,QAAS,mBACxBhE,EAAA,cAACiE,EAAApC,EAAD,OAEJ7B,EAAA,cAACC,EAAA,EAAD,CAAYoD,UAAU,KAAKjD,QAAQ,MAAnC,sEAGAJ,EAAA,cAACwD,EAAA,EAAD,CAAKH,UAAU,OAAOa,YAAU,EAACC,SApC5B,SAACC,GAClBA,EAAMC,iBACN,IAAMC,EAAO,IAAIC,SAASH,EAAMI,eAE5BF,EAAKG,IAAI,UACTH,EAAKG,IAAI,aACTH,EAAKG,IAAI,cACTH,EAAKG,IAAI,aACTH,EAAKG,IAAI,YACTxB,EAEAR,EAASpB,KAETM,GAAQ,IAuByD8B,GAAI,CAACiB,GAAI,IAC9D1E,EAAA,cAAC2E,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACrB7E,EAAA,cAAC2E,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GACnBhF,EAAA,cAACiF,EAAA,EAAD,CACIC,aAAa,aACbrE,KAAK,YACLsE,UAAQ,EACRC,WAAS,EACTC,GAAG,YACHC,MAAM,qBACNC,WAAS,KAGjBvF,EAAA,cAAC2E,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GACnBhF,EAAA,cAACiF,EAAA,EAAD,CACIE,UAAQ,EACRC,WAAS,EACTC,GAAG,WACHC,MAAM,6CACNzE,KAAK,WACLqE,aAAa,iBAGrBlF,EAAA,cAAC2E,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACX/E,EAAA,cAACiF,EAAA,EAAD,CACIE,UAAQ,EACRC,WAAS,EACTC,GAAG,UACHC,MAAM,oGACNzE,KAAK,UACLqE,aAAa,aAGrBlF,EAAA,cAAC2E,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACX/E,EAAA,cAACiF,EAAA,EAAD,CACIE,UAAQ,EACRC,WAAS,EACTC,GAAG,QACHC,MAAM,QACNzE,KAAK,QACLqE,aAAa,WAGrBlF,EAAA,cAAC2E,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACX/E,EAAA,cAACiF,EAAA,EAAD,CACIE,UAAQ,EACRC,WAAS,EACTvE,KAAK,WACLyE,MAAM,uCACNE,KAAK,WACLH,GAAG,WACHH,aAAa,kBAGrBlF,EAAA,cAAC2E,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACX/E,EAAA,cAACyF,EAAA,EAAD,CACIC,QAASzC,EACT0C,SAAU,kBAAMzC,EAAU,SAAAD,GAAM,OAAKA,KACrC2C,QAAS5F,EAAA,cAAC6F,EAAA,EAAD,CAAUC,MAAM,mBAAmBzF,MAAM,YAClDiF,MAAM,6SAIlBtF,EAAA,cAAC+F,EAAA,EAAD,CACIP,KAAK,SACLJ,WAAS,EACThF,QAAQ,YACRqD,GAAI,CAACiB,GAAI,EAAGsB,GAAI,IAJpB,kHAiBRhG,EAAA,cAACiG,EAAD,CAAWxC,GAAI,CAACiB,GAAI,4CC1IvBwB,EAAiB,SAAChF,GAAD,OAAsBA,EAAMiF,QAC7CC,EAAmB,SAAClF,GAAD,OAAsBA,EAAMmF,UAC/CC,EAAe,SAACpF,GAAD,OAAsBA,EAAMqF,wBCuElDC,EAAc5F,YAAY,CAC5BC,KAAM,UACNC,aAtCwB,CACxB2F,KAAM,EACNC,KAAM,GACNlB,KAAM,GACNmB,WAAY,KACZC,YAAa,GACbC,cAAc,EACdC,YAAa,GACbC,aAAc,GACdC,cAAe,GACfC,UAAW,GACXC,eAAgB,GAChBC,YAAa,GACbC,iBAAkB,GAClBC,gBAAiB,GACjBC,kBAAmB,KACnBC,kBAAmB,KACnBC,cAAe,GACfC,OAAQ,GACRC,kBAAmB,GACnBC,SAAU,GACVC,KAAM,GAENC,GAAI,GACJC,WAAY,GACZC,YAAa,GACbC,QAAS,GACTC,aAAc,GACdC,UAAW,GACXC,eAAgB,GAChBC,cAAe,GACfC,gBAAiB,KACjBC,gBAAiB,KACjBC,YAAa,IAMbvH,SAAU,CACNwH,cADM,SACQtH,KACRA,EAAMuF,MAEZgC,cAJM,SAIQvH,KACRA,EAAMuF,MAEZiC,YAPM,SAOMxH,EAAOyH,KACbzH,EAAMuF,KACRvF,EAAMwF,KAAOiC,EAAOC,SAExBC,YAXM,SAWM3H,EAAOyH,KACbzH,EAAMuF,KACRvF,EAAMsE,KAAOmD,EAAOC,SAExBE,YAfM,SAeM5H,EAAOyH,KAMbzH,EAAMuF,KACRvF,EAAMyF,WAAagC,EAAOC,QAAQjC,WAClCzF,EAAM0F,YAAc+B,EAAOC,QAAQhC,YACnC1F,EAAM2F,aAAe8B,EAAOC,QAAQ/B,aACpC3F,EAAM4F,YAAc6B,EAAOC,QAAQ9B,aAEvCiC,gBA3BM,SA2BU7H,EAAOyH,KAYjBzH,EAAMuF,KACRvF,EAAM6F,aAAe4B,EAAOC,QAAQ7B,aACpC7F,EAAM8F,cAAgB2B,EAAOC,QAAQ5B,cACrC9F,EAAM+F,UAAY0B,EAAOC,QAAQ3B,UACjC/F,EAAMgG,eAAiByB,EAAOC,QAAQ1B,eACtChG,EAAMiG,YAAcwB,EAAOC,QAAQzB,YACnCjG,EAAMkG,iBAAmBuB,EAAOC,QAAQxB,iBACxClG,EAAMmG,gBAAkBsB,EAAOC,QAAQvB,gBACvCnG,EAAMoG,kBAAoBqB,EAAOC,QAAQtB,kBACzCpG,EAAMqG,kBAAoBoB,EAAOC,QAAQrB,kBACzCrG,EAAMsG,cAAgBmB,EAAOC,QAAQpB,eAEzCwB,cAnDM,SAmDQ9H,EAAOyH,KAIfzH,EAAMuF,KACRvF,EAAMuG,OAASkB,EAAOC,QAAQnB,OAC9BvG,EAAMwG,kBAAoBiB,EAAOC,QAAQlB,mBAE7CuB,YA3DM,SA2DM/H,EAAOyH,KACbzH,EAAMuF,KACRvF,EAAMyG,SAAWgB,EAAOC,QAAQjB,UAEpCuB,YA/DM,SA+DMhI,EAAOyH,KACbzH,EAAMuF,KACRvF,EAAM0G,KAAOe,EAAOC,QAAQhB,MAEhCuB,cAnEM,SAmEQjI,EAAOyH,GAajBzH,EAAM2G,GAAKc,EAAOC,QAAQf,GAC1B3G,EAAM4G,WAAaa,EAAOC,QAAQd,WAClC5G,EAAM6G,YAAcY,EAAOC,QAAQb,YACnC7G,EAAM8G,QAAUW,EAAOC,QAAQZ,QAC/B9G,EAAM+G,aAAeU,EAAOC,QAAQX,aACpC/G,EAAMgH,UAAYS,EAAOC,QAAQV,UACjChH,EAAMiH,eAAiBQ,EAAOC,QAAQT,eACtCjH,EAAMkH,cAAgBO,EAAOC,QAAQR,cACrClH,EAAMmH,gBAAkBM,EAAOC,QAAQP,gBACvCnH,EAAMoH,gBAAkBK,EAAOC,QAAQN,gBACvCpH,EAAMqH,YAAcI,EAAOC,QAAQL,kBAgB3C/B,EAAYjF,QATZkH,KADAD,gBACAC,eACAC,gBACAG,gBACAC,gBACAC,oBACAC,kBACAC,gBACAC,gBACAC,mBAEW3C,KAAf,QC9He4C,GAlDE,WAAM,IAAAzG,EACKC,oBAAS,GADdC,EAAA3C,OAAA4C,EAAA,EAAA5C,CAAAyC,EAAA,GACZjB,EADYmB,EAAA,GACNlB,EADMkB,EAAA,GAEZ6D,EAAQ2C,YAAYnD,GAApBQ,KACDjE,EAAWC,cACX4G,EAAWC,cAkBjB,OACI3H,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2H,SAAA,KACI5H,EAAAC,EAAAC,cAACqB,EAAD,CAAazB,KAAMA,EAAMC,QAASA,IAClCC,EAAAC,EAAAC,cAAC7B,EAAA,EAAD,CAAYG,QAAQ,KAAKqJ,cAAY,GAArC,kEAGA7H,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAKH,UAAU,OAAOc,SAlBT,SAACC,GAClBA,EAAMC,iBACN,IACMqC,EADO,IAAInC,SAASH,EAAMI,eACdC,IAAI,QAElBiC,EACAjE,EAASiG,EAAYhC,IAErB/E,GAAQ,KAWJC,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,CACIC,kBAAgB,eAChB9I,KAAK,sBACL+I,aAAclD,GAEd9E,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CAAkB5E,KAAK,OAAOiF,MAAM,yDAAYF,QAAShE,EAAAC,EAAAC,cAAC+H,EAAA,EAAD,MAAUvE,MAAM,2DACzE1D,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CAAkB5E,KAAK,OAAOiF,MAAM,yDAAYF,QAAShE,EAAAC,EAAAC,cAAC+H,EAAA,EAAD,MAAUvE,MAAM,4DAE7E1D,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAKC,GAAI,CAACE,QAAS,OAAQmG,eAAgB,gBAAiBpF,GAAI,IAC5D9C,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CAAQgE,QAhCL,WACfT,EAAS,aA+BG,kCAGA1H,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CAAQP,KAAK,SAASpF,QAAQ,aAA9B,sCCOL4J,GAjDE,WAAM,IAAArH,EACKC,oBAAS,GADdC,EAAA3C,OAAA4C,EAAA,EAAA5C,CAAAyC,EAAA,GACZjB,EADYmB,EAAA,GACNlB,EADMkB,EAAA,GAEZ2C,EAAQ6D,YAAYnD,GAApBV,KACD/C,EAAWC,cAkBjB,OACId,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2H,SAAA,KACI5H,EAAAC,EAAAC,cAACqB,EAAD,CAAazB,KAAMA,EAAMC,QAASA,IAClCC,EAAAC,EAAAC,cAAC7B,EAAA,EAAD,CAAYG,QAAQ,KAAKqJ,cAAY,GAArC,6GAGA7H,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAKH,UAAU,OAAOc,SAlBT,SAACC,GAClBA,EAAMC,iBACN,IACMmB,EADO,IAAIjB,SAASH,EAAMI,eACdC,IAAI,QAElBe,EACA/C,EAASoG,EAAYrD,IAErB7D,GAAQ,KAWJC,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,CACIC,kBAAgB,eAChB9I,KAAK,sBACL+I,aAAcpE,GAEd5D,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CAAkB5E,KAAK,OAAOiF,MAAM,iCAAQF,QAAShE,EAAAC,EAAAC,cAAC+H,EAAA,EAAD,MAAUvE,MAAM,mCACrE1D,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CAAkB5E,KAAK,OAAOiF,MAAM,2BAAOF,QAAShE,EAAAC,EAAAC,cAAC+H,EAAA,EAAD,MAAUvE,MAAM,8BAExE1D,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAKC,GAAI,CAACE,QAAS,OAAQmG,eAAgB,gBAAiBpF,GAAI,IAC5D9C,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CAAQgE,QAhCL,WACftH,EAASgG,OA+BG,kCAGA7G,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CAAQ3F,QAAQ,YAAYoF,KAAK,UAAjC,mECoELwE,WAtGE,WAAM,IAAAC,EAMfZ,YAAYnD,GAJZS,EAFesD,EAEftD,WACAC,EAHeqD,EAGfrD,YACcsD,EAJCD,EAIfpD,aACAC,EALemD,EAKfnD,YAEErE,EAAWC,cAPEC,EASKC,oBAAS,GATdC,EAAA3C,OAAA4C,EAAA,EAAA5C,CAAAyC,EAAA,GASZjB,EATYmB,EAAA,GASNlB,EATMkB,EAAA,GAAAE,EAUKH,mBAAuB+D,GAV5B3D,EAAA9C,OAAA4C,EAAA,EAAA5C,CAAA6C,EAAA,GAUZoH,EAVYnH,EAAA,GAUNoH,EAVMpH,EAAA,GAAAqH,EAWqBzH,mBAAkBsH,GAXvCI,EAAApK,OAAA4C,EAAA,EAAA5C,CAAAmK,EAAA,GAWZxD,EAXYyD,EAAA,GAWEC,EAXFD,EAAA,GAmCnB,OACI1I,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2H,SAAA,KACI5H,EAAAC,EAAAC,cAACqB,EAAD,CAAazB,KAAMA,EAAMC,QAASA,IAClCC,EAAAC,EAAAC,cAAC7B,EAAA,EAAD,CAAYG,QAAQ,KAAKqJ,cAAY,GAArC,2IAGA7H,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAKH,UAAU,OAAOc,SAxBT,SAACC,GAClBA,EAAMC,iBACN,IAAMC,EAAO,IAAIC,SAASH,EAAMI,eAC1BoC,EAActC,EAAKG,IAAI,eACvBqC,EAAcxC,EAAKG,IAAI,eAEzB0F,GAAQvD,IAAgBC,GAAgBC,IAAgBD,IAAiBC,GACzErE,EAASqG,EAAY,CACjBnC,WAAYwD,EACZvD,cACAC,eACAC,iBAGJnF,GAAQ,KAWJC,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACrBjD,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GACnBpD,EAAAC,EAAAC,cAAC0I,GAAA,EAAD,CACIC,YAAaC,KACbC,cAAc,MAEd/I,EAAAC,EAAAC,cAAC8I,GAAA,EAAD,CACItF,MAAM,gEACNQ,MAAOqE,EACPxE,SAAU,SAAAkF,GAAC,OAAIT,EAAQS,IACvBC,YAAa,SAACC,GAAD,OAAYnJ,EAAAC,EAAAC,cAACmD,EAAA,EAAD/E,OAAAC,OAAA,CAAWiF,WAAS,GAAK2F,SAI9DnJ,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GACnBpD,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CACIE,UAAQ,EACRE,GAAG,cACHxE,KAAK,cACLyE,MAAM,wHACNF,WAAS,EACTF,aAAa,cACb0E,aAAchD,KAGtBhF,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAMG,MAAI,EAACE,GAAI,IACXpD,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CACIC,QAASmB,EACTlB,SAAU,kBAAM4E,EAAgB,SAAA1D,GAAY,OAAKA,KACjDjB,QAAShE,EAAAC,EAAAC,cAAC+D,EAAA,EAAD,MACTP,MAAM,gHACNzE,KAAK,kBAGbe,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACXnD,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CACI+F,UAAWnE,EACX1B,UAAQ,EACRE,GAAG,cACHxE,KAAK,cACLyE,MAAM,2GACNF,WAAS,EACTF,aAAa,cACb0E,aAAc9C,MAI1BlF,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAKC,GAAI,CAACE,QAAS,OAAQmG,eAAgB,gBAAiBpF,GAAI,IAC5D9C,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CAAQgE,QA7EL,WACftH,EAASgG,OA4EG,kCAGA7G,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CAAQ3F,QAAQ,YAAYoF,KAAK,UAAjC,iDC8FLyF,GA7LM,WAAM,IAAAhB,EAYnBZ,YAAYnD,GAVZa,EAFmBkD,EAEnBlD,aACAC,EAHmBiD,EAGnBjD,cACAC,EAJmBgD,EAInBhD,UACAC,EALmB+C,EAKnB/C,eACAC,EANmB8C,EAMnB9C,YACAC,EAPmB6C,EAOnB7C,iBACAC,EARmB4C,EAQnB5C,gBACmB6D,EATAjB,EASnB3C,kBACmB6D,EAVAlB,EAUnB1C,kBACAC,EAXmByC,EAWnBzC,cAEE/E,EAAWC,cAbM0I,EAe2BC,IAAMzI,SAAuBsI,GAfxDI,EAAApL,OAAA4C,EAAA,EAAA5C,CAAAkL,EAAA,GAehB9D,EAfgBgE,EAAA,GAeGC,EAfHD,EAAA,GAAAE,EAgB2BH,IAAMzI,SAAuBuI,GAhBxDM,EAAAvL,OAAA4C,EAAA,EAAA5C,CAAAsL,EAAA,GAgBhBjE,EAhBgBkE,EAAA,GAgBGC,EAhBHD,EAAA,GAAA9I,EAiBCC,oBAAS,GAjBVC,EAAA3C,OAAA4C,EAAA,EAAA5C,CAAAyC,EAAA,GAiBhBjB,EAjBgBmB,EAAA,GAiBVlB,EAjBUkB,EAAA,GAqDvB,OACIjB,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2H,SAAA,KACI5H,EAAAC,EAAAC,cAACqB,EAAD,CAAazB,KAAMA,EAAMC,QAASA,IAClCC,EAAAC,EAAAC,cAAC7B,EAAA,EAAD,CAAYG,QAAQ,KAAKqJ,cAAY,GAArC,2KAGA7H,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAKH,UAAU,OAAOc,SApCT,SAACC,GAClBA,EAAMC,iBACN,IAAMC,EAAO,IAAIC,SAASH,EAAMI,eAC1BmH,EAAWrH,EAAKG,IAAI,YACpBmH,EAAYtH,EAAKG,IAAI,aACrBoH,EAAcvH,EAAKG,IAAI,eACvBqH,EAAmBxH,EAAKG,IAAI,oBAC5BsH,EAAUzH,EAAKG,IAAI,WACnBuH,EAAe1H,EAAKG,IAAI,gBACxBwH,EAAY3H,EAAKG,IAAI,aACrByH,EAAU5H,EAAKG,IAAI,WAErBkH,GAAYC,GAAaC,GAAeE,GAAWE,GAAaC,EAChEzJ,EAASsG,EAAgB,CACrBhC,aAAc4E,EACd3E,cAAe4E,EACf3E,UAAW4E,EACX3E,eAAgB4E,EAChB3E,YAAa4E,EACb3E,iBAAkB4E,EAClB3E,gBAAiB6E,EACjB5E,oBACAC,oBACAC,cAAeyE,KAGnBtK,GAAQ,KAWJC,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACrBjD,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GACnBpD,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CACIE,UAAQ,EACRE,GAAG,WACHxE,KAAK,WACLyE,MAAM,6CACNF,WAAS,EACTF,aAAa,cACb0E,aAAc7C,KAGtBnF,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GACnBpD,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CACIE,UAAQ,EACRE,GAAG,YACHxE,KAAK,YACLyE,MAAM,qBACNF,WAAS,EACTF,aAAa,aACb0E,aAAc5C,KAGtBpF,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACXnD,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CACIE,UAAQ,EACRE,GAAG,cACHxE,KAAK,cACLyE,MAAM,kFACNF,WAAS,EACTF,aAAa,MACbM,KAAK,QACLoE,aAAc3C,KAGtBrF,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACXnD,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CACII,GAAG,mBACHxE,KAAK,mBACLyE,MAAM,sGACNF,WAAS,EACTF,aAAa,MACbM,KAAK,QACLoE,aAAc1C,KAGtBtF,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACXnD,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CACIE,UAAQ,EACRE,GAAG,UACHxE,KAAK,UACLyE,MAAM,iCACNF,WAAS,EACTF,aAAa,iBACb0E,aAAczC,KAGtBvF,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACXnD,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CACII,GAAG,eACHxE,KAAK,eACLyE,MAAM,qDACNF,WAAS,EACTF,aAAa,iBACb0E,aAAcxC,KAGtBxF,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GACnBpD,EAAAC,EAAAC,cAAC0I,GAAA,EAAD,CACIC,YAAaC,KACbC,cAAc,MAEd/I,EAAAC,EAAAC,cAACqK,GAAA,EAAD,CACI7G,MAAM,6EACNQ,MAAOwB,EACP3B,SAAU,SAACyG,GAAD,OAAcb,EAAqBa,IAC7CtB,YAAa,SAACC,GAAD,OAAYnJ,EAAAC,EAAAC,cAACmD,EAAA,EAAD/E,OAAAC,OAAA,CAAWiF,WAAS,GAAK2F,SAI9DnJ,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GACnBpD,EAAAC,EAAAC,cAAC0I,GAAA,EAAD,CACIC,YAAaC,KACbC,cAAc,MAEd/I,EAAAC,EAAAC,cAACqK,GAAA,EAAD,CACI7G,MAAM,mFACNQ,MAAOyB,EACP5B,SAAU,SAACyG,GAAD,OAAcV,EAAqBU,IAC7CtB,YAAa,SAACC,GAAD,OAAYnJ,EAAAC,EAAAC,cAACmD,EAAA,EAAD/E,OAAAC,OAAA,CAAWiF,WAAS,GAAK2F,SAI9DnJ,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACXnD,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CACIE,UAAQ,EACRE,GAAG,UACHxE,KAAK,UACLyE,MAAM,sHACNF,WAAS,EACTF,aAAa,eACb0E,aAAcvC,KAGtBzF,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACXnD,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CACIE,UAAQ,EACRE,GAAG,YACHxE,KAAK,YACLyE,MAAM,yDACNF,WAAS,EACTF,aAAa,YACb0E,aAAcpC,MAI1B5F,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAKC,GAAI,CAACE,QAAS,OAAQmG,eAAgB,gBAAiBpF,GAAI,IAC5D9C,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CAAQgE,QA9JL,WACftH,EAASgG,OA6JG,kCAGA7G,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CAAQ3F,QAAQ,YAAYoF,KAAK,UAAjC,sCCjHL6G,GA/DI,WAAM,IAAApC,EACeZ,YAAYnD,GAAzCuB,EADcwC,EACdxC,OAAQC,EADMuC,EACNvC,kBACTjF,EAAWC,cAFIC,EAIGC,oBAAS,GAJZC,EAAA3C,OAAA4C,EAAA,EAAA5C,CAAAyC,EAAA,GAIdjB,EAJcmB,EAAA,GAIRlB,EAJQkB,EAAA,GAuBrB,OACIjB,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2H,SAAA,KACI5H,EAAAC,EAAAC,cAACqB,EAAD,CAAazB,KAAMA,EAAMC,QAASA,IAClCC,EAAAC,EAAAC,cAAC7B,EAAA,EAAD,CAAYG,QAAQ,KAAKqJ,cAAY,GAArC,iGAGA7H,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAKH,UAAU,OAAOc,SAnBT,SAACC,GAClBA,EAAMC,iBACN,IAAMC,EAAO,IAAIC,SAASH,EAAMI,eAC1BiD,EAASnD,EAAKG,IAAI,UAClB6H,EAAchI,EAAKG,IAAI,eAEzBgD,GAAU6E,EACV7J,EAASuG,EAAc,CAACvB,SAAQC,kBAAmB4E,KAEnD3K,GAAQ,KAWJC,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,CACIC,kBAAgB,iBAChB9I,KAAK,sBACL+I,aAAcnC,GAEd7F,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CAAkB5E,KAAK,SAASiF,MAAM,6CAAUF,QAAShE,EAAAC,EAAAC,cAAC+H,EAAA,EAAD,MAAUvE,MAAM,+CACzE1D,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CAAkB5E,KAAK,SAASiF,MAAM,iCAAQF,QAAShE,EAAAC,EAAAC,cAAC+H,EAAA,EAAD,MAAUvE,MAAM,mCACvE1D,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CAAkB5E,KAAK,SAASiF,MAAM,uCAASF,QAAShE,EAAAC,EAAAC,cAAC+H,EAAA,EAAD,MAAUvE,MAAM,0CAE5E1D,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CACI2E,aAAclC,EACd7G,KAAK,cACLsE,UAAQ,EACRE,GAAG,8BACHC,MAAM,mDACNiH,WAAS,EACTC,QAAS,EACTC,YAAY,izBACZrH,WAAS,IAEbxD,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAKC,GAAI,CAACE,QAAS,OAAQmG,eAAgB,gBAAiBpF,GAAI,IAC5D9C,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CAAQgE,QA7CL,WACftH,EAASgG,OA4CG,kCAGA7G,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CAAQ3F,QAAQ,YAAYoF,KAAK,UAAjC,sCCZLkH,GAlDF,WAAM,IACR/E,EAAY0B,YAAYnD,GAAxByB,SACDlF,EAAWC,cAFFC,EAISC,oBAAS,GAJlBC,EAAA3C,OAAA4C,EAAA,EAAA5C,CAAAyC,EAAA,GAIRjB,EAJQmB,EAAA,GAIFlB,EAJEkB,EAAA,GAsBf,OACIjB,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2H,SAAA,KACI5H,EAAAC,EAAAC,cAACqB,EAAD,CAAazB,KAAMA,EAAMC,QAASA,IAClCC,EAAAC,EAAAC,cAAC7B,EAAA,EAAD,CAAYG,QAAQ,KAAKqJ,cAAY,GAArC,2FAGA7H,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAKH,UAAU,OAAOc,SAlBT,SAACC,GAClBA,EAAMC,iBACN,IACMsI,EADO,IAAIpI,SAASH,EAAMI,eACdC,IAAI,QAElBkI,EACAlK,EAASwG,EAAY,CAACtB,SAAUgF,KAEhChL,GAAQ,KAWJC,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,CACIC,kBAAgB,eAChB9I,KAAK,sBACL+I,aAAcjC,GAEd/F,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CAAkB5E,KAAK,OAAOiF,MAAM,iCAAQF,QAAShE,EAAAC,EAAAC,cAAC+H,EAAA,EAAD,MAAUvE,MAAM,8EACrE1D,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CAAkB5E,KAAK,OAAOiF,MAAM,8CAAWF,QAAShE,EAAAC,EAAAC,cAAC+H,EAAA,EAAD,MAAUvE,MAAM,4FAE5E1D,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAKC,GAAI,CAACE,QAAS,OAAQmG,eAAgB,gBAAiBpF,GAAI,IAC5D9C,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CAAQgE,QAhCL,WACftH,EAASgG,OA+BG,kCAGA7G,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CAAQ3F,QAAQ,YAAYoF,KAAK,UAAjC,sCCiBLoH,GArDE,WAAM,IACZhF,EAAQyB,YAAYnD,GAApB0B,KACDnF,EAAWC,cAFEC,EAIKC,oBAAS,GAJdC,EAAA3C,OAAA4C,EAAA,EAAA5C,CAAAyC,EAAA,GAIZjB,EAJYmB,EAAA,GAINlB,EAJMkB,EAAA,GAsBnB,OACIjB,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2H,SAAA,KACI5H,EAAAC,EAAAC,cAACqB,EAAD,CAAazB,KAAMA,EAAMC,QAASA,IAClCC,EAAAC,EAAAC,cAAC7B,EAAA,EAAD,CAAYG,QAAQ,KAAKqJ,cAAY,GAArC,8JAGA7H,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAKH,UAAU,OAAOc,SAlBT,SAACC,GAClBA,EAAMC,iBACN,IACMuD,EADO,IAAIrD,SAASH,EAAMI,eACdC,IAAI,QAElBmD,EACAnF,EAASyG,EAAY,CAACtB,UAEtBjG,GAAQ,KAWJC,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,CACIC,kBAAgB,eAChB9I,KAAK,sBACL+I,aAAchC,GAEdhG,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CAAkB5E,KAAK,OAAOiF,MAAM,oCAAWF,QAAShE,EAAAC,EAAAC,cAAC+H,EAAA,EAAD,MAAUvE,MAAM,sHACxE1D,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CAAkB5E,KAAK,OAAOiF,MAAM,oCAAWF,QAAShE,EAAAC,EAAAC,cAAC+H,EAAA,EAAD,MAAUvE,MAAM,sHACxE1D,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CAAkB5E,KAAK,OAAOiF,MAAM,uBAAQF,QAAShE,EAAAC,EAAAC,cAAC+H,EAAA,EAAD,MAAUvE,MAAM,uGACrE1D,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CAAkB5E,KAAK,OAAOiF,MAAM,6BAASF,QAAShE,EAAAC,EAAAC,cAAC+H,EAAA,EAAD,MAAUvE,MAAM,+GACtE1D,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CAAkB5E,KAAK,OAAOiF,MAAM,8CAAWF,QAAShE,EAAAC,EAAAC,cAAC+H,EAAA,EAAD,MAAUvE,MAAM,gIAE5E1D,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAKC,GAAI,CAACE,QAAS,OAAQmG,eAAgB,gBAAiBpF,GAAI,IAC5D9C,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CAAQgE,QAnCL,WACftH,EAASgG,OAkCG,kCAGA7G,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CAAQ3F,QAAQ,YAAYoF,KAAK,UAAjC,sCCiKLqH,GA9MA,WAAM,IAAA5C,EAYbZ,YAAYnD,GAVZ4B,EAFamC,EAEbnC,WACAC,EAHakC,EAGblC,YACAC,EAJaiC,EAIbjC,QACAC,EALagC,EAKbhC,aACAC,EANa+B,EAMb/B,UACAC,EAPa8B,EAOb9B,eACAC,EARa6B,EAQb7B,cACiB0E,EATJ7C,EASb5B,gBACiB0E,EAVJ9C,EAUb3B,gBACAC,EAXa0B,EAWb1B,YAEE9F,EAAWC,cAbA0I,EAe6BC,IAAMzI,SAAuBkK,GAf1DxB,EAAApL,OAAA4C,EAAA,EAAA5C,CAAAkL,EAAA,GAeV/C,EAfUiD,EAAA,GAeO0B,EAfP1B,EAAA,GAAAE,EAgB6BH,IAAMzI,SAAuBmK,GAhB1DtB,EAAAvL,OAAA4C,EAAA,EAAA5C,CAAAsL,EAAA,GAgBVlD,EAhBUmD,EAAA,GAgBOwB,EAhBPxB,EAAA,GAAA9I,EAiBOC,oBAAS,GAjBhBC,EAAA3C,OAAA4C,EAAA,EAAA5C,CAAAyC,EAAA,GAiBVjB,EAjBUmB,EAAA,GAiBJlB,EAjBIkB,EAAA,GAAAE,EAmBGH,mBAAS,IAnBZI,EAAA9C,OAAA4C,EAAA,EAAA5C,CAAA6C,EAAA,GAmBV8E,EAnBU7E,EAAA,GAmBNkK,EAnBMlK,EAAA,GAqBXsG,EAAWC,cAsCjB,OACI3H,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2H,SAAA,KACI5H,EAAAC,EAAAC,cAACqB,EAAD,CAAazB,KAAMA,EAAMC,QAASA,IAClCC,EAAAC,EAAAC,cAAC7B,EAAA,EAAD,CAAYG,QAAQ,KAAKqJ,cAAY,GAArC,+HAGA7H,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAKH,UAAU,OAAOc,SAtCT,SAACC,GAClBA,EAAMC,iBACN,IAAMC,EAAO,IAAIC,SAASH,EAAMI,eAC1BmH,EAAWrH,EAAKG,IAAI,YACpBmH,EAAYtH,EAAKG,IAAI,aACrBoH,EAAcvH,EAAKG,IAAI,eACvBqH,EAAmBxH,EAAKG,IAAI,oBAC5BsH,EAAUzH,EAAKG,IAAI,WACnBuH,EAAe1H,EAAKG,IAAI,gBACxBwH,EAAY3H,EAAKG,IAAI,aACrByH,EAAU5H,EAAKG,IAAI,WAEd,6BAAPoD,GAAiB8D,GAAYC,GAAaC,GAAeE,GAAWE,GAAaC,GACjFzJ,EAAS0G,GAAc,CACnBtB,KACAC,WAAY6D,EACZ5D,YAAa6D,EACb5D,QAAS6D,EACT5D,aAAc6D,EACd5D,UAAW6D,EACX5D,eAAgB6D,EAChB5D,cAAe8D,EACf7D,kBACAC,kBACAC,YAAa0D,KAEjB3C,EAAS,mBAET3H,GAAQ,KAWJC,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,CACIC,kBAAgB,aAChB9I,KAAK,sBACLiF,MAAO+B,EACPlC,SAAU,SAAAkF,GAAC,OAAIqC,EAAMrC,EAAEsC,OAAOrH,SAE9BlE,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CAAkBK,MAAM,2BAAOF,QAAShE,EAAAC,EAAAC,cAAC+H,EAAA,EAAD,MAAUvE,MAAM,6BACxD1D,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CAAkBK,MAAM,uCAASF,QAAShE,EAAAC,EAAAC,cAAC+H,EAAA,EAAD,MAAUvE,MAAM,0CAEtD,yCAAPuC,GACGjG,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACrBjD,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GACnBpD,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CACIE,UAAQ,EACRE,GAAG,WACHxE,KAAK,WACLyE,MAAM,6CACNF,WAAS,EACTF,aAAa,cACb0E,aAAc9B,KAGtBlG,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GACnBpD,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CACIE,UAAQ,EACRE,GAAG,YACHxE,KAAK,YACLyE,MAAM,qBACNF,WAAS,EACTF,aAAa,aACb0E,aAAc7B,KAGtBnG,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACXnD,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CACIE,UAAQ,EACRE,GAAG,cACHxE,KAAK,cACLyE,MAAM,kFACNF,WAAS,EACTF,aAAa,MACbM,KAAK,QACLoE,aAAc5B,KAGtBpG,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACXnD,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CACII,GAAG,mBACHxE,KAAK,mBACLyE,MAAM,sGACNF,WAAS,EACTF,aAAa,MACbM,KAAK,QACLoE,aAAc3B,KAGtBrG,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACXnD,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CACIE,UAAQ,EACRE,GAAG,UACHxE,KAAK,UACLyE,MAAM,iCACNF,WAAS,EACTF,aAAa,iBACb0E,aAAc1B,KAGtBtG,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACXnD,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CACII,GAAG,eACHxE,KAAK,eACLyE,MAAM,qDACNF,WAAS,EACTF,aAAa,iBACb0E,aAAczB,KAGtBvG,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GACnBpD,EAAAC,EAAAC,cAAC0I,GAAA,EAAD,CACIC,YAAaC,KACbC,cAAc,MAEd/I,EAAAC,EAAAC,cAACqK,GAAA,EAAD,CACI7G,MAAM,6EACNQ,MAAOuC,EACP1C,SAAU,SAACyG,GAAD,OAAcY,EAAmBZ,IAC3CtB,YAAa,SAACC,GAAD,OAAYnJ,EAAAC,EAAAC,cAACmD,EAAA,EAAD/E,OAAAC,OAAA,CAAWiF,WAAS,GAAK2F,SAI9DnJ,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GACnBpD,EAAAC,EAAAC,cAAC0I,GAAA,EAAD,CACIC,YAAaC,KACbC,cAAc,MAEd/I,EAAAC,EAAAC,cAACqK,GAAA,EAAD,CACI7G,MAAM,mFACNQ,MAAOwC,EACP3C,SAAU,SAACyG,GAAD,OAAca,EAAmBb,IAC3CtB,YAAa,SAACC,GAAD,OAAYnJ,EAAAC,EAAAC,cAACmD,EAAA,EAAD/E,OAAAC,OAAA,CAAWiF,WAAS,GAAK2F,SAI9DnJ,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACXnD,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CACIE,UAAQ,EACRE,GAAG,UACHxE,KAAK,UACLyE,MAAM,sHACNF,WAAS,EACTF,aAAa,eACb0E,aAAcxB,KAGtBxG,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACXnD,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CACIE,UAAQ,EACRE,GAAG,YACHxE,KAAK,YACLyE,MAAM,yDACNF,WAAS,EACTF,aAAa,YACb0E,aAAcrB,MAK9B3G,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAKC,GAAI,CAACE,QAAS,OAAQmG,eAAgB,gBAAiBpF,GAAI,IAC5D9C,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CAAQgE,QA3KL,WACftH,EAASgG,OA0KG,kCAGA7G,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CAAQ3F,QAAQ,YAAYoF,KAAK,UAAjC,kFCzLL4H,GArBI,WAEf,OACIxL,EAAAC,EAAAC,cAACuL,GAAA,EAAD,CACIC,SAAS,WACTjN,MAAM,UACNkN,UAAW,EACX9J,GAAI,CACA6J,SAAU,WACVE,aAAc,SAACC,GAAD,mBAAAC,OAAoBD,EAAEE,QAAQC,YAGhDhM,EAAAC,EAAAC,cAAC+L,GAAA,EAAD,KACIjM,EAAAC,EAAAC,cAAC7B,EAAA,EAAD,CAAYG,QAAQ,KAAKC,MAAM,UAAUyN,QAAM,GAA/C,yGCkDDC,GAnDI,WAAM,IACdtH,EAAQ4C,YAAYnD,GAApBO,KAEDuH,EAAiBC,sBACnB,SAACxH,GACG,OAAQA,GACJ,KAAK,EACD,OAAO7E,EAAAC,EAAAC,cAACoM,GAAD,MACX,KAAK,EACD,OAAOtM,EAAAC,EAAAC,cAACqM,GAAD,MACX,KAAK,EACD,OAAOvM,EAAAC,EAAAC,cAACsM,GAAD,MACX,KAAK,EACD,OAAOxM,EAAAC,EAAAC,cAACuM,GAAD,MACX,KAAK,EACD,OAAOzM,EAAAC,EAAAC,cAACwM,GAAD,MACX,KAAK,EACD,OAAO1M,EAAAC,EAAAC,cAACyM,GAAD,MACX,KAAK,EACD,OAAO3M,EAAAC,EAAAC,cAAC0M,GAAD,MACX,KAAK,EACD,OAAO5M,EAAAC,EAAAC,cAAC2M,GAAD,QAEhB,IAEP,OACI7M,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2H,SAAA,KACI5H,EAAAC,EAAAC,cAACyB,EAAA,EAAD,MACA3B,EAAAC,EAAAC,cAAC4M,GAAD,MACA9M,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,KAAKG,GAAI,CAACuC,GAAI,IAC/CpE,EAAAC,EAAAC,cAAC6M,EAAA,EAAD,CAAOvO,QAAQ,WAAWqD,GAAI,CAACmL,GAAI,CAAC7J,GAAI,EAAG8J,GAAI,GAAIC,EAAG,CAAC/J,GAAI,EAAG8J,GAAI,KAC9DjN,EAAAC,EAAAC,cAAC7B,EAAA,EAAD,CAAYoD,UAAU,KAAKjD,QAAQ,KAAKE,MAAM,UAA9C,iEAGAsB,EAAAC,EAAAC,cAACiN,EAAA,EAAD,CAASC,WAAYvI,EAAMwI,kBAAgB,EAACxL,GAAI,CAACyL,GAAI,EAAGC,GAAI,IACvDC,MAAM,GAAGC,KAAK,IAAIC,IAAI,SAACC,EAAIC,GAAL,OACnB5N,EAAAC,EAAAC,cAAC2N,EAAA,EAAD,CAAMC,IAAKF,GACP5N,EAAAC,EAAAC,cAAC6N,EAAA,EAAD,UAIZ/N,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2H,SAAA,KACKwE,EAAevH,KAGxB7E,EAAAC,EAAAC,cAACmE,EAAD,6BCkID2J,GArLS,WAAM,IAAA3F,EAoCpBZ,YAAYnD,GAlCdO,EAFsBwD,EAEtBxD,KACAC,EAHsBuD,EAGtBvD,KACAlB,EAJsByE,EAItBzE,KACAmB,EALsBsD,EAKtBtD,WACAC,EANsBqD,EAMtBrD,YACAC,EAPsBoD,EAOtBpD,aACAC,EARsBmD,EAQtBnD,YACAC,EATsBkD,EAStBlD,aACAC,EAVsBiD,EAUtBjD,cACAC,EAXsBgD,EAWtBhD,UACAC,EAZsB+C,EAYtB/C,eACAC,EAbsB8C,EAatB9C,YACAC,EAdsB6C,EActB7C,iBACAC,EAfsB4C,EAetB5C,gBACAC,EAhBsB2C,EAgBtB3C,kBACAC,EAjBsB0C,EAiBtB1C,kBACAC,EAlBsByC,EAkBtBzC,cACAC,EAnBsBwC,EAmBtBxC,OACAC,EApBsBuC,EAoBtBvC,kBACAC,EArBsBsC,EAqBtBtC,SACAC,EAtBsBqC,EAsBtBrC,KAEAC,EAxBsBoC,EAwBtBpC,GACAC,EAzBsBmC,EAyBtBnC,WACAC,EA1BsBkC,EA0BtBlC,YACAC,EA3BsBiC,EA2BtBjC,QACAC,EA5BsBgC,EA4BtBhC,aACAC,EA7BsB+B,EA6BtB/B,UACAC,EA9BsB8B,EA8BtB9B,eACAC,EA/BsB6B,EA+BtB7B,cACAC,EAhCsB4B,EAgCtB5B,gBACAC,EAjCsB2B,EAiCtB3B,gBACAC,EAlCsB0B,EAkCtB1B,YAIEe,EAAWC,cAQjB,OANAsG,oBAAU,WACFpJ,EAAO,GACP6C,EAAS,YAEd,IAGC1H,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2H,SAAA,KACI5H,EAAAC,EAAAC,cAACyB,EAAA,EAAD,MACA3B,EAAAC,EAAAC,cAAC4M,GAAD,MACA9M,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,KAAKG,GAAI,CAACuC,GAAI,IAC/CpE,EAAAC,EAAAC,cAAC6M,EAAA,EAAD,CAAOvO,QAAQ,WAAWqD,GAAI,CAACmL,GAAI,CAAC7J,GAAI,EAAG8J,GAAI,GAAIC,EAAG,CAAC/J,GAAI,EAAG8J,GAAI,KAC9DjN,EAAAC,EAAAC,cAAC7B,EAAA,EAAD,CAAYoD,UAAU,KAAKjD,QAAQ,KAAKE,MAAM,UAA9C,yFAGAsB,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACrBjD,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GACnBpD,EAAAC,EAAAC,cAAC7B,EAAA,EAAD,CAAYG,QAAQ,KAAKE,MAAM,UAA/B,uEAGAsB,EAAAC,EAAAC,cAAC7B,EAAA,EAAD,CAAYG,QAAQ,aAApB,kEACkBsG,GAElB9E,EAAAC,EAAAC,cAAC7B,EAAA,EAAD,CAAYG,QAAQ,aAApB,6GAC0BoF,GAE1B5D,EAAAC,EAAAC,cAAC7B,EAAA,EAAD,CAAYG,QAAQ,aAApB,kEACkB0P,KAAMnJ,GAAYoJ,OAAO,eAE3CnO,EAAAC,EAAAC,cAAC7B,EAAA,EAAD,CAAYG,QAAQ,aAApB,0HAC6BwG,GAE7BhF,EAAAC,EAAAC,cAAC7B,EAAA,EAAD,CAAYG,QAAQ,aAApB,kHAC0ByG,EAAe,eAAO,sBAE/CA,GACGjF,EAAAC,EAAAC,cAAC7B,EAAA,EAAD,CAAYG,QAAQ,aAApB,6GAC0B0G,GAG9BlF,EAAAC,EAAAC,cAAC7B,EAAA,EAAD,CAAYG,QAAQ,aAApB,+CACc2G,GAEdnF,EAAAC,EAAAC,cAAC7B,EAAA,EAAD,CAAYG,QAAQ,aAApB,uBACU4G,GAEVpF,EAAAC,EAAAC,cAAC7B,EAAA,EAAD,CAAYG,QAAQ,aAApB,oFACqB6G,GAErBrF,EAAAC,EAAAC,cAAC7B,EAAA,EAAD,CAAYG,QAAQ,aAApB,wGAC0B8G,GAE1BtF,EAAAC,EAAAC,cAAC7B,EAAA,EAAD,CAAYG,QAAQ,aAApB,mCACY+G,GAEZvF,EAAAC,EAAAC,cAAC7B,EAAA,EAAD,CAAYG,QAAQ,aAApB,uDACiBgH,GAEjBxF,EAAAC,EAAAC,cAAC7B,EAAA,EAAD,CAAYG,QAAQ,aAApB,+EACqB0P,KAAMxI,GAAmByI,OAAO,YAErDnO,EAAAC,EAAAC,cAAC7B,EAAA,EAAD,CAAYG,QAAQ,aAApB,qFACsB0P,KAAMvI,GAAmBwI,OAAO,YAEtDnO,EAAAC,EAAAC,cAAC7B,EAAA,EAAD,CAAYG,QAAQ,aAApB,wHAC2BiH,GAE3BzF,EAAAC,EAAAC,cAAC7B,EAAA,EAAD,CAAYG,QAAQ,aAApB,2DACgBoH,GAEhB5F,EAAAC,EAAAC,cAAC7B,EAAA,EAAD,CAAYG,QAAQ,aAApB,iGACwBqH,GAExB7F,EAAAC,EAAAC,cAAC7B,EAAA,EAAD,CAAYG,QAAQ,aAApB,oFACqBsH,GAErB9F,EAAAC,EAAAC,cAAC7B,EAAA,EAAD,CAAYG,QAAQ,aAApB,2FACuBuH,GAEvB/F,EAAAC,EAAAC,cAAC7B,EAAA,EAAD,CAAYG,QAAQ,aAApB,8JACmCwH,IAGvChG,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GACnBpD,EAAAC,EAAAC,cAAC7B,EAAA,EAAD,CAAYG,QAAQ,KAAKE,MAAM,UAA/B,2DAGAsB,EAAAC,EAAAC,cAAC7B,EAAA,EAAD,CAAYG,QAAQ,aAApB,oFACqByH,GAEb,yCAAPA,GACGjG,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2H,SAAA,KACI5H,EAAAC,EAAAC,cAAC7B,EAAA,EAAD,CAAYG,QAAQ,aAApB,+CACc0H,GAEdlG,EAAAC,EAAAC,cAAC7B,EAAA,EAAD,CAAYG,QAAQ,aAApB,uBACU2H,GAEVnG,EAAAC,EAAAC,cAAC7B,EAAA,EAAD,CAAYG,QAAQ,aAApB,oFACqB4H,GAErBpG,EAAAC,EAAAC,cAAC7B,EAAA,EAAD,CAAYG,QAAQ,aAApB,wGAC0B6H,GAE1BrG,EAAAC,EAAAC,cAAC7B,EAAA,EAAD,CAAYG,QAAQ,aAApB,mCACY8H,GAEZtG,EAAAC,EAAAC,cAAC7B,EAAA,EAAD,CAAYG,QAAQ,aAApB,uDACiB+H,GAEjBvG,EAAAC,EAAAC,cAAC7B,EAAA,EAAD,CAAYG,QAAQ,aAApB,+EACqB0P,KAAMzH,GAAiB0H,OAAO,YAEnDnO,EAAAC,EAAAC,cAAC7B,EAAA,EAAD,CAAYG,QAAQ,aAApB,qFACsB0P,KAAMxH,GAAiByH,OAAO,YAEpDnO,EAAAC,EAAAC,cAAC7B,EAAA,EAAD,CAAYG,QAAQ,aAApB,wHAC2BgI,GAE3BxG,EAAAC,EAAAC,cAAC7B,EAAA,EAAD,CAAYG,QAAQ,aAApB,2DACgBmI,MAMhC3G,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAKC,GAAI,CAACE,QAAS,OAAQmG,eAAgB,gBAAiBpF,GAAI,IAC5D9C,EAAAC,EAAAC,cAACiE,EAAA,EAAD,uCAGAnE,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CAAQ3F,QAAQ,YAAYoF,KAAK,UAAjC,wEAKR5D,EAAAC,EAAAC,cAACmE,EAAD,SC/ID+J,GAnCI,WACf,IAAM1G,EAAWC,cAEjB,OACI3H,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2H,SAAA,KACI5H,EAAAC,EAAAC,cAACyB,EAAA,EAAD,MACA3B,EAAAC,EAAAC,cAAC4M,GAAD,MACA9M,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,KAAKG,GAAI,CAACuC,GAAI,IAC/CpE,EAAAC,EAAAC,cAAC6M,EAAA,EAAD,CAAOvO,QAAQ,WAAWqD,GAAI,CAACmL,GAAI,CAAC7J,GAAI,EAAG8J,GAAI,GAAIC,EAAG,CAAC/J,GAAI,EAAG8J,GAAI,KAC9DjN,EAAAC,EAAAC,cAAC7B,EAAA,EAAD,CAAYoD,UAAU,KAAKjD,QAAQ,KAAKE,MAAM,UAA9C,6GAGAsB,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAKC,GAAI,CAACE,QAAS,OAAQmG,eAAgB,eAAgBpF,GAAI,IAC3D9C,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CACI3F,QAAQ,YACR6P,KAAK,QACLlG,QAAS,kBAAMT,EAAS,eAH5B,oDAOA1H,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CACI3F,QAAQ,YACR6P,KAAK,QACLlG,QAAS,kBAAMT,EAAS,cAH5B,oCASR1H,EAAAC,EAAAC,cAACmE,EAAD,SCkCVO,GAAc5F,YAAY,CAC5BC,KAAM,WACNC,aAnCwB,CACxB2F,KAAM,EACNoB,GAAI,GACJrC,KAAM,GACN0K,MAAO,GACP/F,KAAM,KACNgG,UAAW,GACXpJ,aAAc,GACdC,cAAe,GACfC,UAAW,GACXC,eAAgB,GAChBC,YAAa,GACbC,iBAAkB,GAClBC,gBAAiB,GACjBC,kBAAmB,KACnBC,kBAAmB,KACnBC,cAAe,GACfC,OAAQ,GACRC,kBAAmB,GACnBI,WAAY,GACZC,YAAa,GACbC,QAAS,GACTC,aAAc,GACdC,UAAW,GACXC,eAAgB,GAChBC,cAAe,GACfC,gBAAiB,KACjBC,gBAAiB,KACjBC,YAAa,GACbZ,SAAU,GACVC,KAAM,IAMN5G,SAAU,CACNyH,cADM,SACQvH,KACRA,EAAMuF,MAEZ2J,UAJM,SAIIlP,EAAOyH,KACXzH,EAAMuF,KACRvF,EAAM2G,GAAKc,EAAOC,SAEtBC,YARM,SAQM3H,EAAOyH,KACbzH,EAAMuF,KACRvF,EAAMsE,KAAOmD,EAAOC,SAExBE,YAZM,SAYM5H,EAAOyH,KAKbzH,EAAMuF,KACRvF,EAAMgP,MAAQvH,EAAOC,QAAQsH,MAC7BhP,EAAMiJ,KAAOxB,EAAOC,QAAQuB,KAC5BjJ,EAAMiP,UAAYxH,EAAOC,QAAQuH,WAErCzH,YAtBM,SAsBMxH,EAAOyH,KAYbzH,EAAMuF,KACRvF,EAAM6F,aAAe4B,EAAOC,QAAQ7B,aACpC7F,EAAM8F,cAAgB2B,EAAOC,QAAQ5B,cACrC9F,EAAM+F,UAAY0B,EAAOC,QAAQ3B,UACjC/F,EAAMgG,eAAiByB,EAAOC,QAAQ1B,eACtChG,EAAMiG,YAAcwB,EAAOC,QAAQzB,YACnCjG,EAAMkG,iBAAmBuB,EAAOC,QAAQxB,iBACxClG,EAAMmG,gBAAkBsB,EAAOC,QAAQvB,gBACvCnG,EAAMoG,kBAAoBqB,EAAOC,QAAQtB,kBACzCpG,EAAMqG,kBAAoBoB,EAAOC,QAAQrB,kBACzCrG,EAAMsG,cAAgBmB,EAAOC,QAAQpB,eAEzCwB,cA9CM,SA8CQ9H,EAAOyH,KAIfzH,EAAMuF,KACRvF,EAAMuG,OAASkB,EAAOC,QAAQnB,OAC9BvG,EAAMwG,kBAAoBiB,EAAOC,QAAQlB,mBAE7C2I,eAtDM,SAsDSnP,EAAOyH,KAYhBzH,EAAMuF,KACRvF,EAAM4G,WAAaa,EAAOC,QAAQd,WAClC5G,EAAM6G,YAAcY,EAAOC,QAAQb,YACnC7G,EAAM8G,QAAUW,EAAOC,QAAQZ,QAC/B9G,EAAM+G,aAAeU,EAAOC,QAAQX,aACpC/G,EAAMgH,UAAYS,EAAOC,QAAQV,UACjChH,EAAMiH,eAAiBQ,EAAOC,QAAQT,eACtCjH,EAAMkH,cAAgBO,EAAOC,QAAQR,cACrClH,EAAMmH,gBAAkBM,EAAOC,QAAQP,gBACvCnH,EAAMoH,gBAAkBK,EAAOC,QAAQN,gBACvCpH,EAAMqH,YAAcI,EAAOC,QAAQL,aAEvCU,YA9EM,SA8EM/H,EAAOyH,KACbzH,EAAMuF,KACRvF,EAAMyG,SAAWgB,EAAOC,QAAQjB,UAEpCuB,YAlFM,SAkFMhI,EAAOyH,KACbzH,EAAMuF,KACRvF,EAAM0G,KAAOe,EAAOC,QAAQhB,YAepCpB,GAAYjF,QATZkH,oBACA2H,gBACAvH,kBACAC,kBACAJ,kBACAM,oBACAqH,qBACApH,kBACAC,kBAEW1C,MAAf,QCjHe4C,GAlDE,WAAM,IAAAzG,EACKC,oBAAS,GADdC,EAAA3C,OAAA4C,EAAA,EAAA5C,CAAAyC,EAAA,GACZjB,EADYmB,EAAA,GACNlB,EADMkB,EAAA,GAEZgF,EAAMwB,YAAYjD,GAAlByB,GACDpF,EAAWC,cACX4G,EAAWC,cAkBjB,OACI3H,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2H,SAAA,KACI5H,EAAAC,EAAAC,cAACqB,EAAD,CAAazB,KAAMA,EAAMC,QAASA,IAClCC,EAAAC,EAAAC,cAAC7B,EAAA,EAAD,CAAYG,QAAQ,KAAKqJ,cAAY,GAArC,4DAGA7H,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAKH,UAAU,OAAOc,SAlBT,SAACC,GAClBA,EAAMC,iBACN,IACMwD,EADO,IAAItD,SAASH,EAAMI,eAChBC,IAAI,MAEhBoD,EACApF,EAAS2N,GAAUvI,IAEnBlG,GAAQ,KAWJC,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,CACIC,kBAAgB,eAChB9I,KAAK,sBACL+I,aAAc/B,GAEdjG,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CAAkB5E,KAAK,KAAKiF,MAAM,uCAASF,QAAShE,EAAAC,EAAAC,cAAC+H,EAAA,EAAD,MAAUvE,MAAM,yCACpE1D,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CAAkB5E,KAAK,KAAKiF,MAAM,yDAAYF,QAAShE,EAAAC,EAAAC,cAAC+H,EAAA,EAAD,MAAUvE,MAAM,4DAE3E1D,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAKC,GAAI,CAACE,QAAS,OAAQmG,eAAgB,gBAAiBpF,GAAI,IAC5D9C,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CAAQgE,QAhCL,WACfT,EAAS,aA+BG,kCAGA1H,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CAAQP,KAAK,SAASpF,QAAQ,aAA9B,sCCOL4J,GAjDE,WAAM,IAAArH,EACKC,oBAAS,GADdC,EAAA3C,OAAA4C,EAAA,EAAA5C,CAAAyC,EAAA,GACZjB,EADYmB,EAAA,GACNlB,EADMkB,EAAA,GAEZ2C,EAAQ6D,YAAYjD,GAApBZ,KACD/C,EAAWC,cAkBjB,OACId,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2H,SAAA,KACI5H,EAAAC,EAAAC,cAACqB,EAAD,CAAazB,KAAMA,EAAMC,QAASA,IAClCC,EAAAC,EAAAC,cAAC7B,EAAA,EAAD,CAAYG,QAAQ,KAAKqJ,cAAY,GAArC,uGAGA7H,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAKH,UAAU,OAAOc,SAlBT,SAACC,GAClBA,EAAMC,iBACN,IACMmB,EADO,IAAIjB,SAASH,EAAMI,eACdC,IAAI,QAElBe,EACA/C,EAASoG,GAAYrD,IAErB7D,GAAQ,KAWJC,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,CACIC,kBAAgB,eAChB9I,KAAK,sBACL+I,aAAcpE,GAEd5D,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CAAkB5E,KAAK,OAAOiF,MAAM,2BAAOF,QAAShE,EAAAC,EAAAC,cAAC+H,EAAA,EAAD,MAAUvE,MAAM,6BACpE1D,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CAAkB5E,KAAK,OAAOiF,MAAM,iCAAQF,QAAShE,EAAAC,EAAAC,cAAC+H,EAAA,EAAD,MAAUvE,MAAM,oCAEzE1D,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAKC,GAAI,CAACE,QAAS,OAAQmG,eAAgB,gBAAiBpF,GAAI,IAC5D9C,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CAAQgE,QAhCL,WACftH,EAASgG,QA+BG,kCAGA7G,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CAAQP,KAAK,SAASpF,QAAQ,aAA9B,sCCyCLK,GA7EE,WAAM,IAAAkC,EACKC,oBAAS,GADdC,EAAA3C,OAAA4C,EAAA,EAAA5C,CAAAyC,EAAA,GACZjB,EADYmB,EAAA,GACNlB,EADMkB,EAAA,GAAAoH,EAEyBZ,YAAYjD,GAAjD8J,EAFYjG,EAEZiG,MAAaI,EAFDrG,EAELE,KAAiBgG,EAFZlG,EAEYkG,UACzB1N,EAAWC,cAHEK,EAKKH,mBAAuB0N,GAL5BtN,EAAA9C,OAAA4C,EAAA,EAAA5C,CAAA6C,EAAA,GAKZoH,EALYnH,EAAA,GAKNoH,EALMpH,EAAA,GAwBnB,OACIpB,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2H,SAAA,KACI5H,EAAAC,EAAAC,cAACqB,EAAD,CAAazB,KAAMA,EAAMC,QAASA,IAClCC,EAAAC,EAAAC,cAAC7B,EAAA,EAAD,CAAYG,QAAQ,KAAKqJ,cAAY,GAArC,2IAGA7H,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAKH,UAAU,OAAOc,SAnBT,SAACC,GAClBA,EAAMC,iBACN,IAAMC,EAAO,IAAIC,SAASH,EAAMI,eAC1B0L,EAAQ5L,EAAKG,IAAI,SACjB0L,EAAY7L,EAAKG,IAAI,aAEvByL,GAASC,GAAahG,EACtB1H,EAASqG,GAAY,CAACoH,QAAOC,YAAWhG,UAExCxI,GAAQ,KAWJC,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACrBjD,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GACnBpD,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CACIE,UAAQ,EACRtE,KAAK,YACLyE,MAAM,sEACNF,WAAS,EACTF,aAAa,eACb0E,aAAcuG,KAGtBvO,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GACnBpD,EAAAC,EAAAC,cAAC0I,GAAA,EAAD,CACIC,YAAaC,KACbC,cAAc,MAEd/I,EAAAC,EAAAC,cAAC8I,GAAA,EAAD,CACItF,MAAM,gEACNQ,MAAOqE,EACPxE,SAAU,SAAAkF,GAAC,OAAIT,EAAQS,IACvBC,YAAa,SAACC,GAAD,OAAYnJ,EAAAC,EAAAC,cAACmD,EAAA,EAAD/E,OAAAC,OAAA,CAAWiF,WAAS,GAAK2F,UAKlEnJ,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,CACIC,kBAAgB,eAChB9I,KAAK,sBACL+I,aAAcsG,GAEdtO,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CAAkB5E,KAAK,QAAQiF,MAAM,6EAAiBF,QAAShE,EAAAC,EAAAC,cAAC+H,EAAA,EAAD,MAAUvE,MAAM,+EAC/E1D,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CAAkB5E,KAAK,QAAQiF,MAAM,gEAAcF,QAAShE,EAAAC,EAAAC,cAAC+H,EAAA,EAAD,MAAUvE,MAAM,mEAEhF1D,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAKC,GAAI,CAACE,QAAS,OAAQmG,eAAgB,gBAAiBpF,GAAI,IAC5D9C,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CAAQgE,QA1DL,WACftH,EAASgG,QAyDG,kCAGA7G,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CAAQP,KAAK,SAASpF,QAAQ,aAA9B,sCCyHLgJ,GA7LE,WAAM,IAAAa,EAYfZ,YAAYjD,GAVZW,EAFekD,EAEflD,aACAC,EAHeiD,EAGfjD,cACAC,EAJegD,EAIfhD,UACAC,EALe+C,EAKf/C,eACAC,EANe8C,EAMf9C,YACAC,EAPe6C,EAOf7C,iBACAC,EARe4C,EAQf5C,gBACmB6D,EATJjB,EASf3C,kBACmB6D,EAVJlB,EAUf1C,kBACAC,EAXeyC,EAWfzC,cAEE/E,EAAWC,cAbE0I,EAe+BC,IAAMzI,SAAuBsI,GAf5DI,EAAApL,OAAA4C,EAAA,EAAA5C,CAAAkL,EAAA,GAeZ9D,EAfYgE,EAAA,GAeOC,EAfPD,EAAA,GAAAE,EAgB+BH,IAAMzI,SAAuBuI,GAhB5DM,EAAAvL,OAAA4C,EAAA,EAAA5C,CAAAsL,EAAA,GAgBZjE,EAhBYkE,EAAA,GAgBOC,EAhBPD,EAAA,GAAA9I,EAiBKC,oBAAS,GAjBdC,EAAA3C,OAAA4C,EAAA,EAAA5C,CAAAyC,EAAA,GAiBZjB,EAjBYmB,EAAA,GAiBNlB,EAjBMkB,EAAA,GAqDnB,OACIjB,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2H,SAAA,KACI5H,EAAAC,EAAAC,cAACqB,EAAD,CAAazB,KAAMA,EAAMC,QAASA,IAClCC,EAAAC,EAAAC,cAAC7B,EAAA,EAAD,CAAYG,QAAQ,KAAKqJ,cAAY,GAArC,2KAGA7H,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAKH,UAAU,OAAOc,SApCT,SAACC,GAClBA,EAAMC,iBACN,IAAMC,EAAO,IAAIC,SAASH,EAAMI,eAC1BmH,EAAWrH,EAAKG,IAAI,YACpBmH,EAAYtH,EAAKG,IAAI,aACrBoH,EAAcvH,EAAKG,IAAI,eACvBqH,EAAmBxH,EAAKG,IAAI,oBAC5BsH,EAAUzH,EAAKG,IAAI,WACnBuH,EAAe1H,EAAKG,IAAI,gBACxBwH,EAAY3H,EAAKG,IAAI,aACrByH,EAAU5H,EAAKG,IAAI,WAErBkH,GAAYC,GAAaC,GAAeE,GAAWE,GAAaC,EAChEzJ,EAASiG,GAAY,CACjB3B,aAAc4E,EACd3E,cAAe4E,EACf3E,UAAW4E,EACX3E,eAAgB4E,EAChB3E,YAAa4E,EACb3E,iBAAkB4E,EAClB3E,gBAAiB6E,EACjB5E,oBACAC,oBACAC,cAAeyE,KAGnBtK,GAAQ,KAWJC,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACrBjD,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GACnBpD,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CACIE,UAAQ,EACRE,GAAG,WACHxE,KAAK,WACLyE,MAAM,6CACNF,WAAS,EACTF,aAAa,cACb0E,aAAc7C,KAGtBnF,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GACnBpD,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CACIE,UAAQ,EACRE,GAAG,YACHxE,KAAK,YACLyE,MAAM,qBACNF,WAAS,EACTF,aAAa,aACb0E,aAAc5C,KAGtBpF,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACXnD,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CACIE,UAAQ,EACRE,GAAG,cACHxE,KAAK,cACLyE,MAAM,kFACNF,WAAS,EACTF,aAAa,MACbM,KAAK,QACLoE,aAAc3C,KAGtBrF,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACXnD,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CACII,GAAG,mBACHxE,KAAK,mBACLyE,MAAM,sGACNF,WAAS,EACTF,aAAa,MACbM,KAAK,QACLoE,aAAc1C,KAGtBtF,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACXnD,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CACIE,UAAQ,EACRE,GAAG,UACHxE,KAAK,UACLyE,MAAM,iCACNF,WAAS,EACTF,aAAa,iBACb0E,aAAczC,KAGtBvF,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACXnD,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CACII,GAAG,eACHxE,KAAK,eACLyE,MAAM,qDACNF,WAAS,EACTF,aAAa,iBACb0E,aAAcxC,KAGtBxF,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GACnBpD,EAAAC,EAAAC,cAAC0I,GAAA,EAAD,CACIC,YAAaC,KACbC,cAAc,MAEd/I,EAAAC,EAAAC,cAACqK,GAAA,EAAD,CACI7G,MAAM,6EACNQ,MAAOwB,EACP3B,SAAU,SAACyG,GAAD,OAAcb,EAAqBa,IAC7CtB,YAAa,SAACC,GAAD,OAAYnJ,EAAAC,EAAAC,cAACmD,EAAA,EAAD/E,OAAAC,OAAA,CAAWiF,WAAS,GAAK2F,SAI9DnJ,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GACnBpD,EAAAC,EAAAC,cAAC0I,GAAA,EAAD,CACIC,YAAaC,KACbC,cAAc,MAEd/I,EAAAC,EAAAC,cAACqK,GAAA,EAAD,CACI7G,MAAM,mFACNQ,MAAOyB,EACP5B,SAAU,SAACyG,GAAD,OAAcV,EAAqBU,IAC7CtB,YAAa,SAACC,GAAD,OAAYnJ,EAAAC,EAAAC,cAACmD,EAAA,EAAD/E,OAAAC,OAAA,CAAWiF,WAAS,GAAK2F,SAI9DnJ,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACXnD,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CACIE,UAAQ,EACRE,GAAG,UACHxE,KAAK,UACLyE,MAAM,sHACNF,WAAS,EACTF,aAAa,eACb0E,aAAcvC,KAGtBzF,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACXnD,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CACIE,UAAQ,EACRE,GAAG,YACHxE,KAAK,YACLyE,MAAM,yDACNF,WAAS,EACTF,aAAa,YACb0E,aAAcpC,MAI1B5F,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAKC,GAAI,CAACE,QAAS,OAAQmG,eAAgB,gBAAiBpF,GAAI,IAC5D9C,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CAAQgE,QA9JL,WACftH,EAASgG,OA6JG,kCAGA7G,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CAAQ3F,QAAQ,YAAYoF,KAAK,UAAjC,sCCjHL6G,GA/DI,WAAM,IAAApC,EACeZ,YAAYjD,GAAzCqB,EADcwC,EACdxC,OAAQC,EADMuC,EACNvC,kBACTjF,EAAWC,cAFIC,EAIGC,oBAAS,GAJZC,EAAA3C,OAAA4C,EAAA,EAAA5C,CAAAyC,EAAA,GAIdjB,EAJcmB,EAAA,GAIRlB,EAJQkB,EAAA,GAuBrB,OACIjB,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2H,SAAA,KACI5H,EAAAC,EAAAC,cAACqB,EAAD,CAAazB,KAAMA,EAAMC,QAASA,IAClCC,EAAAC,EAAAC,cAAC7B,EAAA,EAAD,CAAYG,QAAQ,KAAKqJ,cAAY,GAArC,iGAGA7H,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAKH,UAAU,OAAOc,SAnBT,SAACC,GAClBA,EAAMC,iBACN,IAAMC,EAAO,IAAIC,SAASH,EAAMI,eAC1BiD,EAASnD,EAAKG,IAAI,UAClB6H,EAAchI,EAAKG,IAAI,eAEzBgD,GAAU6E,EACV7J,EAASuG,GAAc,CAACvB,SAAQC,kBAAmB4E,KAEnD3K,GAAQ,KAWJC,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,CACIC,kBAAgB,iBAChB9I,KAAK,sBACL+I,aAAcnC,GAEd7F,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CAAkB5E,KAAK,SAASiF,MAAM,6CAAUF,QAAShE,EAAAC,EAAAC,cAAC+H,EAAA,EAAD,MAAUvE,MAAM,+CACzE1D,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CAAkB5E,KAAK,SAASiF,MAAM,iCAAQF,QAAShE,EAAAC,EAAAC,cAAC+H,EAAA,EAAD,MAAUvE,MAAM,mCACvE1D,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CAAkB5E,KAAK,SAASiF,MAAM,uCAASF,QAAShE,EAAAC,EAAAC,cAAC+H,EAAA,EAAD,MAAUvE,MAAM,0CAE5E1D,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CACI2E,aAAclC,EACd7G,KAAK,cACLsE,UAAQ,EACRE,GAAG,8BACHC,MAAM,mDACNiH,WAAS,EACTC,QAAS,EACTC,YAAY,izBACZrH,WAAS,IAEbxD,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAKC,GAAI,CAACE,QAAS,OAAQmG,eAAgB,gBAAiBpF,GAAI,IAC5D9C,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CAAQgE,QA7CL,WACftH,EAASgG,QA4CG,kCAGA7G,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CAAQ3F,QAAQ,YAAYoF,KAAK,UAAjC,sCCZLkH,GAlDF,WAAM,IACR/E,EAAY0B,YAAYjD,GAAxBuB,SACDlF,EAAWC,cAFFC,EAISC,oBAAS,GAJlBC,EAAA3C,OAAA4C,EAAA,EAAA5C,CAAAyC,EAAA,GAIRjB,EAJQmB,EAAA,GAIFlB,EAJEkB,EAAA,GAsBf,OACIjB,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2H,SAAA,KACI5H,EAAAC,EAAAC,cAACqB,EAAD,CAAazB,KAAMA,EAAMC,QAASA,IAClCC,EAAAC,EAAAC,cAAC7B,EAAA,EAAD,CAAYG,QAAQ,KAAKqJ,cAAY,GAArC,2FAGA7H,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAKH,UAAU,OAAOc,SAlBT,SAACC,GAClBA,EAAMC,iBACN,IACMsI,EADO,IAAIpI,SAASH,EAAMI,eACdC,IAAI,QAElBkI,EACAlK,EAASwG,GAAY,CAACtB,SAAUgF,KAEhChL,GAAQ,KAWJC,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,CACIC,kBAAgB,eAChB9I,KAAK,sBACL+I,aAAcjC,GAEd/F,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CAAkB5E,KAAK,OAAOiF,MAAM,iCAAQF,QAAShE,EAAAC,EAAAC,cAAC+H,EAAA,EAAD,MAAUvE,MAAM,8EACrE1D,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CAAkB5E,KAAK,OAAOiF,MAAM,8CAAWF,QAAShE,EAAAC,EAAAC,cAAC+H,EAAA,EAAD,MAAUvE,MAAM,4FAE5E1D,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAKC,GAAI,CAACE,QAAS,OAAQmG,eAAgB,gBAAiBpF,GAAI,IAC5D9C,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CAAQgE,QAhCL,WACftH,EAASgG,QA+BG,kCAGA7G,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CAAQ3F,QAAQ,YAAYoF,KAAK,UAAjC,sCCuJL+K,GA7LK,WAAM,IAAAtG,EAYlBZ,YAAYjD,GAVZ0B,EAFkBmC,EAElBnC,WACAC,EAHkBkC,EAGlBlC,YACAC,EAJkBiC,EAIlBjC,QACAC,EALkBgC,EAKlBhC,aACAC,EANkB+B,EAMlB/B,UACAC,EAPkB8B,EAOlB9B,eACAC,EARkB6B,EAQlB7B,cACiB0E,EATC7C,EASlB5B,gBACiB0E,EAVC9C,EAUlB3B,gBACAC,EAXkB0B,EAWlB1B,YAEE9F,EAAWC,cAbK0I,EAe0BC,IAAMzI,SAAuBkK,GAfvDxB,EAAApL,OAAA4C,EAAA,EAAA5C,CAAAkL,EAAA,GAef/C,EAfeiD,EAAA,GAeEC,EAfFD,EAAA,GAAAE,EAgB0BH,IAAMzI,SAAuBmK,GAhBvDtB,EAAAvL,OAAA4C,EAAA,EAAA5C,CAAAsL,EAAA,GAgBflD,EAhBemD,EAAA,GAgBEC,EAhBFD,EAAA,GAAA9I,EAiBEC,oBAAS,GAjBXC,EAAA3C,OAAA4C,EAAA,EAAA5C,CAAAyC,EAAA,GAiBfjB,EAjBemB,EAAA,GAiBTlB,EAjBSkB,EAAA,GAqDtB,OACIjB,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2H,SAAA,KACI5H,EAAAC,EAAAC,cAACqB,EAAD,CAAazB,KAAMA,EAAMC,QAASA,IAClCC,EAAAC,EAAAC,cAAC7B,EAAA,EAAD,CAAYG,QAAQ,KAAKqJ,cAAY,GAArC,2KAGA7H,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAKH,UAAU,OAAOc,SApCT,SAACC,GAClBA,EAAMC,iBACN,IAAMC,EAAO,IAAIC,SAASH,EAAMI,eAC1BmH,EAAWrH,EAAKG,IAAI,YACpBmH,EAAYtH,EAAKG,IAAI,aACrBoH,EAAcvH,EAAKG,IAAI,eACvBqH,EAAmBxH,EAAKG,IAAI,oBAC5BsH,EAAUzH,EAAKG,IAAI,WACnBuH,EAAe1H,EAAKG,IAAI,gBACxBwH,EAAY3H,EAAKG,IAAI,aACrByH,EAAU5H,EAAKG,IAAI,WAErBkH,GAAYC,GAAaC,GAAeE,GAAWE,GAAaC,EAChEzJ,EAAS4N,GAAe,CACpBvI,WAAY6D,EACZ5D,YAAa6D,EACb5D,QAAS6D,EACT5D,aAAc6D,EACd5D,UAAW6D,EACX5D,eAAgB6D,EAChB5D,cAAe8D,EACf7D,kBACAC,kBACAC,YAAa0D,KAGjBtK,GAAQ,KAWJC,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACrBjD,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GACnBpD,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CACIE,UAAQ,EACRE,GAAG,WACHxE,KAAK,WACLyE,MAAM,6CACNF,WAAS,EACTF,aAAa,cACb0E,aAAc9B,KAGtBlG,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GACnBpD,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CACIE,UAAQ,EACRE,GAAG,YACHxE,KAAK,YACLyE,MAAM,qBACNF,WAAS,EACTF,aAAa,aACb0E,aAAc7B,KAGtBnG,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACXnD,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CACIE,UAAQ,EACRE,GAAG,cACHxE,KAAK,cACLyE,MAAM,kFACNF,WAAS,EACTF,aAAa,MACbM,KAAK,QACLoE,aAAc5B,KAGtBpG,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACXnD,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CACII,GAAG,mBACHxE,KAAK,mBACLyE,MAAM,sGACNF,WAAS,EACTF,aAAa,MACbM,KAAK,QACLoE,aAAc3B,KAGtBrG,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACXnD,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CACIE,UAAQ,EACRE,GAAG,UACHxE,KAAK,UACLyE,MAAM,iCACNF,WAAS,EACTF,aAAa,iBACb0E,aAAc1B,KAGtBtG,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACXnD,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CACII,GAAG,eACHxE,KAAK,eACLyE,MAAM,qDACNF,WAAS,EACTF,aAAa,iBACb0E,aAAczB,KAGtBvG,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GACnBpD,EAAAC,EAAAC,cAAC0I,GAAA,EAAD,CACIC,YAAaC,KACbC,cAAc,MAEd/I,EAAAC,EAAAC,cAACqK,GAAA,EAAD,CACI7G,MAAM,6EACNQ,MAAOuC,EACP1C,SAAU,SAACyG,GAAD,OAAcb,EAAqBa,IAC7CtB,YAAa,SAACC,GAAD,OAAYnJ,EAAAC,EAAAC,cAACmD,EAAA,EAAD/E,OAAAC,OAAA,CAAWiF,WAAS,GAAK2F,SAI9DnJ,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GACnBpD,EAAAC,EAAAC,cAAC0I,GAAA,EAAD,CACIC,YAAaC,KACbC,cAAc,MAEd/I,EAAAC,EAAAC,cAACqK,GAAA,EAAD,CACI7G,MAAM,mFACNQ,MAAOwC,EACP3C,SAAU,SAACyG,GAAD,OAAcV,EAAqBU,IAC7CtB,YAAa,SAACC,GAAD,OAAYnJ,EAAAC,EAAAC,cAACmD,EAAA,EAAD/E,OAAAC,OAAA,CAAWiF,WAAS,GAAK2F,SAI9DnJ,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACXnD,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CACIE,UAAQ,EACRE,GAAG,UACHxE,KAAK,UACLyE,MAAM,sHACNF,WAAS,EACTF,aAAa,eACb0E,aAAcxB,KAGtBxG,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACXnD,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CACIE,UAAQ,EACRE,GAAG,YACHxE,KAAK,YACLyE,MAAM,yDACNF,WAAS,EACTF,aAAa,YACb0E,aAAcrB,MAI1B3G,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAKC,GAAI,CAACE,QAAS,OAAQmG,eAAgB,gBAAiBpF,GAAI,IAC5D9C,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CAAQgE,QA9JL,WACftH,EAASgG,QA6JG,kCAGA7G,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CAAQ3F,QAAQ,YAAYoF,KAAK,UAAjC,sCC/HLoH,GAvDE,WAAM,IACZhF,EAAQyB,YAAYjD,GAApBwB,KACDnF,EAAWC,cACX8N,EAAajH,cAHA5G,EAKKC,oBAAS,GALdC,EAAA3C,OAAA4C,EAAA,EAAA5C,CAAAyC,EAAA,GAKZjB,EALYmB,EAAA,GAKNlB,EALMkB,EAAA,GAwBnB,OACIjB,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2H,SAAA,KACI5H,EAAAC,EAAAC,cAACqB,EAAD,CAAazB,KAAMA,EAAMC,QAASA,IAClCC,EAAAC,EAAAC,cAAC7B,EAAA,EAAD,CAAYG,QAAQ,KAAKqJ,cAAY,GAArC,8JAGA7H,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAKH,UAAU,OAAOc,SAnBT,SAACC,GAClBA,EAAMC,iBACN,IACMuD,EADO,IAAIrD,SAASH,EAAMI,eACdC,IAAI,QAElBmD,GACAnF,EAASyG,GAAY,CAACtB,UACtB4I,EAAW,oBAEX7O,GAAQ,KAWJC,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,CACIC,kBAAgB,eAChB9I,KAAK,sBACL+I,aAAchC,GAEdhG,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CAAkB5E,KAAK,OAAOiF,MAAM,oCAAWF,QAAShE,EAAAC,EAAAC,cAAC+H,EAAA,EAAD,MAAUvE,MAAM,sHACxE1D,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CAAkB5E,KAAK,OAAOiF,MAAM,oCAAWF,QAAShE,EAAAC,EAAAC,cAAC+H,EAAA,EAAD,MAAUvE,MAAM,sHACxE1D,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CAAkB5E,KAAK,OAAOiF,MAAM,uBAAQF,QAAShE,EAAAC,EAAAC,cAAC+H,EAAA,EAAD,MAAUvE,MAAM,uGACrE1D,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CAAkB5E,KAAK,OAAOiF,MAAM,6BAASF,QAAShE,EAAAC,EAAAC,cAAC+H,EAAA,EAAD,MAAUvE,MAAM,+GACtE1D,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CAAkB5E,KAAK,OAAOiF,MAAM,8CAAWF,QAAShE,EAAAC,EAAAC,cAAC+H,EAAA,EAAD,MAAUvE,MAAM,gIAE5E1D,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAKC,GAAI,CAACE,QAAS,OAAQmG,eAAgB,gBAAiBpF,GAAI,IAC5D9C,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CAAQgE,QApCL,WACftH,EAASgG,QAmCG,kCAGA7G,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CAAQ3F,QAAQ,YAAYoF,KAAK,UAAjC,sCCWLiL,GAnDM,WAAM,IAChBhK,EAAQ4C,YAAYjD,GAApBK,KAEDuH,EAAiBC,sBACnB,SAACxH,GACG,OAAQA,GACJ,KAAK,EACD,OAAO7E,EAAAC,EAAAC,cAAC4O,GAAD,MACX,KAAK,EACD,OAAO9O,EAAAC,EAAAC,cAAC6O,GAAD,MACX,KAAK,EACD,OAAO/O,EAAAC,EAAAC,cAAC8O,GAAD,MACX,KAAK,EACD,OAAOhP,EAAAC,EAAAC,cAAC+O,GAAD,MACX,KAAK,EACD,OAAOjP,EAAAC,EAAAC,cAACgP,GAAD,MACX,KAAK,EACD,OAAOlP,EAAAC,EAAAC,cAACiP,GAAD,MACX,KAAK,EACD,OAAOnP,EAAAC,EAAAC,cAACkP,GAAD,MACX,KAAK,EACD,OAAOpP,EAAAC,EAAAC,cAACmP,GAAD,QAEhB,IAEP,OACIrP,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2H,SAAA,KACI5H,EAAAC,EAAAC,cAACyB,EAAA,EAAD,MACA3B,EAAAC,EAAAC,cAAC4M,GAAD,MACA9M,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,KAAKG,GAAI,CAACuC,GAAI,IAC/CpE,EAAAC,EAAAC,cAAC6M,EAAA,EAAD,CAAOvO,QAAQ,WAAWqD,GAAI,CAACmL,GAAI,CAAC7J,GAAI,EAAG8J,GAAI,GAAIC,EAAG,CAAC/J,GAAI,EAAG8J,GAAI,KAC9DjN,EAAAC,EAAAC,cAAC7B,EAAA,EAAD,CAAYoD,UAAU,KAAKjD,QAAQ,KAAKE,MAAM,UAA9C,mFAGAsB,EAAAC,EAAAC,cAACiN,EAAA,EAAD,CAASC,WAAYvI,EAAMwI,kBAAgB,EAACxL,GAAI,CAACyL,GAAI,EAAGC,GAAI,IACvDC,MAAM,GAAGC,KAAK,IAAIC,IAAI,SAACC,EAAIC,GAAL,OACnB5N,EAAAC,EAAAC,cAAC2N,EAAA,EAAD,CAAMC,IAAKF,GACP5N,EAAAC,EAAAC,cAAC6N,EAAA,EAAD,UAIZ/N,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2H,SAAA,KACKwE,EAAevH,KAGxB7E,EAAAC,EAAAC,cAACmE,EAAD,SCoHDiL,GAvKW,WAAM,IAAAjH,EAkCtBZ,YAAYjD,GA/BdK,EAHwBwD,EAGxBxD,KACAoB,EAJwBoC,EAIxBpC,GACArC,EALwByE,EAKxBzE,KACA0K,EANwBjG,EAMxBiG,MACA/F,EAPwBF,EAOxBE,KACAgG,EARwBlG,EAQxBkG,UACApJ,EATwBkD,EASxBlD,aACAC,EAVwBiD,EAUxBjD,cACAC,EAXwBgD,EAWxBhD,UACAC,EAZwB+C,EAYxB/C,eACAC,EAbwB8C,EAaxB9C,YACAC,EAdwB6C,EAcxB7C,iBACAC,EAfwB4C,EAexB5C,gBACAC,EAhBwB2C,EAgBxB3C,kBACAC,EAjBwB0C,EAiBxB1C,kBACAC,EAlBwByC,EAkBxBzC,cACAC,EAnBwBwC,EAmBxBxC,OACAC,EApBwBuC,EAoBxBvC,kBACAI,EArBwBmC,EAqBxBnC,WACAC,EAtBwBkC,EAsBxBlC,YACAC,EAvBwBiC,EAuBxBjC,QACAC,EAxBwBgC,EAwBxBhC,aACAC,EAzBwB+B,EAyBxB/B,UACAC,EA1BwB8B,EA0BxB9B,eACAC,EA3BwB6B,EA2BxB7B,cACAC,EA5BwB4B,EA4BxB5B,gBACAC,EA7BwB2B,EA6BxB3B,gBACAC,EA9BwB0B,EA8BxB1B,YACAZ,EA/BwBsC,EA+BxBtC,SACAC,EAhCwBqC,EAgCxBrC,KAIE0B,EAAWC,cAQjB,OANAsG,oBAAU,WACFpJ,EAAO,GACP6C,EAAS,aAEd,IAGC1H,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2H,SAAA,KACI5H,EAAAC,EAAAC,cAACyB,EAAA,EAAD,MACA3B,EAAAC,EAAAC,cAAC4M,GAAD,MACA9M,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,KAAKG,GAAI,CAACuC,GAAI,IAC/CpE,EAAAC,EAAAC,cAAC6M,EAAA,EAAD,CAAOvO,QAAQ,WAAWqD,GAAI,CAACmL,GAAI,CAAC7J,GAAI,EAAG8J,GAAI,GAAIC,EAAG,CAAC/J,GAAI,EAAG8J,GAAI,KAC9DjN,EAAAC,EAAAC,cAAC7B,EAAA,EAAD,CAAYoD,UAAU,KAAKjD,QAAQ,KAAKE,MAAM,UAA9C,yFAGAsB,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACrBjD,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GACnBpD,EAAAC,EAAAC,cAAC7B,EAAA,EAAD,CAAYG,QAAQ,KAAKE,MAAM,UAA/B,2DAGAsB,EAAAC,EAAAC,cAAC7B,EAAA,EAAD,CAAYG,QAAQ,aAApB,4DACiByH,GAEjBjG,EAAAC,EAAAC,cAAC7B,EAAA,EAAD,CAAYG,QAAQ,aAApB,4DACiBoF,GAEjB5D,EAAAC,EAAAC,cAAC7B,EAAA,EAAD,CAAYG,QAAQ,aAApB,wEACmB+P,GAEnBvO,EAAAC,EAAAC,cAAC7B,EAAA,EAAD,CAAYG,QAAQ,aAApB,kEACkB0P,KAAM3F,GAAM4F,OAAO,eAErCnO,EAAAC,EAAAC,cAAC7B,EAAA,EAAD,CAAYG,QAAQ,aAApB,sGACwB8P,GAExBtO,EAAAC,EAAAC,cAAC7B,EAAA,EAAD,CAAYG,QAAQ,aAApB,+CACc2G,GAEdnF,EAAAC,EAAAC,cAAC7B,EAAA,EAAD,CAAYG,QAAQ,aAApB,uBACU4G,GAEVpF,EAAAC,EAAAC,cAAC7B,EAAA,EAAD,CAAYG,QAAQ,aAApB,oFACqB6G,GAErBrF,EAAAC,EAAAC,cAAC7B,EAAA,EAAD,CAAYG,QAAQ,aAApB,wGAC0B8G,GAE1BtF,EAAAC,EAAAC,cAAC7B,EAAA,EAAD,CAAYG,QAAQ,aAApB,mCACY+G,GAEZvF,EAAAC,EAAAC,cAAC7B,EAAA,EAAD,CAAYG,QAAQ,aAApB,uDACiBgH,GAEjBxF,EAAAC,EAAAC,cAAC7B,EAAA,EAAD,CAAYG,QAAQ,aAApB,+EACqB0P,KAAMxI,GAAmByI,OAAO,YAErDnO,EAAAC,EAAAC,cAAC7B,EAAA,EAAD,CAAYG,QAAQ,aAApB,qFACsB0P,KAAMvI,GAAmBwI,OAAO,YAEtDnO,EAAAC,EAAAC,cAAC7B,EAAA,EAAD,CAAYG,QAAQ,aAApB,wHAC2BiH,GAE3BzF,EAAAC,EAAAC,cAAC7B,EAAA,EAAD,CAAYG,QAAQ,aAApB,2DACgBoH,GAEhB5F,EAAAC,EAAAC,cAAC7B,EAAA,EAAD,CAAYG,QAAQ,aAApB,iGACwBqH,GAExB7F,EAAAC,EAAAC,cAAC7B,EAAA,EAAD,CAAYG,QAAQ,aAApB,oFACqBsH,GAErB9F,EAAAC,EAAAC,cAAC7B,EAAA,EAAD,CAAYG,QAAQ,aAApB,2FACuBuH,GAEvB/F,EAAAC,EAAAC,cAAC7B,EAAA,EAAD,CAAYG,QAAQ,aAApB,8JACmCwH,IAGvChG,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GACnBpD,EAAAC,EAAAC,cAAC7B,EAAA,EAAD,CAAYG,QAAQ,KAAKE,MAAM,UAA/B,wEAGAsB,EAAAC,EAAAC,cAAC7B,EAAA,EAAD,CAAYG,QAAQ,aAApB,+CACc0H,GAEdlG,EAAAC,EAAAC,cAAC7B,EAAA,EAAD,CAAYG,QAAQ,aAApB,uBACU2H,GAEVnG,EAAAC,EAAAC,cAAC7B,EAAA,EAAD,CAAYG,QAAQ,aAApB,oFACqB4H,GAErBpG,EAAAC,EAAAC,cAAC7B,EAAA,EAAD,CAAYG,QAAQ,aAApB,wGAC0B6H,GAE1BrG,EAAAC,EAAAC,cAAC7B,EAAA,EAAD,CAAYG,QAAQ,aAApB,mCACY8H,GAEZtG,EAAAC,EAAAC,cAAC7B,EAAA,EAAD,CAAYG,QAAQ,aAApB,uDACiB+H,GAEjBvG,EAAAC,EAAAC,cAAC7B,EAAA,EAAD,CAAYG,QAAQ,aAApB,+EACqB0P,KAAMzH,GAAiB0H,OAAO,YAEnDnO,EAAAC,EAAAC,cAAC7B,EAAA,EAAD,CAAYG,QAAQ,aAApB,qFACsB0P,KAAMxH,GAAiByH,OAAO,YAEpDnO,EAAAC,EAAAC,cAAC7B,EAAA,EAAD,CAAYG,QAAQ,aAApB,wHAC2BgI,GAE3BxG,EAAAC,EAAAC,cAAC7B,EAAA,EAAD,CAAYG,QAAQ,aAApB,2DACgBmI,KAIxB3G,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAKC,GAAI,CAACE,QAAS,OAAQmG,eAAgB,gBAAiBpF,GAAI,IAC5D9C,EAAAC,EAAAC,cAACiE,EAAA,EAAD,uCAGAnE,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CAAQ3F,QAAQ,YAAYoF,KAAK,UAAjC,wEAKR5D,EAAAC,EAAAC,cAACmE,EAAD,SC7HDkL,GAhCO,WAClB,IAAM1O,EAAWC,cACV3B,EAAUsI,YAAY/C,GAAtBvF,OAMP,OAJA8O,oBAAU,WACNpN,EAASxB,MACV,IAGCW,EAAAC,EAAAC,cAACsP,EAAA,EAAD,KACIxP,EAAAC,EAAAC,cAACuP,EAAA,EAAD,KAEStQ,EAMGa,EAAAC,EAAAC,cAACuP,EAAA,EAAD,CAAOC,KAAK,KACR1P,EAAAC,EAAAC,cAACuP,EAAA,EAAD,CAAOC,KAAK,SAASC,QAAS3P,EAAAC,EAAAC,cAAC0P,GAAD,QAC9B5P,EAAAC,EAAAC,cAACuP,EAAA,EAAD,CAAOC,KAAK,UAAUC,QAAS3P,EAAAC,EAAAC,cAAC2P,GAAD,QAC/B7P,EAAAC,EAAAC,cAACuP,EAAA,EAAD,CAAOC,KAAK,gBAAgBC,QAAS3P,EAAAC,EAAAC,cAAC4P,GAAD,QACrC9P,EAAAC,EAAAC,cAACuP,EAAA,EAAD,CAAOC,KAAK,WAAWC,QAAS3P,EAAAC,EAAAC,cAACuE,GAAD,QAChCzE,EAAAC,EAAAC,cAACuP,EAAA,EAAD,CAAOC,KAAK,iBAAiBC,QAAS3P,EAAAC,EAAAC,cAAC6P,GAAD,QACtC/P,EAAAC,EAAAC,cAACuP,EAAA,EAAD,CAAOC,KAAK,IAAIC,QAAS3P,EAAAC,EAAAC,cAACuP,EAAA,EAAD,CAAUxJ,GAAG,UAAU+J,SAAO,OAX3DhQ,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2H,SAAA,KACI5H,EAAAC,EAAAC,cAACuP,EAAA,EAAD,CAAOC,KAAK,WAAWC,QAAS3P,EAAAC,EAAAC,cAAC+P,EAAD,QAChCjQ,EAAAC,EAAAC,cAACuP,EAAA,EAAD,CAAOC,KAAK,IAAIC,QAAS3P,EAAAC,EAAAC,cAACuP,EAAA,EAAD,CAAUxJ,GAAG,WAAW+J,SAAO,8BCvBvEE,GAAQC,YAAe,CAChCC,QAAS,CACL7L,OAAQK,GACRH,SAAU4L,GACV1L,KAAM5F,KCGRuR,GAAQC,eAEDC,IAASC,WAClBC,SAASC,eAAe,SAEvBC,OACD5Q,EAAAC,EAAAC,cAACF,EAAAC,EAAM4Q,WAAP,KACI7Q,EAAAC,EAAAC,cAAC4Q,EAAA,EAAD,CAAUZ,MAAOA,IACblQ,EAAAC,EAAAC,cAAC6Q,GAAA,EAAD,CAAeT,MAAOA,IAClBtQ,EAAAC,EAAAC,cAAC8Q,GAAD","file":"static/js/main.c06439b0.chunk.js","sourcesContent":["import Typography from \"@mui/material/Typography\";\r\nimport Link from \"@mui/material/Link\";\r\nimport * as React from \"react\";\r\nimport {FC} from \"react\";\r\n\r\nconst Copyright: FC<any> = (props) => {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"https://mui.com/\">\r\n                Закажи Доставку\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nexport default Copyright\r\n","import {createSlice} from \"@reduxjs/toolkit\";\r\n\r\ninterface InitialState {\r\n    isAuth: boolean\r\n}\r\n\r\nconst initialState: InitialState = {\r\n    isAuth: false\r\n}\r\n\r\nconst AuthSlice = createSlice({\r\n    name: 'auth',\r\n    initialState,\r\n    reducers: {\r\n        checkAuth(state) {\r\n            const isAuth = localStorage.getItem('auth')\r\n\r\n            if (isAuth) {\r\n                state.isAuth = true\r\n            }\r\n        },\r\n        registration(state) {\r\n            localStorage.setItem('auth', 'true')\r\n            state.isAuth = true\r\n        }\r\n    }\r\n})\r\n\r\nexport const {checkAuth, registration} = AuthSlice.actions\r\nexport default AuthSlice.reducer\r\n","import React, {FC} from 'react'\r\nimport {Alert, Snackbar} from \"@mui/material\";\r\n\r\ninterface Props {\r\n    open: boolean,\r\n    setOpen: React.Dispatch<React.SetStateAction<boolean>>\r\n}\r\n\r\nconst CustomAlert: FC<Props> = ({open, setOpen}) => {\r\n\r\n    return (\r\n        <Snackbar\r\n            anchorOrigin={{vertical: 'top', horizontal: 'right'}}\r\n            open={open}\r\n            message=\"Заполните все обязательные поля!\"\r\n            autoHideDuration={3000}\r\n            onClose={() => setOpen(false)}\r\n        >\r\n            <Alert\r\n                onClose={() => setOpen(false)}\r\n                severity=\"warning\">\r\n                Заполните все поля!\r\n            </Alert>\r\n        </Snackbar>\r\n    )\r\n}\r\n\r\nexport default CustomAlert\r\n","import * as React from 'react';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport Copyright from \"../../components/copyright\";\r\nimport {FC, useState} from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {registration} from \"../../store/slices/auth-slice\";\r\nimport CustomAlert from \"../../components/alert\";\r\n\r\n\r\nconst SignUp: FC = () => {\r\n    const dispatch = useDispatch()\r\n    const [open, setOpen] = useState(false)\r\n    const [accept, setAccept] = useState(false)\r\n\r\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        const data = new FormData(event.currentTarget);\r\n        if (\r\n            data.get('email') &&\r\n            data.get('password') &&\r\n            data.get('firstName') &&\r\n            data.get('lastName') &&\r\n            data.get('company') &&\r\n            accept\r\n        ) {\r\n            dispatch(registration())\r\n        } else {\r\n            setOpen(true)\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <CustomAlert open={open} setOpen={setOpen}/>\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                <CssBaseline/>\r\n                <Box\r\n                    sx={{\r\n                        marginTop: 8,\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        alignItems: 'center',\r\n                    }}\r\n                >\r\n                    <Avatar sx={{m: 1, bgcolor: 'secondary.main'}}>\r\n                        <LockOutlinedIcon/>\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Регистрация\r\n                    </Typography>\r\n                    <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{mt: 3}}>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    autoComplete=\"given-name\"\r\n                                    name=\"firstName\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"firstName\"\r\n                                    label=\"Имя\"\r\n                                    autoFocus\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"lastName\"\r\n                                    label=\"Фамилия\"\r\n                                    name=\"lastName\"\r\n                                    autoComplete=\"family-name\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"company\"\r\n                                    label=\"Название компании\"\r\n                                    name=\"company\"\r\n                                    autoComplete=\"company\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"email\"\r\n                                    label=\"Email\"\r\n                                    name=\"email\"\r\n                                    autoComplete=\"email\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    required\r\n                                    fullWidth\r\n                                    name=\"password\"\r\n                                    label=\"Пароль\"\r\n                                    type=\"password\"\r\n                                    id=\"password\"\r\n                                    autoComplete=\"new-password\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <FormControlLabel\r\n                                    checked={accept}\r\n                                    onChange={() => setAccept(accept => !accept)}\r\n                                    control={<Checkbox value=\"allowExtraEmails\" color=\"primary\"/>}\r\n                                    label=\"Я соглашаюсь с условиями обработки персональных данных\"\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            sx={{mt: 3, mb: 2}}\r\n                        >\r\n                            Зарегистрироваться\r\n                        </Button>\r\n                        {/*<Grid container justifyContent=\"flex-end\">*/}\r\n                        {/*    <Grid item>*/}\r\n                        {/*        <Link onClick={() => navigate('/sign-in')} variant=\"body2\">*/}\r\n                        {/*            Уже есть аккаунт? Вход*/}\r\n                        {/*        </Link>*/}\r\n                        {/*    </Grid>*/}\r\n                        {/*</Grid>*/}\r\n                    </Box>\r\n                </Box>\r\n                <Copyright sx={{mt: 5}}/>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SignUp\r\n","import {RootState} from \"../store\";\r\n\r\nexport const PickUpSelector = (state: RootState) => state.pickUp\r\nexport const DeliverySelector = (state: RootState) => state.delivery\r\nexport const AuthSelector = (state: RootState) => state.auth\r\n","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\r\nimport {Dayjs} from \"dayjs\";\r\n\r\ninterface State {\r\n    step: number\r\n    from: string,\r\n    type: string\r\n    pickUpDate: null | Dayjs\r\n    orderNumber: string\r\n    withContract: boolean\r\n    companyName: string\r\n    fromLastName: string\r\n    fromFirstName: string\r\n    fromPhone: string\r\n    fromExtraPhone: string\r\n    fromAddress: string\r\n    fromExtraAddress: string\r\n    fromCompanyName: string\r\n    fromPickUpTimeMin: null | Dayjs\r\n    fromPickUpTimeMax: null | Dayjs\r\n    fromDocuments: string\r\n    nature: string\r\n    natureDescription: string\r\n    needPass: string\r\n    call: string\r\n\r\n    to: string\r\n    toLastName: string\r\n    toFirstName: string\r\n    toPhone: string\r\n    toExtraPhone: string\r\n    toAddress: string\r\n    toExtraAddress: string\r\n    toCompanyName: string\r\n    toPickUpTimeMin: null | Dayjs\r\n    toPickUpTimeMax: null | Dayjs\r\n    toDocuments: string\r\n}\r\n\r\nconst initialState: State = {\r\n    step: 0,\r\n    from: '',\r\n    type: '',\r\n    pickUpDate: null,\r\n    orderNumber: '',\r\n    withContract: false,\r\n    companyName: '',\r\n    fromLastName: '',\r\n    fromFirstName: '',\r\n    fromPhone: '',\r\n    fromExtraPhone: '',\r\n    fromAddress: '',\r\n    fromExtraAddress: '',\r\n    fromCompanyName: '',\r\n    fromPickUpTimeMin: null,\r\n    fromPickUpTimeMax: null,\r\n    fromDocuments: '',\r\n    nature: '',\r\n    natureDescription: '',\r\n    needPass: '',\r\n    call: '',\r\n\r\n    to: '',\r\n    toLastName: '',\r\n    toFirstName: '',\r\n    toPhone: '',\r\n    toExtraPhone: '',\r\n    toAddress: '',\r\n    toExtraAddress: '',\r\n    toCompanyName: '',\r\n    toPickUpTimeMin: null,\r\n    toPickUpTimeMax: null,\r\n    toDocuments: '',\r\n}\r\n\r\nconst PickUpSlice = createSlice({\r\n    name: 'receipt',\r\n    initialState,\r\n    reducers: {\r\n        incrementStep(state) {\r\n            ++state.step\r\n        },\r\n        decrementStep(state) {\r\n            --state.step\r\n        },\r\n        setFromData(state, action: PayloadAction<string>) {\r\n            ++state.step\r\n            state.from = action.payload\r\n        },\r\n        setTypeData(state, action: PayloadAction<string>) {\r\n            ++state.step\r\n            state.type = action.payload\r\n        },\r\n        setDateData(state, action: PayloadAction<{\r\n            pickUpDate: Dayjs | null,\r\n            orderNumber: string,\r\n            withContract: boolean,\r\n            companyName: string\r\n        }>) {\r\n            ++state.step\r\n            state.pickUpDate = action.payload.pickUpDate\r\n            state.orderNumber = action.payload.orderNumber\r\n            state.withContract = action.payload.withContract\r\n            state.companyName = action.payload.companyName\r\n        },\r\n        setFromInfoData(state, action: PayloadAction<{\r\n            fromLastName: string\r\n            fromFirstName: string\r\n            fromPhone: string\r\n            fromExtraPhone: string\r\n            fromAddress: string\r\n            fromExtraAddress: string\r\n            fromCompanyName: string\r\n            fromPickUpTimeMin: null | Dayjs\r\n            fromPickUpTimeMax: null | Dayjs\r\n            fromDocuments: string\r\n        }>) {\r\n            ++state.step\r\n            state.fromLastName = action.payload.fromLastName\r\n            state.fromFirstName = action.payload.fromFirstName\r\n            state.fromPhone = action.payload.fromPhone\r\n            state.fromExtraPhone = action.payload.fromExtraPhone\r\n            state.fromAddress = action.payload.fromAddress\r\n            state.fromExtraAddress = action.payload.fromExtraAddress\r\n            state.fromCompanyName = action.payload.fromCompanyName\r\n            state.fromPickUpTimeMin = action.payload.fromPickUpTimeMin\r\n            state.fromPickUpTimeMax = action.payload.fromPickUpTimeMax\r\n            state.fromDocuments = action.payload.fromDocuments\r\n        },\r\n        setNatureData(state, action: PayloadAction<{\r\n            nature: string\r\n            natureDescription: string\r\n        }>) {\r\n            ++state.step\r\n            state.nature = action.payload.nature\r\n            state.natureDescription = action.payload.natureDescription\r\n        },\r\n        setPassData(state, action: PayloadAction<{ needPass: string }>) {\r\n            ++state.step\r\n            state.needPass = action.payload.needPass\r\n        },\r\n        setCallData(state, action: PayloadAction<{ call: string }>) {\r\n            ++state.step\r\n            state.call = action.payload.call\r\n        },\r\n        setToInfoData(state, action: PayloadAction<{\r\n            to: string\r\n            toLastName: string\r\n            toFirstName: string\r\n            toPhone: string\r\n            toExtraPhone: string\r\n            toAddress: string\r\n            toExtraAddress: string\r\n            toCompanyName: string\r\n            toPickUpTimeMin: null | Dayjs\r\n            toPickUpTimeMax: null | Dayjs\r\n            toDocuments: string\r\n        }>) {\r\n            state.to = action.payload.to\r\n            state.toLastName = action.payload.toLastName\r\n            state.toFirstName = action.payload.toFirstName\r\n            state.toPhone = action.payload.toPhone\r\n            state.toExtraPhone = action.payload.toExtraPhone\r\n            state.toAddress = action.payload.toAddress\r\n            state.toExtraAddress = action.payload.toExtraAddress\r\n            state.toCompanyName = action.payload.toCompanyName\r\n            state.toPickUpTimeMin = action.payload.toPickUpTimeMin\r\n            state.toPickUpTimeMax = action.payload.toPickUpTimeMax\r\n            state.toDocuments = action.payload.toDocuments\r\n        }\r\n    }\r\n})\r\n\r\nexport const {\r\n    incrementStep,\r\n    decrementStep,\r\n    setFromData,\r\n    setTypeData,\r\n    setDateData,\r\n    setFromInfoData,\r\n    setNatureData,\r\n    setPassData,\r\n    setCallData,\r\n    setToInfoData\r\n} = PickUpSlice.actions\r\nexport default PickUpSlice.reducer\r\n","import {Box, Button, RadioGroup, Typography, Radio, FormControlLabel} from '@mui/material'\r\nimport React, {FC, useState} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {PickUpSelector} from \"../../../store/selectors/selectors\";\r\nimport {AppDispatch} from \"../../../store/store\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {setFromData} from \"../../../store/slices/pick-up-slice\";\r\nimport CustomAlert from \"../../../components/alert\";\r\n\r\nconst From: FC = () => {\r\n    const [open, setOpen] = useState(false)\r\n    const {from} = useSelector(PickUpSelector)\r\n    const dispatch = useDispatch<AppDispatch>()\r\n    const navigate = useNavigate()\r\n\r\n    const handleBack = () => {\r\n        navigate('/choose')\r\n    }\r\n\r\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        const data = new FormData(event.currentTarget);\r\n        const from = data.get('from') as string\r\n\r\n        if (from) {\r\n            dispatch(setFromData(from))\r\n        } else {\r\n            setOpen(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CustomAlert open={open} setOpen={setOpen}/>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Забираем от:\r\n            </Typography>\r\n            <Box component=\"form\" onSubmit={handleSubmit}>\r\n                <RadioGroup\r\n                    aria-labelledby=\"pick-up-from\"\r\n                    name=\"radio-buttons-group\"\r\n                    defaultValue={from}\r\n                >\r\n                    <FormControlLabel name='from' value=\"подрядчик\" control={<Radio/>} label=\"Подрядчик\"/>\r\n                    <FormControlLabel name='from' value=\"поставщик\" control={<Radio/>} label=\"Поставщик\"/>\r\n                </RadioGroup>\r\n                <Box sx={{display: 'flex', justifyContent: 'space-between', mt: 3}}>\r\n                    <Button onClick={handleBack}>\r\n                        Назад\r\n                    </Button>\r\n                    <Button type=\"submit\" variant=\"contained\">\r\n                        Далее\r\n                    </Button>\r\n                </Box>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default From\r\n","import {Box, Button, RadioGroup, Typography, Radio, FormControlLabel} from '@mui/material'\r\nimport React, {FC, useState} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {PickUpSelector} from \"../../../store/selectors/selectors\";\r\nimport {AppDispatch} from \"../../../store/store\";\r\nimport {decrementStep, setTypeData} from \"../../../store/slices/pick-up-slice\";\r\nimport CustomAlert from \"../../../components/alert\";\r\n\r\nconst Type: FC = () => {\r\n    const [open, setOpen] = useState(false)\r\n    const {type} = useSelector(PickUpSelector)\r\n    const dispatch = useDispatch<AppDispatch>()\r\n\r\n    const handleBack = () => {\r\n        dispatch(decrementStep())\r\n    }\r\n\r\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        const data = new FormData(event.currentTarget);\r\n        const type = data.get('type') as string\r\n\r\n        if (type) {\r\n            dispatch(setTypeData(type))\r\n        } else {\r\n            setOpen(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CustomAlert open={open} setOpen={setOpen}/>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Выберите вид услуги:\r\n            </Typography>\r\n            <Box component=\"form\" onSubmit={handleSubmit}>\r\n                <RadioGroup\r\n                    aria-labelledby=\"pick-up-type\"\r\n                    name=\"radio-buttons-group\"\r\n                    defaultValue={type}\r\n                >\r\n                    <FormControlLabel name=\"type\" value=\"пеший\" control={<Radio/>} label=\"Пеший\"/>\r\n                    <FormControlLabel name=\"type\" value=\"авто\" control={<Radio/>} label=\"Авто\"/>\r\n                </RadioGroup>\r\n                <Box sx={{display: 'flex', justifyContent: 'space-between', mt: 3}}>\r\n                    <Button onClick={handleBack}>\r\n                        Назад\r\n                    </Button>\r\n                    <Button variant=\"contained\" type=\"submit\">\r\n                        Далее\r\n                    </Button>\r\n                </Box>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Type\r\n","import {Box, Button, Typography, Grid, TextField, FormControlLabel, Snackbar, Alert} from '@mui/material'\r\nimport React, {FC, useState} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {PickUpSelector} from \"../../../store/selectors/selectors\";\r\nimport {AppDispatch} from \"../../../store/store\";\r\nimport {decrementStep, setDateData,} from \"../../../store/slices/pick-up-slice\";\r\nimport {AdapterDayjs} from '@mui/x-date-pickers/AdapterDayjs';\r\nimport {LocalizationProvider} from '@mui/x-date-pickers/LocalizationProvider';\r\nimport {DatePicker} from '@mui/x-date-pickers/DatePicker';\r\nimport 'dayjs/locale/ru';\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport CustomAlert from \"../../../components/alert\";\r\nimport {Dayjs} from \"dayjs\";\r\n\r\nconst Type: FC = () => {\r\n    const {\r\n        pickUpDate,\r\n        orderNumber,\r\n        withContract: withContractStore,\r\n        companyName\r\n    } = useSelector(PickUpSelector)\r\n    const dispatch = useDispatch<AppDispatch>()\r\n\r\n    const [open, setOpen] = useState(false)\r\n    const [date, setDate] = useState<Dayjs | null>(pickUpDate)\r\n    const [withContract, setWithContract] = useState<boolean>(withContractStore)\r\n\r\n    const handleBack = () => {\r\n        dispatch(decrementStep())\r\n    }\r\n\r\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        const data = new FormData(event.currentTarget);\r\n        const orderNumber = data.get('orderNumber') as string\r\n        const companyName = data.get('companyName') as string\r\n\r\n        if (date && orderNumber && (withContract && companyName || !withContract && !companyName)) {\r\n            dispatch(setDateData({\r\n                pickUpDate: date,\r\n                orderNumber,\r\n                withContract,\r\n                companyName\r\n            }))\r\n        } else {\r\n            setOpen(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CustomAlert open={open} setOpen={setOpen}/>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Укажите следующие данные:\r\n            </Typography>\r\n            <Box component=\"form\" onSubmit={handleSubmit}>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <LocalizationProvider\r\n                            dateAdapter={AdapterDayjs}\r\n                            adapterLocale='ru'\r\n                        >\r\n                            <DatePicker\r\n                                label=\"Дата забора\"\r\n                                value={date}\r\n                                onChange={e => setDate(e)}\r\n                                renderInput={(params) => <TextField fullWidth {...params} />}\r\n                            />\r\n                        </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            required\r\n                            id=\"orderNumber\"\r\n                            name=\"orderNumber\"\r\n                            label=\"Номер заказа или счета\"\r\n                            fullWidth\r\n                            autoComplete=\"orderNumber\"\r\n                            defaultValue={orderNumber}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item sm={12}>\r\n                        <FormControlLabel\r\n                            checked={withContract}\r\n                            onChange={() => setWithContract(withContract => !withContract)}\r\n                            control={<Checkbox/>}\r\n                            label=\"Есть договоренность\"\r\n                            name=\"withContract\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            disabled={!withContract}\r\n                            required\r\n                            id=\"companyName\"\r\n                            name=\"companyName\"\r\n                            label=\"Наименование ИП/ООО\"\r\n                            fullWidth\r\n                            autoComplete=\"companyName\"\r\n                            defaultValue={companyName}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                <Box sx={{display: 'flex', justifyContent: 'space-between', mt: 3}}>\r\n                    <Button onClick={handleBack}>\r\n                        Назад\r\n                    </Button>\r\n                    <Button variant=\"contained\" type=\"submit\">\r\n                        Далее\r\n                    </Button>\r\n                </Box>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Type\r\n","import {Box, Button, Typography, Grid, TextField, FormControlLabel} from '@mui/material'\r\nimport React, {FC, useState} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {PickUpSelector} from \"../../../store/selectors/selectors\";\r\nimport {AppDispatch} from \"../../../store/store\";\r\nimport {LocalizationProvider, TimePicker} from '@mui/x-date-pickers';\r\nimport {AdapterDayjs} from '@mui/x-date-pickers/AdapterDayjs';\r\nimport 'dayjs/locale/ru';\r\nimport {Dayjs} from 'dayjs';\r\nimport {decrementStep, setFromInfoData} from \"../../../store/slices/pick-up-slice\";\r\nimport CustomAlert from \"../../../components/alert\";\r\n\r\nconst FromInfo: FC = () => {\r\n    const {\r\n        fromLastName,\r\n        fromFirstName,\r\n        fromPhone,\r\n        fromExtraPhone,\r\n        fromAddress,\r\n        fromExtraAddress,\r\n        fromCompanyName,\r\n        fromPickUpTimeMin: fromPickUpTimeMinStore,\r\n        fromPickUpTimeMax: fromPickUpTimeMaxStore,\r\n        fromDocuments,\r\n    } = useSelector(PickUpSelector)\r\n    const dispatch = useDispatch<AppDispatch>()\r\n\r\n    const [fromPickUpTimeMin, setFromPickUpTimeMin] = React.useState<Dayjs | null>(fromPickUpTimeMinStore);\r\n    const [fromPickUpTimeMax, setFromPickUpTimeMax] = React.useState<Dayjs | null>(fromPickUpTimeMaxStore);\r\n    const [open, setOpen] = useState(false)\r\n\r\n    const handleBack = () => {\r\n        dispatch(decrementStep())\r\n    }\r\n\r\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        const data = new FormData(event.currentTarget);\r\n        const lastName = data.get('lastName') as string\r\n        const firstName = data.get('firstName') as string\r\n        const phoneNumber = data.get('phoneNumber') as string\r\n        const extraPhoneNumber = data.get('extraPhoneNumber') as string\r\n        const address = data.get('address') as string\r\n        const extraAddress = data.get('extraAddress') as string\r\n        const documents = data.get('documents') as string\r\n        const company = data.get('company') as string\r\n\r\n        if (lastName && firstName && phoneNumber && address && documents && company) {\r\n            dispatch(setFromInfoData({\r\n                fromLastName: lastName,\r\n                fromFirstName: firstName,\r\n                fromPhone: phoneNumber,\r\n                fromExtraPhone: extraPhoneNumber,\r\n                fromAddress: address,\r\n                fromExtraAddress: extraAddress,\r\n                fromCompanyName: company,\r\n                fromPickUpTimeMin,\r\n                fromPickUpTimeMax,\r\n                fromDocuments: documents\r\n            }))\r\n        } else {\r\n            setOpen(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CustomAlert open={open} setOpen={setOpen}/>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Укажите данные от кого забирать:\r\n            </Typography>\r\n            <Box component=\"form\" onSubmit={handleSubmit}>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            required\r\n                            id=\"lastName\"\r\n                            name=\"lastName\"\r\n                            label=\"Фамилия\"\r\n                            fullWidth\r\n                            autoComplete=\"family-name\"\r\n                            defaultValue={fromLastName}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            required\r\n                            id=\"firstName\"\r\n                            name=\"firstName\"\r\n                            label=\"Имя\"\r\n                            fullWidth\r\n                            autoComplete=\"given-name\"\r\n                            defaultValue={fromFirstName}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            required\r\n                            id=\"phoneNumber\"\r\n                            name=\"phoneNumber\"\r\n                            label=\"Номер телефона\"\r\n                            fullWidth\r\n                            autoComplete=\"tel\"\r\n                            type=\"phone\"\r\n                            defaultValue={fromPhone}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            id=\"extraPhoneNumber\"\r\n                            name=\"extraPhoneNumber\"\r\n                            label=\"Доп. номер телефона\"\r\n                            fullWidth\r\n                            autoComplete=\"tel\"\r\n                            type=\"phone\"\r\n                            defaultValue={fromExtraPhone}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            required\r\n                            id=\"address\"\r\n                            name=\"address\"\r\n                            label=\"Адрес\"\r\n                            fullWidth\r\n                            autoComplete=\"street-address\"\r\n                            defaultValue={fromAddress}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            id=\"extraAddress\"\r\n                            name=\"extraAddress\"\r\n                            label=\"Доп. адрес\"\r\n                            fullWidth\r\n                            autoComplete=\"street-address\"\r\n                            defaultValue={fromExtraAddress}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <LocalizationProvider\r\n                            dateAdapter={AdapterDayjs}\r\n                            adapterLocale='ru'\r\n                        >\r\n                            <TimePicker\r\n                                label=\"Время забора с\"\r\n                                value={fromPickUpTimeMin}\r\n                                onChange={(newValue) => setFromPickUpTimeMin(newValue)}\r\n                                renderInput={(params) => <TextField fullWidth {...params} />}\r\n                            />\r\n                        </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <LocalizationProvider\r\n                            dateAdapter={AdapterDayjs}\r\n                            adapterLocale='ru'\r\n                        >\r\n                            <TimePicker\r\n                                label=\"Время забора до\"\r\n                                value={fromPickUpTimeMax}\r\n                                onChange={(newValue) => setFromPickUpTimeMax(newValue)}\r\n                                renderInput={(params) => <TextField fullWidth {...params} />}\r\n                            />\r\n                        </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            required\r\n                            id=\"company\"\r\n                            name=\"company\"\r\n                            label=\"Название организации\"\r\n                            fullWidth\r\n                            autoComplete=\"organization\"\r\n                            defaultValue={fromCompanyName}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            required\r\n                            id=\"documents\"\r\n                            name=\"documents\"\r\n                            label=\"Документы\"\r\n                            fullWidth\r\n                            autoComplete=\"documents\"\r\n                            defaultValue={fromDocuments}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                <Box sx={{display: 'flex', justifyContent: 'space-between', mt: 3}}>\r\n                    <Button onClick={handleBack}>\r\n                        Назад\r\n                    </Button>\r\n                    <Button variant=\"contained\" type=\"submit\">\r\n                        Далее\r\n                    </Button>\r\n                </Box>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FromInfo\r\n","import React, {FC, useState} from 'react'\r\nimport {\r\n    Box,\r\n    Button,\r\n    FormControlLabel,\r\n    Radio,\r\n    RadioGroup,\r\n    TextField,\r\n    Typography\r\n} from \"@mui/material\";\r\nimport {decrementStep, setNatureData} from \"../../../store/slices/pick-up-slice\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppDispatch} from \"../../../store/store\";\r\nimport {PickUpSelector} from \"../../../store/selectors/selectors\";\r\nimport CustomAlert from \"../../../components/alert\";\r\n\r\nconst Nature: FC = () => {\r\n    const {nature, natureDescription} = useSelector(PickUpSelector)\r\n    const dispatch = useDispatch<AppDispatch>()\r\n\r\n    const [open, setOpen] = useState(false)\r\n\r\n    const handleBack = () => {\r\n        dispatch(decrementStep())\r\n    }\r\n\r\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        const data = new FormData(event.currentTarget);\r\n        const nature = data.get('nature') as string\r\n        const description = data.get('description') as string\r\n\r\n        if (nature && description) {\r\n            dispatch(setNatureData({nature, natureDescription: description}))\r\n        } else {\r\n            setOpen(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CustomAlert open={open} setOpen={setOpen}/>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Укажите тип груза:\r\n            </Typography>\r\n            <Box component=\"form\" onSubmit={handleSubmit}>\r\n                <RadioGroup\r\n                    aria-labelledby=\"pick-up-nature\"\r\n                    name=\"radio-buttons-group\"\r\n                    defaultValue={nature}\r\n                >\r\n                    <FormControlLabel name=\"nature\" value=\"коробка\" control={<Radio/>} label=\"Коробка\"/>\r\n                    <FormControlLabel name=\"nature\" value=\"пачка\" control={<Radio/>} label=\"Пачка\"/>\r\n                    <FormControlLabel name=\"nature\" value=\"другое\" control={<Radio/>} label=\"Другое\"/>\r\n                </RadioGroup>\r\n                <TextField\r\n                    defaultValue={natureDescription}\r\n                    name=\"description\"\r\n                    required\r\n                    id=\"outlined-multiline-flexible\"\r\n                    label=\"Описание\"\r\n                    multiline\r\n                    maxRows={4}\r\n                    placeholder=\"ВАЖНО: После выбора Коробка и Пачка, необходимо написать количество и вес. При выборе ДРУГОЕ опишите характер груза (например: Баннер длинной 2,30м; Паллет 400кг и т.д.)\"\r\n                    fullWidth\r\n                />\r\n                <Box sx={{display: 'flex', justifyContent: 'space-between', mt: 3}}>\r\n                    <Button onClick={handleBack}>\r\n                        Назад\r\n                    </Button>\r\n                    <Button variant=\"contained\" type=\"submit\">\r\n                        Далее\r\n                    </Button>\r\n                </Box>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Nature\r\n","import React, {useState} from 'react'\r\nimport {Box, Button, FormControlLabel, Radio, RadioGroup, Typography} from \"@mui/material\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppDispatch} from \"../../../store/store\";\r\nimport {decrementStep, setPassData} from \"../../../store/slices/pick-up-slice\";\r\nimport {PickUpSelector} from \"../../../store/selectors/selectors\";\r\nimport CustomAlert from \"../../../components/alert\";\r\n\r\nconst Pass = () => {\r\n    const {needPass} = useSelector(PickUpSelector)\r\n    const dispatch = useDispatch<AppDispatch>()\r\n\r\n    const [open, setOpen] = useState(false)\r\n\r\n    const handleBack = () => {\r\n        dispatch(decrementStep())\r\n    }\r\n\r\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        const data = new FormData(event.currentTarget);\r\n        const pass = data.get('pass') as string\r\n\r\n        if (pass) {\r\n            dispatch(setPassData({needPass: pass}))\r\n        } else {\r\n            setOpen(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CustomAlert open={open} setOpen={setOpen}/>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Нужен ли пропуск:\r\n            </Typography>\r\n            <Box component=\"form\" onSubmit={handleSubmit}>\r\n                <RadioGroup\r\n                    aria-labelledby=\"pick-up-pass\"\r\n                    name=\"radio-buttons-group\"\r\n                    defaultValue={needPass}\r\n                >\r\n                    <FormControlLabel name=\"pass\" value=\"нужен\" control={<Radio/>} label=\"Пропуск нужен\"/>\r\n                    <FormControlLabel name=\"pass\" value=\"не нужен\" control={<Radio/>} label=\"Пропуск не нужен\"/>\r\n                </RadioGroup>\r\n                <Box sx={{display: 'flex', justifyContent: 'space-between', mt: 3}}>\r\n                    <Button onClick={handleBack}>\r\n                        Назад\r\n                    </Button>\r\n                    <Button variant=\"contained\" type=\"submit\">\r\n                        Далее\r\n                    </Button>\r\n                </Box>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Pass\r\n","import React, {FC, useState} from 'react'\r\nimport {Box, Button, FormControlLabel, Radio, RadioGroup, Typography} from \"@mui/material\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppDispatch} from \"../../../store/store\";\r\nimport {\r\n    decrementStep,\r\n    incrementStep,\r\n    setCallData,\r\n    setPassData\r\n} from \"../../../store/slices/pick-up-slice\";\r\nimport {PickUpSelector} from \"../../../store/selectors/selectors\";\r\nimport CustomAlert from \"../../../components/alert\";\r\n\r\nconst Call: FC = () => {\r\n    const {call} = useSelector(PickUpSelector)\r\n    const dispatch = useDispatch<AppDispatch>()\r\n\r\n    const [open, setOpen] = useState(false)\r\n\r\n    const handleBack = () => {\r\n        dispatch(decrementStep())\r\n    }\r\n\r\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        const data = new FormData(event.currentTarget);\r\n        const call = data.get('call') as string\r\n\r\n        if (call) {\r\n            dispatch(setCallData({call}))\r\n        } else {\r\n            setOpen(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CustomAlert open={open} setOpen={setOpen}/>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Нужно ли созвониться заранее:\r\n            </Typography>\r\n            <Box component=\"form\" onSubmit={handleSubmit}>\r\n                <RadioGroup\r\n                    aria-labelledby=\"pick-up-call\"\r\n                    name=\"radio-buttons-group\"\r\n                    defaultValue={call}\r\n                >\r\n                    <FormControlLabel name=\"call\" value=\"15 минут\" control={<Radio/>} label=\"Созвониться за 15 минут\"/>\r\n                    <FormControlLabel name=\"call\" value=\"30 минут\" control={<Radio/>} label=\"Созвониться за 30 минут\"/>\r\n                    <FormControlLabel name=\"call\" value=\"1 час\" control={<Radio/>} label=\"Созвониться за час\"/>\r\n                    <FormControlLabel name=\"call\" value=\"3 часа\" control={<Radio/>} label=\"Созвониться за 3 часа\"/>\r\n                    <FormControlLabel name=\"call\" value=\"не нужно\" control={<Radio/>} label=\"Созвониваться не нужно\"/>\r\n                </RadioGroup>\r\n                <Box sx={{display: 'flex', justifyContent: 'space-between', mt: 3}}>\r\n                    <Button onClick={handleBack}>\r\n                        Назад\r\n                    </Button>\r\n                    <Button variant=\"contained\" type=\"submit\">\r\n                        Далее\r\n                    </Button>\r\n                </Box>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Call\r\n","import React, {FC, useState} from 'react'\r\nimport {Box, Button, FormControlLabel, Grid, Radio, RadioGroup, TextField, Typography} from \"@mui/material\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppDispatch} from \"../../../store/store\";\r\nimport {decrementStep, setFromInfoData, setToInfoData} from \"../../../store/slices/pick-up-slice\";\r\nimport {LocalizationProvider, TimePicker} from \"@mui/x-date-pickers\";\r\nimport {AdapterDayjs} from \"@mui/x-date-pickers/AdapterDayjs\";\r\nimport {PickUpSelector} from \"../../../store/selectors/selectors\";\r\nimport {Dayjs} from \"dayjs\";\r\nimport CustomAlert from \"../../../components/alert\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nconst To: FC = () => {\r\n    const {\r\n        toLastName,\r\n        toFirstName,\r\n        toPhone,\r\n        toExtraPhone,\r\n        toAddress,\r\n        toExtraAddress,\r\n        toCompanyName,\r\n        toPickUpTimeMin: toPickUpTimeMinStore,\r\n        toPickUpTimeMax: toPickUpTimeMaxStore,\r\n        toDocuments,\r\n    } = useSelector(PickUpSelector)\r\n    const dispatch = useDispatch<AppDispatch>()\r\n\r\n    const [toPickUpTimeMin, setToPickUpTimeMin] = React.useState<Dayjs | null>(toPickUpTimeMinStore);\r\n    const [toPickUpTimeMax, setToPickUpTimeMax] = React.useState<Dayjs | null>(toPickUpTimeMaxStore);\r\n    const [open, setOpen] = useState(false)\r\n\r\n    const [to, setTo] = useState('')\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const handleBack = () => {\r\n        dispatch(decrementStep())\r\n    }\r\n\r\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        const data = new FormData(event.currentTarget);\r\n        const lastName = data.get('lastName') as string\r\n        const firstName = data.get('firstName') as string\r\n        const phoneNumber = data.get('phoneNumber') as string\r\n        const extraPhoneNumber = data.get('extraPhoneNumber') as string\r\n        const address = data.get('address') as string\r\n        const extraAddress = data.get('extraAddress') as string\r\n        const documents = data.get('documents') as string\r\n        const company = data.get('company') as string\r\n\r\n        if (to === 'Офис' || lastName && firstName && phoneNumber && address && documents && company) {\r\n            dispatch(setToInfoData({\r\n                to,\r\n                toLastName: lastName,\r\n                toFirstName: firstName,\r\n                toPhone: phoneNumber,\r\n                toExtraPhone: extraPhoneNumber,\r\n                toAddress: address,\r\n                toExtraAddress: extraAddress,\r\n                toCompanyName: company,\r\n                toPickUpTimeMin,\r\n                toPickUpTimeMax,\r\n                toDocuments: documents\r\n            }))\r\n            navigate('/pick-up-check')\r\n        } else {\r\n            setOpen(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CustomAlert open={open} setOpen={setOpen}/>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Укажите адрес доставки:\r\n            </Typography>\r\n            <Box component=\"form\" onSubmit={handleSubmit}>\r\n                <RadioGroup\r\n                    aria-labelledby=\"pick-up-to\"\r\n                    name=\"radio-buttons-group\"\r\n                    value={to}\r\n                    onChange={e => setTo(e.target.value)}\r\n                >\r\n                    <FormControlLabel value=\"Офис\" control={<Radio/>} label=\"Офис\"/>\r\n                    <FormControlLabel value=\"Другое\" control={<Radio/>} label=\"Другое\"/>\r\n                </RadioGroup>\r\n                {to === 'Другое' &&\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                required\r\n                                id=\"lastName\"\r\n                                name=\"lastName\"\r\n                                label=\"Фамилия\"\r\n                                fullWidth\r\n                                autoComplete=\"family-name\"\r\n                                defaultValue={toLastName}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                required\r\n                                id=\"firstName\"\r\n                                name=\"firstName\"\r\n                                label=\"Имя\"\r\n                                fullWidth\r\n                                autoComplete=\"given-name\"\r\n                                defaultValue={toFirstName}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                required\r\n                                id=\"phoneNumber\"\r\n                                name=\"phoneNumber\"\r\n                                label=\"Номер телефона\"\r\n                                fullWidth\r\n                                autoComplete=\"tel\"\r\n                                type=\"phone\"\r\n                                defaultValue={toPhone}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                id=\"extraPhoneNumber\"\r\n                                name=\"extraPhoneNumber\"\r\n                                label=\"Доп. номер телефона\"\r\n                                fullWidth\r\n                                autoComplete=\"tel\"\r\n                                type=\"phone\"\r\n                                defaultValue={toExtraPhone}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                required\r\n                                id=\"address\"\r\n                                name=\"address\"\r\n                                label=\"Адрес\"\r\n                                fullWidth\r\n                                autoComplete=\"street-address\"\r\n                                defaultValue={toAddress}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                id=\"extraAddress\"\r\n                                name=\"extraAddress\"\r\n                                label=\"Доп. адрес\"\r\n                                fullWidth\r\n                                autoComplete=\"street-address\"\r\n                                defaultValue={toExtraAddress}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <LocalizationProvider\r\n                                dateAdapter={AdapterDayjs}\r\n                                adapterLocale='ru'\r\n                            >\r\n                                <TimePicker\r\n                                    label=\"Время забора с\"\r\n                                    value={toPickUpTimeMin}\r\n                                    onChange={(newValue) => setToPickUpTimeMin(newValue)}\r\n                                    renderInput={(params) => <TextField fullWidth {...params} />}\r\n                                />\r\n                            </LocalizationProvider>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <LocalizationProvider\r\n                                dateAdapter={AdapterDayjs}\r\n                                adapterLocale='ru'\r\n                            >\r\n                                <TimePicker\r\n                                    label=\"Время забора до\"\r\n                                    value={toPickUpTimeMax}\r\n                                    onChange={(newValue) => setToPickUpTimeMax(newValue)}\r\n                                    renderInput={(params) => <TextField fullWidth {...params} />}\r\n                                />\r\n                            </LocalizationProvider>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                required\r\n                                id=\"company\"\r\n                                name=\"company\"\r\n                                label=\"Название организации\"\r\n                                fullWidth\r\n                                autoComplete=\"organization\"\r\n                                defaultValue={toCompanyName}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                required\r\n                                id=\"documents\"\r\n                                name=\"documents\"\r\n                                label=\"Документы\"\r\n                                fullWidth\r\n                                autoComplete=\"documents\"\r\n                                defaultValue={toDocuments}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                }\r\n                <Box sx={{display: 'flex', justifyContent: 'space-between', mt: 3}}>\r\n                    <Button onClick={handleBack}>\r\n                        Назад\r\n                    </Button>\r\n                    <Button variant=\"contained\" type=\"submit\">\r\n                        Проверить\r\n                    </Button>\r\n                </Box>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default To\r\n","import React, {FC} from 'react'\r\nimport {AppBar, Toolbar, Typography} from \"@mui/material\";\r\n\r\nconst Header: FC = () => {\r\n\r\n    return (\r\n        <AppBar\r\n            position=\"absolute\"\r\n            color=\"default\"\r\n            elevation={0}\r\n            sx={{\r\n                position: 'relative',\r\n                borderBottom: (t) => `1px solid ${t.palette.divider}`,\r\n            }}\r\n        >\r\n            <Toolbar>\r\n                <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n                    закажи-доставку.рф\r\n                </Typography>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React, {FC, useCallback} from 'react'\r\nimport {Container, CssBaseline, Paper, Step, StepLabel, Stepper, Typography} from \"@mui/material\";\r\nimport Copyright from '../../components/copyright'\r\nimport {useSelector} from 'react-redux';\r\nimport {PickUpSelector} from \"../../store/selectors/selectors\";\r\nimport From from \"./steps/from\";\r\nimport Type from \"./steps/type\";\r\nimport Date from \"./steps/date\";\r\nimport FromInfo from \"./steps/from-info\";\r\nimport Nature from \"./steps/nature\";\r\nimport Pass from \"./steps/pass\";\r\nimport Call from \"./steps/call\";\r\nimport To from \"./steps/to\";\r\nimport Header from \"../../components/header\";\r\n\r\nconst PickUp: FC = () => {\r\n    const {step} = useSelector(PickUpSelector)\r\n\r\n    const getStepContent = useCallback(\r\n        (step: number) => {\r\n            switch (step) {\r\n                case 0:\r\n                    return <From/>\r\n                case 1:\r\n                    return <Type/>\r\n                case 2:\r\n                    return <Date/>\r\n                case 3:\r\n                    return <FromInfo/>\r\n                case 4:\r\n                    return <Nature/>\r\n                case 5:\r\n                    return <Pass/>\r\n                case 6:\r\n                    return <Call/>\r\n                case 7:\r\n                    return <To/>\r\n            }\r\n        }, [])\r\n\r\n    return (\r\n        <>\r\n            <CssBaseline/>\r\n            <Header/>\r\n            <Container component=\"main\" maxWidth=\"sm\" sx={{mb: 4}}>\r\n                <Paper variant=\"outlined\" sx={{my: {xs: 3, md: 6}, p: {xs: 2, md: 3}}}>\r\n                    <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n                        Забор груза\r\n                    </Typography>\r\n                    <Stepper activeStep={step} alternativeLabel sx={{pt: 3, pb: 5}}>\r\n                        {Array(8).fill('').map((el, i) => (\r\n                            <Step key={i}>\r\n                                <StepLabel/>\r\n                            </Step>\r\n                        ))}\r\n                    </Stepper>\r\n                    <>\r\n                        {getStepContent(step)}\r\n                    </>\r\n                </Paper>\r\n                <Copyright/>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PickUp\r\n","import React, {FC, useEffect} from 'react'\r\nimport {Box, Button, Container, CssBaseline, Grid, Paper, Typography} from \"@mui/material\";\r\nimport Header from \"../../../components/header\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {PickUpSelector} from \"../../../store/selectors/selectors\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport Copyright from \"../../../components/copyright\";\r\nimport dayjs from \"dayjs\";\r\n\r\nconst PickUpCheck: FC = () => {\r\n    const {\r\n        step,\r\n        from,\r\n        type,\r\n        pickUpDate,\r\n        orderNumber,\r\n        withContract,\r\n        companyName,\r\n        fromLastName,\r\n        fromFirstName,\r\n        fromPhone,\r\n        fromExtraPhone,\r\n        fromAddress,\r\n        fromExtraAddress,\r\n        fromCompanyName,\r\n        fromPickUpTimeMin,\r\n        fromPickUpTimeMax,\r\n        fromDocuments,\r\n        nature,\r\n        natureDescription,\r\n        needPass,\r\n        call,\r\n\r\n        to,\r\n        toLastName,\r\n        toFirstName,\r\n        toPhone,\r\n        toExtraPhone,\r\n        toAddress,\r\n        toExtraAddress,\r\n        toCompanyName,\r\n        toPickUpTimeMin,\r\n        toPickUpTimeMax,\r\n        toDocuments,\r\n    }\r\n        = useSelector(PickUpSelector)\r\n\r\n    const navigate = useNavigate()\r\n\r\n    useEffect(() => {\r\n        if (step < 7) {\r\n            navigate('pick-up')\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <CssBaseline/>\r\n            <Header/>\r\n            <Container component=\"main\" maxWidth=\"md\" sx={{mb: 4}}>\r\n                <Paper variant=\"outlined\" sx={{my: {xs: 3, md: 6}, p: {xs: 2, md: 3}}}>\r\n                    <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n                        Проверка данных\r\n                    </Typography>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <Typography variant=\"h6\" align=\"center\">\r\n                                Откуда везем\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Забираем от: {from}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Выберите вид услуги: {type}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Дата забора: {dayjs(pickUpDate).format('DD.MM.YYYY')}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Номер заказа или счета: {orderNumber}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Есть договоренность: {withContract ? 'да' : 'нет'}\r\n                            </Typography>\r\n                            {withContract &&\r\n                                <Typography variant=\"subtitle1\">\r\n                                    Наименование ИП/ООО: {companyName}\r\n                                </Typography>\r\n                            }\r\n                            <Typography variant=\"subtitle1\">\r\n                                Фамилия: {fromLastName}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Имя: {fromFirstName}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Номер телефона: {fromPhone}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Доп. номер телефона: {fromExtraPhone}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Адрес: {fromAddress}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Доп. адрес: {fromExtraAddress}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Время забора с: {dayjs(fromPickUpTimeMin).format('HH : mm')}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Время забора до: {dayjs(fromPickUpTimeMax).format('HH : mm')}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Название организации: {fromCompanyName}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Документы: {fromDocuments}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Укажите тип груза: {nature}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Описание груза: {natureDescription}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Нужен ли пропуск: {needPass}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Нужно ли созвониться заранее: {call}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <Typography variant=\"h6\" align=\"center\">\r\n                                Куда везем\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Адрес доставки: {to}\r\n                            </Typography>\r\n                            {to === 'Другое' &&\r\n                                <>\r\n                                    <Typography variant=\"subtitle1\">\r\n                                        Фамилия: {toLastName}\r\n                                    </Typography>\r\n                                    <Typography variant=\"subtitle1\">\r\n                                        Имя: {toFirstName}\r\n                                    </Typography>\r\n                                    <Typography variant=\"subtitle1\">\r\n                                        Номер телефона: {toPhone}\r\n                                    </Typography>\r\n                                    <Typography variant=\"subtitle1\">\r\n                                        Доп. номер телефона: {toExtraPhone}\r\n                                    </Typography>\r\n                                    <Typography variant=\"subtitle1\">\r\n                                        Адрес: {toAddress}\r\n                                    </Typography>\r\n                                    <Typography variant=\"subtitle1\">\r\n                                        Доп. адрес: {toExtraAddress}\r\n                                    </Typography>\r\n                                    <Typography variant=\"subtitle1\">\r\n                                        Время забора с: {dayjs(toPickUpTimeMin).format('HH : mm')}\r\n                                    </Typography>\r\n                                    <Typography variant=\"subtitle1\">\r\n                                        Время забора до: {dayjs(toPickUpTimeMax).format('HH : mm')}\r\n                                    </Typography>\r\n                                    <Typography variant=\"subtitle1\">\r\n                                        Название организации: {toCompanyName}\r\n                                    </Typography>\r\n                                    <Typography variant=\"subtitle1\">\r\n                                        Документы: {toDocuments}\r\n                                    </Typography>\r\n                                </>\r\n                            }\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Box sx={{display: 'flex', justifyContent: 'space-between', mt: 3}}>\r\n                        <Button>\r\n                            Назад\r\n                        </Button>\r\n                        <Button variant=\"contained\" type=\"submit\">\r\n                            Подтвердить\r\n                        </Button>\r\n                    </Box>\r\n                </Paper>\r\n                <Copyright/>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PickUpCheck\r\n","import React, {FC} from 'react'\r\nimport {Box, Button, Container, CssBaseline, Paper, Typography} from \"@mui/material\";\r\nimport Header from \"../../components/header\";\r\nimport Copyright from \"../../components/copyright\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nconst Choose: FC = () => {\r\n    const navigate = useNavigate()\r\n\r\n    return (\r\n        <>\r\n            <CssBaseline/>\r\n            <Header/>\r\n            <Container component=\"main\" maxWidth=\"sm\" sx={{mb: 4}}>\r\n                <Paper variant=\"outlined\" sx={{my: {xs: 3, md: 6}, p: {xs: 2, md: 3}}}>\r\n                    <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n                        Выберите тип заказа:\r\n                    </Typography>\r\n                    <Box sx={{display: 'flex', justifyContent: 'space-around', mt: 3}}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            size=\"large\"\r\n                            onClick={() => navigate('/delivery')}\r\n                        >\r\n                            Доставка\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            size=\"large\"\r\n                            onClick={() => navigate('/pick-up')}\r\n                        >\r\n                            Забор\r\n                        </Button>\r\n                    </Box>\r\n                </Paper>\r\n                <Copyright/>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Choose\r\n","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\r\nimport {Dayjs} from \"dayjs\";\r\n\r\ninterface State {\r\n    step: number\r\n    to: string,\r\n    type: string,\r\n    ready: string\r\n    date: Dayjs | null\r\n    appNumber: string\r\n    fromLastName: string\r\n    fromFirstName: string\r\n    fromPhone: string\r\n    fromExtraPhone: string\r\n    fromAddress: string\r\n    fromExtraAddress: string\r\n    fromCompanyName: string\r\n    fromPickUpTimeMin: null | Dayjs\r\n    fromPickUpTimeMax: null | Dayjs\r\n    fromDocuments: string\r\n    nature: string\r\n    natureDescription: string\r\n    toLastName: string\r\n    toFirstName: string\r\n    toPhone: string\r\n    toExtraPhone: string\r\n    toAddress: string\r\n    toExtraAddress: string\r\n    toCompanyName: string\r\n    toPickUpTimeMin: null | Dayjs\r\n    toPickUpTimeMax: null | Dayjs\r\n    toDocuments: string\r\n    needPass: string\r\n    call: string\r\n}\r\n\r\nconst initialState: State = {\r\n    step: 0,\r\n    to: '',\r\n    type: '',\r\n    ready: '',\r\n    date: null,\r\n    appNumber: '',\r\n    fromLastName: '',\r\n    fromFirstName: '',\r\n    fromPhone: '',\r\n    fromExtraPhone: '',\r\n    fromAddress: '',\r\n    fromExtraAddress: '',\r\n    fromCompanyName: '',\r\n    fromPickUpTimeMin: null,\r\n    fromPickUpTimeMax: null,\r\n    fromDocuments: '',\r\n    nature: '',\r\n    natureDescription: '',\r\n    toLastName: '',\r\n    toFirstName: '',\r\n    toPhone: '',\r\n    toExtraPhone: '',\r\n    toAddress: '',\r\n    toExtraAddress: '',\r\n    toCompanyName: '',\r\n    toPickUpTimeMin: null,\r\n    toPickUpTimeMax: null,\r\n    toDocuments: '',\r\n    needPass: '',\r\n    call: '',\r\n}\r\n\r\nconst PickUpSlice = createSlice({\r\n    name: 'delivery',\r\n    initialState,\r\n    reducers: {\r\n        decrementStep(state) {\r\n            --state.step\r\n        },\r\n        setToData(state, action: PayloadAction<string>) {\r\n            ++state.step\r\n            state.to = action.payload\r\n        },\r\n        setTypeData(state, action: PayloadAction<string>) {\r\n            ++state.step\r\n            state.type = action.payload\r\n        },\r\n        setDateData(state, action: PayloadAction<{\r\n            ready: string,\r\n            date: Dayjs | null,\r\n            appNumber: string\r\n        }>) {\r\n            ++state.step\r\n            state.ready = action.payload.ready\r\n            state.date = action.payload.date\r\n            state.appNumber = action.payload.appNumber\r\n        },\r\n        setFromData(state, action: PayloadAction<{\r\n            fromLastName: string\r\n            fromFirstName: string\r\n            fromPhone: string\r\n            fromExtraPhone: string\r\n            fromAddress: string\r\n            fromExtraAddress: string\r\n            fromCompanyName: string\r\n            fromPickUpTimeMin: null | Dayjs\r\n            fromPickUpTimeMax: null | Dayjs\r\n            fromDocuments: string\r\n        }>) {\r\n            ++state.step\r\n            state.fromLastName = action.payload.fromLastName\r\n            state.fromFirstName = action.payload.fromFirstName\r\n            state.fromPhone = action.payload.fromPhone\r\n            state.fromExtraPhone = action.payload.fromExtraPhone\r\n            state.fromAddress = action.payload.fromAddress\r\n            state.fromExtraAddress = action.payload.fromExtraAddress\r\n            state.fromCompanyName = action.payload.fromCompanyName\r\n            state.fromPickUpTimeMin = action.payload.fromPickUpTimeMin\r\n            state.fromPickUpTimeMax = action.payload.fromPickUpTimeMax\r\n            state.fromDocuments = action.payload.fromDocuments\r\n        },\r\n        setNatureData(state, action: PayloadAction<{\r\n            nature: string\r\n            natureDescription: string\r\n        }>) {\r\n            ++state.step\r\n            state.nature = action.payload.nature\r\n            state.natureDescription = action.payload.natureDescription\r\n        },\r\n        setAddressData(state, action: PayloadAction<{\r\n            toLastName: string\r\n            toFirstName: string\r\n            toPhone: string\r\n            toExtraPhone: string\r\n            toAddress: string\r\n            toExtraAddress: string\r\n            toCompanyName: string\r\n            toPickUpTimeMin: null | Dayjs\r\n            toPickUpTimeMax: null | Dayjs\r\n            toDocuments: string\r\n        }>) {\r\n            ++state.step\r\n            state.toLastName = action.payload.toLastName\r\n            state.toFirstName = action.payload.toFirstName\r\n            state.toPhone = action.payload.toPhone\r\n            state.toExtraPhone = action.payload.toExtraPhone\r\n            state.toAddress = action.payload.toAddress\r\n            state.toExtraAddress = action.payload.toExtraAddress\r\n            state.toCompanyName = action.payload.toCompanyName\r\n            state.toPickUpTimeMin = action.payload.toPickUpTimeMin\r\n            state.toPickUpTimeMax = action.payload.toPickUpTimeMax\r\n            state.toDocuments = action.payload.toDocuments\r\n        },\r\n        setPassData(state, action: PayloadAction<{ needPass: string }>) {\r\n            ++state.step\r\n            state.needPass = action.payload.needPass\r\n        },\r\n        setCallData(state, action: PayloadAction<{ call: string }>) {\r\n            ++state.step\r\n            state.call = action.payload.call\r\n        },\r\n    }\r\n})\r\n\r\nexport const {\r\n    decrementStep,\r\n    setToData,\r\n    setTypeData,\r\n    setDateData,\r\n    setFromData,\r\n    setNatureData,\r\n    setAddressData,\r\n    setPassData,\r\n    setCallData\r\n} = PickUpSlice.actions\r\nexport default PickUpSlice.reducer\r\n","import {Box, Button, RadioGroup, Typography, Radio, FormControlLabel} from '@mui/material'\r\nimport React, {FC, useState} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {DeliverySelector} from \"../../../store/selectors/selectors\";\r\nimport {AppDispatch} from \"../../../store/store\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport CustomAlert from \"../../../components/alert\";\r\nimport {setToData} from \"../../../store/slices/delivery-slice\";\r\n\r\nconst From: FC = () => {\r\n    const [open, setOpen] = useState(false)\r\n    const {to} = useSelector(DeliverySelector)\r\n    const dispatch = useDispatch<AppDispatch>()\r\n    const navigate = useNavigate()\r\n\r\n    const handleBack = () => {\r\n        navigate('/choose')\r\n    }\r\n\r\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        const data = new FormData(event.currentTarget);\r\n        const to = data.get('to') as string\r\n\r\n        if (to) {\r\n            dispatch(setToData(to))\r\n        } else {\r\n            setOpen(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CustomAlert open={open} setOpen={setOpen}/>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Кому везем:\r\n            </Typography>\r\n            <Box component=\"form\" onSubmit={handleSubmit}>\r\n                <RadioGroup\r\n                    aria-labelledby=\"pick-up-from\"\r\n                    name=\"radio-buttons-group\"\r\n                    defaultValue={to}\r\n                >\r\n                    <FormControlLabel name='to' value=\"клиент\" control={<Radio/>} label=\"Клиент\"/>\r\n                    <FormControlLabel name='to' value=\"подрядчик\" control={<Radio/>} label=\"Подрядчик\"/>\r\n                </RadioGroup>\r\n                <Box sx={{display: 'flex', justifyContent: 'space-between', mt: 3}}>\r\n                    <Button onClick={handleBack}>\r\n                        Назад\r\n                    </Button>\r\n                    <Button type=\"submit\" variant=\"contained\">\r\n                        Далее\r\n                    </Button>\r\n                </Box>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default From\r\n","import {Box, Button, RadioGroup, Typography, Radio, FormControlLabel} from '@mui/material'\r\nimport React, {FC, useState} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {DeliverySelector} from \"../../../store/selectors/selectors\";\r\nimport {AppDispatch} from \"../../../store/store\";\r\nimport CustomAlert from \"../../../components/alert\";\r\nimport {decrementStep, setTypeData} from \"../../../store/slices/delivery-slice\";\r\n\r\nconst Type: FC = () => {\r\n    const [open, setOpen] = useState(false)\r\n    const {type} = useSelector(DeliverySelector)\r\n    const dispatch = useDispatch<AppDispatch>()\r\n\r\n    const handleBack = () => {\r\n        dispatch(decrementStep())\r\n    }\r\n\r\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        const data = new FormData(event.currentTarget);\r\n        const type = data.get('type') as string\r\n\r\n        if (type) {\r\n            dispatch(setTypeData(type))\r\n        } else {\r\n            setOpen(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CustomAlert open={open} setOpen={setOpen}/>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Укажите тип услуги:\r\n            </Typography>\r\n            <Box component=\"form\" onSubmit={handleSubmit}>\r\n                <RadioGroup\r\n                    aria-labelledby=\"pick-up-from\"\r\n                    name=\"radio-buttons-group\"\r\n                    defaultValue={type}\r\n                >\r\n                    <FormControlLabel name='type' value=\"авто\" control={<Radio/>} label=\"Авто\"/>\r\n                    <FormControlLabel name='type' value=\"пеший\" control={<Radio/>} label=\"Пеший\"/>\r\n                </RadioGroup>\r\n                <Box sx={{display: 'flex', justifyContent: 'space-between', mt: 3}}>\r\n                    <Button onClick={handleBack}>\r\n                        Назад\r\n                    </Button>\r\n                    <Button type=\"submit\" variant=\"contained\">\r\n                        Далее\r\n                    </Button>\r\n                </Box>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Type\r\n","import {Box, Button, RadioGroup, Typography, Radio, FormControlLabel, Grid, TextField} from '@mui/material'\r\nimport React, {FC, useState} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {DeliverySelector} from \"../../../store/selectors/selectors\";\r\nimport {AppDispatch} from \"../../../store/store\";\r\nimport CustomAlert from \"../../../components/alert\";\r\nimport {decrementStep, setDateData} from \"../../../store/slices/delivery-slice\";\r\nimport {AdapterDayjs} from \"@mui/x-date-pickers/AdapterDayjs\";\r\nimport {DatePicker} from \"@mui/x-date-pickers/DatePicker\";\r\nimport {LocalizationProvider} from \"@mui/x-date-pickers/LocalizationProvider\";\r\nimport {Dayjs} from \"dayjs\";\r\n\r\nconst Date: FC = () => {\r\n    const [open, setOpen] = useState(false)\r\n    const {ready, date: dateStore, appNumber} = useSelector(DeliverySelector)\r\n    const dispatch = useDispatch<AppDispatch>()\r\n\r\n    const [date, setDate] = useState<Dayjs | null>(dateStore)\r\n\r\n    const handleBack = () => {\r\n        dispatch(decrementStep())\r\n    }\r\n\r\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        const data = new FormData(event.currentTarget);\r\n        const ready = data.get('ready') as string\r\n        const appNumber = data.get('appNumber') as string\r\n\r\n        if (ready && appNumber && date) {\r\n            dispatch(setDateData({ready, appNumber, date}))\r\n        } else {\r\n            setOpen(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CustomAlert open={open} setOpen={setOpen}/>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Укажите следующие данные:\r\n            </Typography>\r\n            <Box component=\"form\" onSubmit={handleSubmit}>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            required\r\n                            name=\"appNumber\"\r\n                            label=\"Номер заказа\"\r\n                            fullWidth\r\n                            autoComplete=\"order-number\"\r\n                            defaultValue={appNumber}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <LocalizationProvider\r\n                            dateAdapter={AdapterDayjs}\r\n                            adapterLocale='ru'\r\n                        >\r\n                            <DatePicker\r\n                                label=\"Дата забора\"\r\n                                value={date}\r\n                                onChange={e => setDate(e)}\r\n                                renderInput={(params) => <TextField fullWidth {...params} />}\r\n                            />\r\n                        </LocalizationProvider>\r\n                    </Grid>\r\n                </Grid>\r\n                <RadioGroup\r\n                    aria-labelledby=\"pick-up-from\"\r\n                    name=\"radio-buttons-group\"\r\n                    defaultValue={ready}\r\n                >\r\n                    <FormControlLabel name='ready' value=\"заказ не готов\" control={<Radio/>} label=\"Заказ не готов\"/>\r\n                    <FormControlLabel name='ready' value=\"заказ готов\" control={<Radio/>} label=\"Заказ готов\"/>\r\n                </RadioGroup>\r\n                <Box sx={{display: 'flex', justifyContent: 'space-between', mt: 3}}>\r\n                    <Button onClick={handleBack}>\r\n                        Назад\r\n                    </Button>\r\n                    <Button type=\"submit\" variant=\"contained\">\r\n                        Далее\r\n                    </Button>\r\n                </Box>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Date\r\n","import React, {FC, useState} from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {DeliverySelector} from \"../../../store/selectors/selectors\";\r\nimport {AppDispatch} from \"../../../store/store\";\r\nimport {Dayjs} from \"dayjs\";\r\nimport {decrementStep} from \"../../../store/slices/pick-up-slice\";\r\nimport CustomAlert from \"../../../components/alert\";\r\nimport {Box, Button, Grid, TextField, Typography} from \"@mui/material\";\r\nimport {LocalizationProvider, TimePicker} from \"@mui/x-date-pickers\";\r\nimport {AdapterDayjs} from \"@mui/x-date-pickers/AdapterDayjs\";\r\nimport {setFromData} from \"../../../store/slices/delivery-slice\";\r\n\r\nconst From: FC = () => {\r\n    const {\r\n        fromLastName,\r\n        fromFirstName,\r\n        fromPhone,\r\n        fromExtraPhone,\r\n        fromAddress,\r\n        fromExtraAddress,\r\n        fromCompanyName,\r\n        fromPickUpTimeMin: fromPickUpTimeMinStore,\r\n        fromPickUpTimeMax: fromPickUpTimeMaxStore,\r\n        fromDocuments,\r\n    } = useSelector(DeliverySelector)\r\n    const dispatch = useDispatch<AppDispatch>()\r\n\r\n    const [fromPickUpTimeMin, setFromPickUpTimeMin] = React.useState<Dayjs | null>(fromPickUpTimeMinStore);\r\n    const [fromPickUpTimeMax, setFromPickUpTimeMax] = React.useState<Dayjs | null>(fromPickUpTimeMaxStore);\r\n    const [open, setOpen] = useState(false)\r\n\r\n    const handleBack = () => {\r\n        dispatch(decrementStep())\r\n    }\r\n\r\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        const data = new FormData(event.currentTarget);\r\n        const lastName = data.get('lastName') as string\r\n        const firstName = data.get('firstName') as string\r\n        const phoneNumber = data.get('phoneNumber') as string\r\n        const extraPhoneNumber = data.get('extraPhoneNumber') as string\r\n        const address = data.get('address') as string\r\n        const extraAddress = data.get('extraAddress') as string\r\n        const documents = data.get('documents') as string\r\n        const company = data.get('company') as string\r\n\r\n        if (lastName && firstName && phoneNumber && address && documents && company) {\r\n            dispatch(setFromData({\r\n                fromLastName: lastName,\r\n                fromFirstName: firstName,\r\n                fromPhone: phoneNumber,\r\n                fromExtraPhone: extraPhoneNumber,\r\n                fromAddress: address,\r\n                fromExtraAddress: extraAddress,\r\n                fromCompanyName: company,\r\n                fromPickUpTimeMin,\r\n                fromPickUpTimeMax,\r\n                fromDocuments: documents\r\n            }))\r\n        } else {\r\n            setOpen(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CustomAlert open={open} setOpen={setOpen}/>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Укажите данные от кого забирать:\r\n            </Typography>\r\n            <Box component=\"form\" onSubmit={handleSubmit}>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            required\r\n                            id=\"lastName\"\r\n                            name=\"lastName\"\r\n                            label=\"Фамилия\"\r\n                            fullWidth\r\n                            autoComplete=\"family-name\"\r\n                            defaultValue={fromLastName}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            required\r\n                            id=\"firstName\"\r\n                            name=\"firstName\"\r\n                            label=\"Имя\"\r\n                            fullWidth\r\n                            autoComplete=\"given-name\"\r\n                            defaultValue={fromFirstName}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            required\r\n                            id=\"phoneNumber\"\r\n                            name=\"phoneNumber\"\r\n                            label=\"Номер телефона\"\r\n                            fullWidth\r\n                            autoComplete=\"tel\"\r\n                            type=\"phone\"\r\n                            defaultValue={fromPhone}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            id=\"extraPhoneNumber\"\r\n                            name=\"extraPhoneNumber\"\r\n                            label=\"Доп. номер телефона\"\r\n                            fullWidth\r\n                            autoComplete=\"tel\"\r\n                            type=\"phone\"\r\n                            defaultValue={fromExtraPhone}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            required\r\n                            id=\"address\"\r\n                            name=\"address\"\r\n                            label=\"Адрес\"\r\n                            fullWidth\r\n                            autoComplete=\"street-address\"\r\n                            defaultValue={fromAddress}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            id=\"extraAddress\"\r\n                            name=\"extraAddress\"\r\n                            label=\"Доп. адрес\"\r\n                            fullWidth\r\n                            autoComplete=\"street-address\"\r\n                            defaultValue={fromExtraAddress}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <LocalizationProvider\r\n                            dateAdapter={AdapterDayjs}\r\n                            adapterLocale='ru'\r\n                        >\r\n                            <TimePicker\r\n                                label=\"Время забора с\"\r\n                                value={fromPickUpTimeMin}\r\n                                onChange={(newValue) => setFromPickUpTimeMin(newValue)}\r\n                                renderInput={(params) => <TextField fullWidth {...params} />}\r\n                            />\r\n                        </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <LocalizationProvider\r\n                            dateAdapter={AdapterDayjs}\r\n                            adapterLocale='ru'\r\n                        >\r\n                            <TimePicker\r\n                                label=\"Время забора до\"\r\n                                value={fromPickUpTimeMax}\r\n                                onChange={(newValue) => setFromPickUpTimeMax(newValue)}\r\n                                renderInput={(params) => <TextField fullWidth {...params} />}\r\n                            />\r\n                        </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            required\r\n                            id=\"company\"\r\n                            name=\"company\"\r\n                            label=\"Название организации\"\r\n                            fullWidth\r\n                            autoComplete=\"organization\"\r\n                            defaultValue={fromCompanyName}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            required\r\n                            id=\"documents\"\r\n                            name=\"documents\"\r\n                            label=\"Документы\"\r\n                            fullWidth\r\n                            autoComplete=\"documents\"\r\n                            defaultValue={fromDocuments}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                <Box sx={{display: 'flex', justifyContent: 'space-between', mt: 3}}>\r\n                    <Button onClick={handleBack}>\r\n                        Назад\r\n                    </Button>\r\n                    <Button variant=\"contained\" type=\"submit\">\r\n                        Далее\r\n                    </Button>\r\n                </Box>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default From\r\n","import React, {FC, useState} from 'react'\r\nimport {\r\n    Box,\r\n    Button,\r\n    FormControlLabel,\r\n    Radio,\r\n    RadioGroup,\r\n    TextField,\r\n    Typography\r\n} from \"@mui/material\";\r\nimport {decrementStep, setNatureData} from \"../../../store/slices/delivery-slice\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppDispatch} from \"../../../store/store\";\r\nimport {DeliverySelector} from \"../../../store/selectors/selectors\";\r\nimport CustomAlert from \"../../../components/alert\";\r\n\r\nconst Nature: FC = () => {\r\n    const {nature, natureDescription} = useSelector(DeliverySelector)\r\n    const dispatch = useDispatch<AppDispatch>()\r\n\r\n    const [open, setOpen] = useState(false)\r\n\r\n    const handleBack = () => {\r\n        dispatch(decrementStep())\r\n    }\r\n\r\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        const data = new FormData(event.currentTarget);\r\n        const nature = data.get('nature') as string\r\n        const description = data.get('description') as string\r\n\r\n        if (nature && description) {\r\n            dispatch(setNatureData({nature, natureDescription: description}))\r\n        } else {\r\n            setOpen(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CustomAlert open={open} setOpen={setOpen}/>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Укажите тип груза:\r\n            </Typography>\r\n            <Box component=\"form\" onSubmit={handleSubmit}>\r\n                <RadioGroup\r\n                    aria-labelledby=\"pick-up-nature\"\r\n                    name=\"radio-buttons-group\"\r\n                    defaultValue={nature}\r\n                >\r\n                    <FormControlLabel name=\"nature\" value=\"коробка\" control={<Radio/>} label=\"Коробка\"/>\r\n                    <FormControlLabel name=\"nature\" value=\"пачка\" control={<Radio/>} label=\"Пачка\"/>\r\n                    <FormControlLabel name=\"nature\" value=\"другое\" control={<Radio/>} label=\"Другое\"/>\r\n                </RadioGroup>\r\n                <TextField\r\n                    defaultValue={natureDescription}\r\n                    name=\"description\"\r\n                    required\r\n                    id=\"outlined-multiline-flexible\"\r\n                    label=\"Описание\"\r\n                    multiline\r\n                    maxRows={4}\r\n                    placeholder=\"ВАЖНО: После выбора Коробка и Пачка, необходимо написать количество и вес. При выборе ДРУГОЕ опишите характер груза (например: Баннер длинной 2,30м; Паллет 400кг и т.д.)\"\r\n                    fullWidth\r\n                />\r\n                <Box sx={{display: 'flex', justifyContent: 'space-between', mt: 3}}>\r\n                    <Button onClick={handleBack}>\r\n                        Назад\r\n                    </Button>\r\n                    <Button variant=\"contained\" type=\"submit\">\r\n                        Далее\r\n                    </Button>\r\n                </Box>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Nature\r\n","import React, {useState} from 'react'\r\nimport {Box, Button, FormControlLabel, Radio, RadioGroup, Typography} from \"@mui/material\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppDispatch} from \"../../../store/store\";\r\nimport {decrementStep, setPassData} from \"../../../store/slices/delivery-slice\";\r\nimport {DeliverySelector, PickUpSelector} from \"../../../store/selectors/selectors\";\r\nimport CustomAlert from \"../../../components/alert\";\r\n\r\nconst Pass = () => {\r\n    const {needPass} = useSelector(DeliverySelector)\r\n    const dispatch = useDispatch<AppDispatch>()\r\n\r\n    const [open, setOpen] = useState(false)\r\n\r\n    const handleBack = () => {\r\n        dispatch(decrementStep())\r\n    }\r\n\r\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        const data = new FormData(event.currentTarget);\r\n        const pass = data.get('pass') as string\r\n\r\n        if (pass) {\r\n            dispatch(setPassData({needPass: pass}))\r\n        } else {\r\n            setOpen(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CustomAlert open={open} setOpen={setOpen}/>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Нужен ли пропуск:\r\n            </Typography>\r\n            <Box component=\"form\" onSubmit={handleSubmit}>\r\n                <RadioGroup\r\n                    aria-labelledby=\"pick-up-pass\"\r\n                    name=\"radio-buttons-group\"\r\n                    defaultValue={needPass}\r\n                >\r\n                    <FormControlLabel name=\"pass\" value=\"нужен\" control={<Radio/>} label=\"Пропуск нужен\"/>\r\n                    <FormControlLabel name=\"pass\" value=\"не нужен\" control={<Radio/>} label=\"Пропуск не нужен\"/>\r\n                </RadioGroup>\r\n                <Box sx={{display: 'flex', justifyContent: 'space-between', mt: 3}}>\r\n                    <Button onClick={handleBack}>\r\n                        Назад\r\n                    </Button>\r\n                    <Button variant=\"contained\" type=\"submit\">\r\n                        Далее\r\n                    </Button>\r\n                </Box>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Pass\r\n","import React, {FC, useState} from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {DeliverySelector} from \"../../../store/selectors/selectors\";\r\nimport {AppDispatch} from \"../../../store/store\";\r\nimport {Dayjs} from \"dayjs\";\r\nimport CustomAlert from \"../../../components/alert\";\r\nimport {Box, Button, Grid, TextField, Typography} from \"@mui/material\";\r\nimport {LocalizationProvider, TimePicker} from \"@mui/x-date-pickers\";\r\nimport {AdapterDayjs} from \"@mui/x-date-pickers/AdapterDayjs\";\r\nimport {decrementStep, setAddressData} from \"../../../store/slices/delivery-slice\";\r\n\r\nconst Address: FC = () => {\r\n    const {\r\n        toLastName,\r\n        toFirstName,\r\n        toPhone,\r\n        toExtraPhone,\r\n        toAddress,\r\n        toExtraAddress,\r\n        toCompanyName,\r\n        toPickUpTimeMin: toPickUpTimeMinStore,\r\n        toPickUpTimeMax: toPickUpTimeMaxStore,\r\n        toDocuments,\r\n    } = useSelector(DeliverySelector)\r\n    const dispatch = useDispatch<AppDispatch>()\r\n\r\n    const [toPickUpTimeMin, setFromPickUpTimeMin] = React.useState<Dayjs | null>(toPickUpTimeMinStore);\r\n    const [toPickUpTimeMax, setFromPickUpTimeMax] = React.useState<Dayjs | null>(toPickUpTimeMaxStore);\r\n    const [open, setOpen] = useState(false)\r\n\r\n    const handleBack = () => {\r\n        dispatch(decrementStep())\r\n    }\r\n\r\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        const data = new FormData(event.currentTarget);\r\n        const lastName = data.get('lastName') as string\r\n        const firstName = data.get('firstName') as string\r\n        const phoneNumber = data.get('phoneNumber') as string\r\n        const extraPhoneNumber = data.get('extraPhoneNumber') as string\r\n        const address = data.get('address') as string\r\n        const extraAddress = data.get('extraAddress') as string\r\n        const documents = data.get('documents') as string\r\n        const company = data.get('company') as string\r\n\r\n        if (lastName && firstName && phoneNumber && address && documents && company) {\r\n            dispatch(setAddressData({\r\n                toLastName: lastName,\r\n                toFirstName: firstName,\r\n                toPhone: phoneNumber,\r\n                toExtraPhone: extraPhoneNumber,\r\n                toAddress: address,\r\n                toExtraAddress: extraAddress,\r\n                toCompanyName: company,\r\n                toPickUpTimeMin,\r\n                toPickUpTimeMax,\r\n                toDocuments: documents\r\n            }))\r\n        } else {\r\n            setOpen(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CustomAlert open={open} setOpen={setOpen}/>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Укажите данные от кого забирать:\r\n            </Typography>\r\n            <Box component=\"form\" onSubmit={handleSubmit}>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            required\r\n                            id=\"lastName\"\r\n                            name=\"lastName\"\r\n                            label=\"Фамилия\"\r\n                            fullWidth\r\n                            autoComplete=\"family-name\"\r\n                            defaultValue={toLastName}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            required\r\n                            id=\"firstName\"\r\n                            name=\"firstName\"\r\n                            label=\"Имя\"\r\n                            fullWidth\r\n                            autoComplete=\"given-name\"\r\n                            defaultValue={toFirstName}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            required\r\n                            id=\"phoneNumber\"\r\n                            name=\"phoneNumber\"\r\n                            label=\"Номер телефона\"\r\n                            fullWidth\r\n                            autoComplete=\"tel\"\r\n                            type=\"phone\"\r\n                            defaultValue={toPhone}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            id=\"extraPhoneNumber\"\r\n                            name=\"extraPhoneNumber\"\r\n                            label=\"Доп. номер телефона\"\r\n                            fullWidth\r\n                            autoComplete=\"tel\"\r\n                            type=\"phone\"\r\n                            defaultValue={toExtraPhone}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            required\r\n                            id=\"address\"\r\n                            name=\"address\"\r\n                            label=\"Адрес\"\r\n                            fullWidth\r\n                            autoComplete=\"street-address\"\r\n                            defaultValue={toAddress}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            id=\"extraAddress\"\r\n                            name=\"extraAddress\"\r\n                            label=\"Доп. адрес\"\r\n                            fullWidth\r\n                            autoComplete=\"street-address\"\r\n                            defaultValue={toExtraAddress}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <LocalizationProvider\r\n                            dateAdapter={AdapterDayjs}\r\n                            adapterLocale='ru'\r\n                        >\r\n                            <TimePicker\r\n                                label=\"Время забора с\"\r\n                                value={toPickUpTimeMin}\r\n                                onChange={(newValue) => setFromPickUpTimeMin(newValue)}\r\n                                renderInput={(params) => <TextField fullWidth {...params} />}\r\n                            />\r\n                        </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <LocalizationProvider\r\n                            dateAdapter={AdapterDayjs}\r\n                            adapterLocale='ru'\r\n                        >\r\n                            <TimePicker\r\n                                label=\"Время забора до\"\r\n                                value={toPickUpTimeMax}\r\n                                onChange={(newValue) => setFromPickUpTimeMax(newValue)}\r\n                                renderInput={(params) => <TextField fullWidth {...params} />}\r\n                            />\r\n                        </LocalizationProvider>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            required\r\n                            id=\"company\"\r\n                            name=\"company\"\r\n                            label=\"Название организации\"\r\n                            fullWidth\r\n                            autoComplete=\"organization\"\r\n                            defaultValue={toCompanyName}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            required\r\n                            id=\"documents\"\r\n                            name=\"documents\"\r\n                            label=\"Документы\"\r\n                            fullWidth\r\n                            autoComplete=\"documents\"\r\n                            defaultValue={toDocuments}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                <Box sx={{display: 'flex', justifyContent: 'space-between', mt: 3}}>\r\n                    <Button onClick={handleBack}>\r\n                        Назад\r\n                    </Button>\r\n                    <Button variant=\"contained\" type=\"submit\">\r\n                        Далее\r\n                    </Button>\r\n                </Box>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Address\r\n","import React, {FC, useState} from 'react'\r\nimport {Box, Button, FormControlLabel, Radio, RadioGroup, Typography} from \"@mui/material\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppDispatch} from \"../../../store/store\";\r\nimport {decrementStep, setCallData} from \"../../../store/slices/delivery-slice\";\r\nimport {DeliverySelector} from \"../../../store/selectors/selectors\";\r\nimport CustomAlert from \"../../../components/alert\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nconst Call: FC = () => {\r\n    const {call} = useSelector(DeliverySelector)\r\n    const dispatch = useDispatch<AppDispatch>()\r\n    const navigation = useNavigate()\r\n\r\n    const [open, setOpen] = useState(false)\r\n\r\n    const handleBack = () => {\r\n        dispatch(decrementStep())\r\n    }\r\n\r\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        const data = new FormData(event.currentTarget);\r\n        const call = data.get('call') as string\r\n\r\n        if (call) {\r\n            dispatch(setCallData({call}))\r\n            navigation('/delivery-check')\r\n        } else {\r\n            setOpen(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CustomAlert open={open} setOpen={setOpen}/>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Нужно ли созвониться заранее:\r\n            </Typography>\r\n            <Box component=\"form\" onSubmit={handleSubmit}>\r\n                <RadioGroup\r\n                    aria-labelledby=\"pick-up-call\"\r\n                    name=\"radio-buttons-group\"\r\n                    defaultValue={call}\r\n                >\r\n                    <FormControlLabel name=\"call\" value=\"15 минут\" control={<Radio/>} label=\"Созвониться за 15 минут\"/>\r\n                    <FormControlLabel name=\"call\" value=\"30 минут\" control={<Radio/>} label=\"Созвониться за 30 минут\"/>\r\n                    <FormControlLabel name=\"call\" value=\"1 час\" control={<Radio/>} label=\"Созвониться за час\"/>\r\n                    <FormControlLabel name=\"call\" value=\"3 часа\" control={<Radio/>} label=\"Созвониться за 3 часа\"/>\r\n                    <FormControlLabel name=\"call\" value=\"не нужно\" control={<Radio/>} label=\"Созвониваться не нужно\"/>\r\n                </RadioGroup>\r\n                <Box sx={{display: 'flex', justifyContent: 'space-between', mt: 3}}>\r\n                    <Button onClick={handleBack}>\r\n                        Назад\r\n                    </Button>\r\n                    <Button variant=\"contained\" type=\"submit\">\r\n                        Далее\r\n                    </Button>\r\n                </Box>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Call\r\n","import React, {FC, useCallback} from 'react'\r\nimport {Container, CssBaseline, Paper, Step, StepLabel, Stepper, Typography} from \"@mui/material\";\r\nimport Copyright from '../../components/copyright'\r\nimport {useSelector} from 'react-redux';\r\nimport {DeliverySelector} from \"../../store/selectors/selectors\";\r\nimport To from \"./steps/to\";\r\nimport Header from \"../../components/header\";\r\nimport Type from \"./steps/type\";\r\nimport Date from \"./steps/date\";\r\nimport From from \"./steps/from\";\r\nimport Nature from \"./steps/nature\";\r\nimport Pass from \"./steps/pass\";\r\nimport Address from \"./steps/address\";\r\nimport Call from \"./steps/call\";\r\n\r\nconst Delivery: FC = () => {\r\n    const {step} = useSelector(DeliverySelector)\r\n\r\n    const getStepContent = useCallback(\r\n        (step: number) => {\r\n            switch (step) {\r\n                case 0:\r\n                    return <To/>\r\n                case 1:\r\n                    return <Type/>\r\n                case 2:\r\n                    return <Date/>\r\n                case 3:\r\n                    return <From/>\r\n                case 4:\r\n                    return <Nature/>\r\n                case 5:\r\n                    return <Address/>\r\n                case 6:\r\n                    return <Pass/>\r\n                case 7:\r\n                    return <Call/>\r\n            }\r\n        }, [])\r\n\r\n    return (\r\n        <>\r\n            <CssBaseline/>\r\n            <Header/>\r\n            <Container component=\"main\" maxWidth=\"sm\" sx={{mb: 4}}>\r\n                <Paper variant=\"outlined\" sx={{my: {xs: 3, md: 6}, p: {xs: 2, md: 3}}}>\r\n                    <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n                        Доставка груза\r\n                    </Typography>\r\n                    <Stepper activeStep={step} alternativeLabel sx={{pt: 3, pb: 5}}>\r\n                        {Array(8).fill('').map((el, i) => (\r\n                            <Step key={i}>\r\n                                <StepLabel/>\r\n                            </Step>\r\n                        ))}\r\n                    </Stepper>\r\n                    <>\r\n                        {getStepContent(step)}\r\n                    </>\r\n                </Paper>\r\n                <Copyright/>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Delivery\r\n","import React, {FC, useEffect} from 'react'\r\nimport {Box, Button, Container, CssBaseline, Grid, Paper, Typography} from \"@mui/material\";\r\nimport Header from \"../../../components/header\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {DeliverySelector} from \"../../../store/selectors/selectors\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport Copyright from \"../../../components/copyright\";\r\nimport dayjs from \"dayjs\";\r\n\r\nconst DeliveryCheck: FC = () => {\r\n\r\n    const {\r\n        step,\r\n        to,\r\n        type,\r\n        ready,\r\n        date,\r\n        appNumber,\r\n        fromLastName,\r\n        fromFirstName,\r\n        fromPhone,\r\n        fromExtraPhone,\r\n        fromAddress,\r\n        fromExtraAddress,\r\n        fromCompanyName,\r\n        fromPickUpTimeMin,\r\n        fromPickUpTimeMax,\r\n        fromDocuments,\r\n        nature,\r\n        natureDescription,\r\n        toLastName,\r\n        toFirstName,\r\n        toPhone,\r\n        toExtraPhone,\r\n        toAddress,\r\n        toExtraAddress,\r\n        toCompanyName,\r\n        toPickUpTimeMin,\r\n        toPickUpTimeMax,\r\n        toDocuments,\r\n        needPass,\r\n        call\r\n    }\r\n        = useSelector(DeliverySelector)\r\n\r\n    const navigate = useNavigate()\r\n\r\n    useEffect(() => {\r\n        if (step < 7) {\r\n            navigate('delivery')\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <CssBaseline/>\r\n            <Header/>\r\n            <Container component=\"main\" maxWidth=\"md\" sx={{mb: 4}}>\r\n                <Paper variant=\"outlined\" sx={{my: {xs: 3, md: 6}, p: {xs: 2, md: 3}}}>\r\n                    <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n                        Проверка данных\r\n                    </Typography>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <Typography variant=\"h6\" align=\"center\">\r\n                                Кому везем\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Кому везем: {to}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Тип услуги: {type}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Номер заказа: {appNumber}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Дата забора: {dayjs(date).format('DD.MM.YYYY')}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Готовность заказа: {ready}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Фамилия: {fromLastName}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Имя: {fromFirstName}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Номер телефона: {fromPhone}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Доп. номер телефона: {fromExtraPhone}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Адрес: {fromAddress}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Доп. адрес: {fromExtraAddress}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Время забора с: {dayjs(fromPickUpTimeMin).format('HH : mm')}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Время забора до: {dayjs(fromPickUpTimeMax).format('HH : mm')}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Название организации: {fromCompanyName}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Документы: {fromDocuments}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Укажите тип груза: {nature}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Описание груза: {natureDescription}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Нужен ли пропуск: {needPass}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Нужно ли созвониться заранее: {call}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <Typography variant=\"h6\" align=\"center\">\r\n                                От кого везем\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Фамилия: {toLastName}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Имя: {toFirstName}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Номер телефона: {toPhone}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Доп. номер телефона: {toExtraPhone}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Адрес: {toAddress}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Доп. адрес: {toExtraAddress}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Время забора с: {dayjs(toPickUpTimeMin).format('HH : mm')}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Время забора до: {dayjs(toPickUpTimeMax).format('HH : mm')}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Название организации: {toCompanyName}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Документы: {toDocuments}\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Box sx={{display: 'flex', justifyContent: 'space-between', mt: 3}}>\r\n                        <Button>\r\n                            Назад\r\n                        </Button>\r\n                        <Button variant=\"contained\" type=\"submit\">\r\n                            Подтвердить\r\n                        </Button>\r\n                    </Box>\r\n                </Paper>\r\n                <Copyright/>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DeliveryCheck\r\n","import React, {FC, useEffect} from 'react'\r\nimport {BrowserRouter, Routes, Route, Navigate} from \"react-router-dom\";\r\nimport SignIn from \"./pages/sign-in/sign-in\";\r\nimport SignUp from \"./pages/sign-up/sign-up\";\r\nimport PickUp from \"./pages/pick-up/pick-up\";\r\nimport PickUpCheck from \"./pages/pick-up/check/pick-up-check\";\r\nimport Choose from \"./pages/choose/choose\";\r\nimport Delivery from \"./pages/delivery/delivery\";\r\nimport DeliveryCheck from \"./pages/delivery/check/delivery-check\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AuthSelector} from \"./store/selectors/selectors\";\r\nimport {checkAuth} from \"./store/slices/auth-slice\";\r\n\r\nconst AppRouter: FC = () => {\r\n    const dispatch = useDispatch()\r\n    const {isAuth} = useSelector(AuthSelector)\r\n\r\n    useEffect(() => {\r\n        dispatch(checkAuth())\r\n    }, [])\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <Routes>\r\n                {\r\n                    !isAuth ?\r\n                        <>\r\n                            <Route path='/sign-up' element={<SignUp/>}/>\r\n                            <Route path='*' element={<Navigate to=\"/sign-up\" replace />} />\r\n                        </>\r\n                        :\r\n                        <Route path='/'>\r\n                            <Route path='choose' element={<Choose/>}/>\r\n                            <Route path='pick-up' element={<PickUp/>}/>\r\n                            <Route path='pick-up-check' element={<PickUpCheck/>}/>\r\n                            <Route path='delivery' element={<Delivery/>}/>\r\n                            <Route path='delivery-check' element={<DeliveryCheck/>}/>\r\n                            <Route path='*' element={<Navigate to=\"/choose\" replace />} />\r\n                        </Route>\r\n                }\r\n            </Routes>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default AppRouter\r\n","import {configureStore} from '@reduxjs/toolkit'\r\nimport PickUpSlice from './slices/pick-up-slice'\r\nimport DeliverySlice from \"./slices/delivery-slice\";\r\nimport AuthSlice from \"./slices/auth-slice\";\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        pickUp: PickUpSlice,\r\n        delivery: DeliverySlice,\r\n        auth: AuthSlice\r\n    },\r\n})\r\n\r\nexport type RootState = ReturnType<typeof store.getState>\r\nexport type AppDispatch = typeof store.dispatch\r\n","import '@fontsource/roboto/300.css';\nimport '@fontsource/roboto/400.css';\nimport '@fontsource/roboto/500.css';\nimport '@fontsource/roboto/700.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport AppRouter from \"./app-router\";\nimport {createTheme, ThemeProvider} from \"@mui/material\";\nimport {Provider} from 'react-redux'\nimport {store} from \"./store/store\";\n\nconst theme = createTheme();\n\nconst root = ReactDOM.createRoot(\n    document.getElementById('root') as HTMLElement\n);\nroot.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <ThemeProvider theme={theme}>\n                <AppRouter/>\n            </ThemeProvider>\n        </Provider>\n    </React.StrictMode>\n);\n\n"],"sourceRoot":""}